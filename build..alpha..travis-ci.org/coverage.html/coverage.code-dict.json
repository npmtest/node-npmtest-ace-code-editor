{"/home/travis/build/npmtest/node-npmtest-ace-code-editor/test.js":"/* istanbul instrument in package npmtest_ace_code_editor */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/lib.npmtest_ace_code_editor.js":"/* istanbul instrument in package npmtest_ace_code_editor */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_ace_code_editor = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_ace_code_editor = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-ace-code-editor && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_ace_code_editor */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_ace_code_editor\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_ace_code_editor.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_ace_code_editor.rollup.js'] =\n            local.assetsDict['/assets.npmtest_ace_code_editor.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_ace_code_editor.__dirname + '/lib.npmtest_ace_code_editor.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/Makefile.dryice.js":"#!/usr/bin/env node\n/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar copy = require('architect-build/copy');\nvar build = require('architect-build/build');\n\nvar ACE_HOME = __dirname;\nvar BUILD_DIR = ACE_HOME + \"/build\";\nvar CACHE = {};\n\nfunction main(args) {\n    if (args.indexOf(\"updateModes\") !== -1) {\n        return updateModes();\n    }\n    var type = \"minimal\";\n    args = args.map(function(x) {\n        if (x[0] == \"-\" && x[1] != \"-\")\n            return \"-\" + x;\n        return x;\n    }).filter(Boolean);\n\n    if (args[2] && (args[2][0] != \"-\" || args[2].indexOf(\"h\") != -1))\n        type = args[2];\n\n    var i = args.indexOf(\"--target\");\n    if (i != -1 && args[i+1])\n        BUILD_DIR = args[i+1];\n\n    if (args.indexOf(\"--h\") == -1) {\n        if (type == \"minimal\") {\n            buildAce({\n                compress: args.indexOf(\"--m\") != -1,\n                noconflict: args.indexOf(\"--nc\") != -1,\n                shrinkwrap: args.indexOf(\"--s\") != -1\n            });\n        } else if (type == \"normal\") {\n            ace();\n        } else if (type == \"demo\") {\n            demo();\n        } else if (type == \"full\") {\n            ace();\n            demo();\n        } else if (type == \"highlighter\") {\n            // TODO\n        }\n    }\n}\n\nfunction showHelp(type) {\n    console.log(\"--- Ace Dryice Build Tool ---\");\n    console.log(\"\");\n    console.log(\"Options:\");\n    console.log(\"  minimal      Places necessary Ace files out in build dir; uses configuration flags below [default]\");\n    console.log(\"  normal       Runs four Ace builds--minimal, minimal-noconflict, minimal-min, and minimal-noconflict-min\");\n    console.log(\"  demo         Runs demo build of Ace\");\n    console.log(\"  full         all of above\");\n    console.log(\"  highlighter  \");\n    console.log(\"args:\");\n    console.log(\"  --target ./path   path to build folder\");\n    console.log(\"flags:\");\n    console.log(\"  --h                print this help\");\n    console.log(\"  --m                minify\");\n    console.log(\"  --nc               namespace require\");\n    console.log(\"  --s                shrinkwrap (combines all output files into one)\");\n    console.log(\"\");\n    if (type)\n        console.log(\"  output for \" + type + \" generated in \" + BUILD_DIR);\n}\n\nfunction ace() {\n    console.log('# ace License | Readme | Changelog ---------');\n\n    copy.file(ACE_HOME + \"/build_support/editor.html\",  BUILD_DIR + \"/editor.html\");\n    copy.file(ACE_HOME + \"/LICENSE\", BUILD_DIR + \"/LICENSE\");\n    copy.file(ACE_HOME + \"/ChangeLog.txt\", BUILD_DIR + \"/ChangeLog.txt\");\n    \n    console.log('# ace ---------');\n    for (var i = 0; i < 4; i++)\n        buildAce({compress: i & 2, noconflict: i & 1, check: true});\n}\n\nfunction demo() {\n    console.log('# kitchen sink ---------');\n\n    var version = \"\", ref = \"\";\n    try {\n        version = JSON.parse(fs.readFileSync(ACE_HOME + \"/package.json\")).version;\n        ref = fs.readFileSync(ACE_HOME + \"/.git-ref\").toString();\n    } catch(e) {}\n\n    function changeComments(data) {\n        return (data\n            .replace(\"doc/site/images/ace-logo.png\", \"demo/kitchen-sink/ace-logo.png\")\n            .replace(/<!\\-\\-DEVEL[\\d\\D]*?DEVEL\\-\\->/g, \"\")\n            .replace(/PACKAGE\\-\\->|<!\\-\\-PACKAGE/g, \"\")\n            .replace(/\\/\\*DEVEL[\\d\\D]*?DEVEL\\*\\//g, \"\")\n            .replace(/PACKAGE\\*\\/|\\/\\*PACKAGE/g, \"\")\n            .replace(\"%version%\", version)\n            .replace(\"%commit%\", ref)\n        );\n    }\n    \n    copy(ACE_HOME +\"/demo/kitchen-sink/docs/\", BUILD_DIR + \"/demo/kitchen-sink/docs/\");\n    \n    copy.file(ACE_HOME + \"/demo/kitchen-sink/logo.png\", BUILD_DIR + \"/demo/kitchen-sink/logo.png\");\n    copy.file(ACE_HOME + \"/demo/kitchen-sink/styles.css\", BUILD_DIR + \"/demo/kitchen-sink/styles.css\");\n    copy.file(ACE_HOME + \"/kitchen-sink.html\", BUILD_DIR + \"/kitchen-sink.html\", changeComments);\n\n    buildSubmodule({}, {\n        require: [\"kitchen-sink/demo\"],\n        projectType: \"demo\"\n    }, BUILD_DIR + \"/demo/kitchen-sink/demo\");\n\n    copy(ACE_HOME + \"/demo/\", BUILD_DIR + \"/demo/\", {\n        shallow: true,\n        exclude: /\\s|requirejs/,\n        include: /\\.(js|html)$/,\n        replace: function(source) {\n            if (!/^\\s*</.test(source))\n                return source;\n            var removeRequireJS;\n            source = source.replace(/<script src=\"kitchen-sink\\/require.js\"[\\s\\S]+?require\\(\\[([^\\]]+).*/, function(e, m) {\n                removeRequireJS = true;\n                var scripts = m.split(/,\\s*/);\n                var result = [];\n                function comment(str) {result.push(\"<!-- \" + str + \" -->\")}\n                function script(str) {result.push('<script src=\"../src/' + str + '.js\"></script>')}\n                scripts.forEach(function(s) {\n                    s = s.replace(/\"/g, \"\");\n                    if (s == \"ace/ace\") {\n                        comment(\"load ace\");\n                        script(\"ace\");\n                    } else {\n                        var extName = s.match(/[^/]*$/)[0];\n                        comment(\"load ace \" + extName + \" extension\");\n                        script(\"ext-\" + extName);\n                    }\n                });\n                result.push(\"<script>\");\n                return result.join(\"\\n\");\n            });\n            if (removeRequireJS)\n                source = source.replace(/\\s*\\}\\);?\\s*(<\\/script>)/, \"\\n$1\");\n            source = source.replace(/\"\\.\\.\\/build\\//g, function(e) {\n                console.log(e); return '\"../';\n            });\n            return source;\n        }\n    });\n}\n\nfunction jsFileList(path, filter) {\n    path = ACE_HOME + \"/\" + path;\n    if (!filter)\n        filter = /_test/;\n\n    return fs.readdirSync(path).map(function(x) {\n        if (x.slice(-3) == \".js\" && !filter.test(x) && !/\\s|BASE|(\\b|_)dummy(\\b|_)/.test(x))\n            return x.slice(0, -3);\n    }).filter(Boolean);\n}\n\nfunction workers(path) {\n    return jsFileList(path).map(function(x) {\n        if (x.slice(-7) == \"_worker\")\n            return x.slice(0, -7);\n    }).filter(function(x) { return !!x; });\n}\n\nfunction modeList() {\n    return jsFileList(\"lib/ace/mode\", /_highlight_rules|_test|_worker|xml_util|_outdent|behaviour|completions/);\n}\n\nfunction buildAceModule(opts, callback) {\n    // calling buildAceModuleInternal many times in parallel is slow, so we use queue\n    if (!buildAceModule.queue) {\n        buildAceModule.queue = [];\n        buildAceModule.dequeue = function() {\n            if (buildAceModule.running) return;\n            var call = buildAceModule.queue.shift();\n            buildAceModule.running = call;\n            if (call)\n                buildAceModuleInternal.apply(null, call);\n        };\n    }\n    \n    buildAceModule.queue.push([opts, function(err, result) {\n        callback && callback(err, result);\n        buildAceModule.running = null;\n        buildAceModule.dequeue();\n    }]);\n\n    if (!buildAceModule.running) {\n        buildAceModule.dequeue();\n    } else {\n        process.nextTick(buildAceModule.dequeue);\n    }\n}\n\nfunction buildAceModuleInternal(opts, callback) {\n    var cache = opts.cache == undefined ? CACHE : opts.cache;\n    var key = opts.require + \"|\" + opts.projectType;\n    if (cache && cache.configs && cache.configs[key])\n        return write(null, cache.configs[key]);\n        \n    var pathConfig = {\n        paths: {\n            ace: ACE_HOME + \"/lib/ace\",\n            \"kitchen-sink\": ACE_HOME + \"/demo/kitchen-sink\",\n            build_support:  ACE_HOME + \"/build_support\"\n        },\n        root: ACE_HOME\n    };\n        \n    function write(err, result) {\n        if (cache && key && !(cache.configs && cache.configs[key])) {\n            cache.configs = cache.configs || Object.create(null);\n            cache.configs[key] = result;\n            result.sources = result.sources.map(function(pkg) {\n                return {deps: pkg.deps};\n            });\n        } \n        \n        if (!opts.outputFile)\n            return callback(err, result);\n        \n        var code = result.code;\n        if (opts.compress) {\n            if (!result.codeMin)\n                result.codeMin = compress(result.code);\n            code = result.codeMin;\n        }\n            \n        var targetDir = getTargetDir(opts);\n        \n        var to = /^([\\\\/]|\\w:)/.test(opts.outputFile)\n            ? opts.outputFile\n            : path.join(opts.outputFolder || targetDir, opts.outputFile);\n    \n        var filters = [];\n\n        var ns = opts.ns || \"ace\";\n        if (opts.filters)\n            filters = filters.concat(opts.filters);\n    \n        if (opts.noconflict)\n            filters.push(namespace(ns));\n        var projectType = opts.projectType;\n        if (projectType == \"main\" || projectType == \"ext\") {\n            filters.push(exportAce(ns, opts.require[0],\n                opts.noconflict ? ns : \"\", projectType == \"ext\"));\n        }\n        \n        filters.push(normalizeLineEndings);\n        \n        filters.forEach(function(f) { code = f(code); });\n        \n        build.writeToFile({code: code}, {\n            outputFolder: path.dirname(to),\n            outputFile: path.basename(to)\n        }, function() {});\n        \n        callback && callback(err, result);\n    }\n    \n    build(opts.require, {\n        cache: cache,\n        quiet: opts.quiet,\n        pathConfig: pathConfig,\n        additional: opts.additional,\n        enableBrowser: true,\n        keepDepArrays: \"all\",\n        noArchitect: true,\n        compress: false,\n        ignore: opts.ignore || [],\n        withRequire: false,\n        basepath: ACE_HOME,\n        transforms: [normalizeLineEndings],\n        afterRead: [optimizeTextModules]\n    }, write);\n}\n\nfunction buildCore(options, extra, callback) {\n    options = extend(extra, options);\n    options.additional = [{\n        id: \"build_support/mini_require\", \n        order: -1000,\n        literal: true\n    }];\n    options.require =[\"ace/ace\"];\n    options.projectType = \"main\";\n    options.ns = \"ace\";\n    buildAceModule(options, callback);\n}\n\nfunction buildSubmodule(options, extra, file, callback) {\n    options = extend(extra, options);\n    getLoadedFileList(options, function(coreFiles) {\n        options.outputFile = file + \".js\";\n        options.ignore = options.ignore || coreFiles;\n        options.quiet = true;\n        buildAceModule(options, callback);\n    });\n}\n\nfunction buildAce(options) {\n    var snippetFiles = jsFileList(\"lib/ace/snippets\");\n    var modeNames = modeList();\n\n    buildCore(options, {outputFile: \"ace.js\"}, addCb());\n    // modes\n    modeNames.forEach(function(name) {\n        buildSubmodule(options, {\n            projectType: \"mode\",\n            require: [\"ace/mode/\" + name]\n        }, \"mode-\" + name, addCb());\n    });\n    // snippets\n    modeNames.forEach(function(name) {\n        if (snippetFiles.indexOf(name + \".js\") == -1)\n            addSnippetFile(name);\n        \n        buildSubmodule(options, {\n            require: [\"ace/snippets/\" + name]\n        }, \"snippets/\" + name, addCb());\n    });\n    // themes\n    jsFileList(\"lib/ace/theme\").forEach(function(name) {\n        buildSubmodule(options, {\n            projectType: \"theme\",\n            require: [\"ace/theme/\" + name]\n        }, \"theme-\" +  name, addCb());\n    });\n    // keybindings\n    [\"vim\", \"emacs\"].forEach(function(name) {\n        buildSubmodule(options, {\n            projectType: \"keybinding\",\n            require: [\"ace/keyboard/\" + name ]\n        }, \"keybinding-\" + name, addCb());\n    });\n    // extensions\n    jsFileList(\"lib/ace/ext\").forEach(function(name) {\n        buildSubmodule(options, {\n            projectType: \"ext\",\n            require: [\"ace/ext/\" + name]\n        }, \"ext-\" + name, addCb());\n    });\n    // workers\n    workers(\"lib/ace/mode\").forEach(function(name) {\n        buildSubmodule(options, {\n            projectType: \"worker\",\n            require: [\"ace/mode/\" + name + \"_worker\"],\n            ignore: [],\n            additional: [{\n                id: \"ace/worker/worker\",\n                transforms: [],\n                order: -1000\n            }]\n        }, \"worker-\" + name, addCb());\n    });\n    // \n    function addCb() {\n        addCb.count = (addCb.count || 0) + 1; \n        return done\n    }\n    function done() {\n        if (--addCb.count > 0)\n            return;\n        if (options.check)\n            sanityCheck(options)\n        console.log(\"Finished building \" + getTargetDir(options))\n    }\n}\n\nfunction getLoadedFileList(options, callback, result) {\n    if (!result) {\n        return buildCore({}, {}, function(e, result) {\n            getLoadedFileList(options, callback, result);\n        });\n    }\n    var deps = Object.create(null);\n    result.sources.forEach(function(pkg) {\n        pkg.deps && pkg.deps.forEach(function(p) {\n            if (!deps[p]) deps[p] = 1;\n        });\n    });\n    delete deps[\"ace/theme/textmate\"];\n    deps[\"ace/ace\"] = 1;\n    callback(Object.keys(deps));\n}\n\nfunction normalizeLineEndings(module) {\n    if (typeof module == \"string\") \n        module = {source: module};\n    return module.source = module.source.replace(/\\r\\n/g, \"\\n\");\n}\n\nfunction optimizeTextModules(sources) {\n    var textModules = {};\n    return sources.filter(function(pkg) {\n        if (!pkg.id) {\n            return true;\n        }\n        else if (pkg.id.indexOf(\"text!\") > -1) {\n            detectTextModules(pkg);\n            return false;\n        }\n        else {\n            pkg.source = rewriteTextImports(pkg.source, pkg.deps);\n            return true;\n        }\n    }).map(function(pkg) {\n        if (pkg && pkg.deps) {\n            pkg.deps = pkg.deps && pkg.deps.filter(function(p) {\n                return p.indexOf(\"text!\") == -1;\n            });\n        }\n        return pkg;\n    });\n    \n    function rewriteTextImports(text, deps) {\n        return text.replace(/ require\\(['\"](?:ace|[.\\/]+)\\/requirejs\\/text!(.*?)['\"]\\)/g, function(_, call) {\n            if (call) {\n                var dep;\n                deps.some(function(d) {\n                    if (d.split(\"/\").pop() == call.split(\"/\").pop()) {\n                        dep = d;\n                        return true;\n                    }\n                });\n    \n                call = textModules[dep];\n                if (call)\n                    return \" \" + call;\n            }\n        });\n    }\n    function detectTextModules(pkg) {\n        var input = pkg.source.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"');\n        if (/\\.css$/.test(pkg.id)) {\n            // remove unnecessary whitespace from css\n            input = input.replace(/\\n\\s+/g, \"\\n\");\n            input = '\"' + input.replace(/\\n/g, '\\\\\\n') + '\"';\n        } else {\n            // but don't break other files!\n            input = '\"' + input.replace(/\\n/g, '\\\\n\\\\\\n') + '\"';\n        }\n        textModules[pkg.id] = input;\n    }\n}\n\nfunction namespace(ns) {\n    return function(text) {\n        text = text\n            .toString()\n            .replace(/ACE_NAMESPACE\\s*=\\s*\"\"/, 'ACE_NAMESPACE = \"' + ns +'\"')\n            .replace(/\\bdefine\\(/g, function(def, index, source) {\n                if (/(^|[;}),])\\s*$/.test(source.slice(0, index)))\n                    return ns + \".\" + def;\n                return def;\n            });\n\n        return text;\n    };\n}\n\nfunction exportAce(ns, modules, requireBase, extModules) {\n    requireBase = requireBase || \"window\";\n    return function(text) {\n        /*globals REQUIRE_NS, MODULES, NS*/\n        var template = function() {\n            (function() {\n                REQUIRE_NS.require(MODULES, function(a) {\n                    a && a.config.init(true);\n                    if (!window.NS)\n                        window.NS = a;\n                    for (var key in a) if (a.hasOwnProperty(key))\n                        window.NS[key] = a[key];\n                });\n            })();\n        };\n        \n        if (extModules) {\n            template = function() {\n                (function() {\n                    REQUIRE_NS.require(MODULES, function() {});\n                })();\n            };\n        }\n        \n        text = text.replace(/function init\\(packaged\\) {/, \"init(true);$&\\n\");\n        \n        if (typeof modules == \"string\")\n            modules = [modules];\n            \n        return (text.replace(/;\\s*$/, \"\") + \";\" + template\n            .toString()\n            .replace(/MODULES/g, JSON.stringify(modules))\n            .replace(/REQUIRE_NS/g, requireBase)\n            .replace(/NS/g, ns)\n            .slice(13, -1)\n        );\n    };\n}\n\nfunction updateModes() {\n    modeList().forEach(function(m) {\n        var filepath = __dirname + \"/lib/ace/mode/\" + m + \".js\";\n        var source = fs.readFileSync(filepath, \"utf8\");\n        if (!/this.\\$id\\s*=\\s*\"/.test(source))\n            source = source.replace(/\\n([ \\t]*)(\\}\\).call\\(\\w*Mode.prototype\\))/, '\\n$1    this.$id = \"\";\\n$1$2');\n        \n        source = source.replace(/(this.\\$id\\s*=\\s*)\"[^\"]*\"/,  '$1\"ace/mode/' + m + '\"');\n        fs.writeFileSync(filepath, source, \"utf8\");\n    });\n}\n\nfunction generateThemesModule(themes) {\n    var themelist = [\n        'define(function(require, exports, module) {',\n        '\\n\\nmodule.exports.themes = ' + JSON.stringify(themes, null, '    '),\n        ';\\n\\n});'\n    ].join('');\n    fs.writeFileSync(__dirname + '/lib/ace/ext/themelist_utils/themes.js', themelist, 'utf8');\n}\n\nfunction addSnippetFile(modeName) {\n    var snippetFilePath = ACE_HOME + \"/lib/ace/snippets/\" + modeName;\n    if (!fs.existsSync(snippetFilePath + \".js\")) {\n        copy.file(ACE_HOME + \"/tool/templates/snippets.js\", snippetFilePath + \".js\", function(t) {\n            return t.replace(/%modeName%/g, modeName);\n        });\n    }\n    if (!fs.existsSync(snippetFilePath + \".snippets\")) {\n        fs.writeFileSync(snippetFilePath + \".snippets\", \"\");\n    }\n}\n\nfunction compress(text) {\n    var ujs = require(\"dryice\").copy.filter.uglifyjs;\n    ujs.options.mangle_toplevel = {except: [\"ACE_NAMESPACE\", \"requirejs\"]};\n    ujs.options.beautify = {ascii_only: true, inline_script: true}\n    return ujs(text);\n}\n\nfunction extend(base, extra) {\n    Object.keys(extra).forEach(function(k) {\n        base[k] = extra[k];\n    });\n    return base;\n}\n\nfunction getTargetDir(opts) {\n    var targetDir = BUILD_DIR + \"/src\";\n    if (opts.compress)\n        targetDir += \"-min\";\n    if (opts.noconflict)\n        targetDir += \"-noconflict\";\n    return targetDir;\n}\n\nfunction sanityCheck(opts) {\n    var targetDir = getTargetDir(opts);\n    require(\"child_process\").execFile(process.execPath, [\"-e\", \"(\" + function() {\n        window = global;\n        require(\"./ace\");\n        if (typeof ace.edit != \"function\")\n            process.exit(1);\n        require(\"fs\").readdirSync(\".\").forEach(function(p) {\n            if (!/ace\\.js$/.test(p) && /\\.js$/.test(p))\n                require(\"./\" + p);\n        });\n        process.exit(0);\n    } + \")()\"], {\n        cwd: targetDir\n    }, function(err, stdout) {\n        if (err)\n            throw err;\n    });\n}\n\nif (!module.parent)\n    main(process.argv);\nelse\n    exports.buildAce = buildAce;\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/static.js":"#!/usr/bin/env node\n\nvar http = require(\"http\")\n  , path = require(\"path\")\n  , mime = require(\"mime\")\n  , url = require(\"url\")\n  , fs = require(\"fs\")\n  , port = process.env.PORT || 8888\n  , ip = process.env.IP || \"0.0.0.0\";\n\n// compatibility with node 0.6\nif (!fs.exists)\n    fs.exists = path.exists;\n\nvar allowSave = process.argv.indexOf(\"--allow-save\") != -1;\nif (allowSave)\n    console.warn(\"writing files from browser is enabled\");\n\nhttp.createServer(function(req, res) {\n    var uri = unescape(url.parse(req.url).pathname)\n      , filename = path.join(process.cwd(), uri);\n\n    if (req.method == \"PUT\") {\n        if (!allowSave)\n            return error(res, 404, \"Saving not allowed pass --allow-save to enable\");\n        return save(req, res, filename);\n    }\n\n    fs.exists(filename, function(exists) {\n        if (!exists)\n            return error(res, 404, \"404 Not Found\\n\" + filename);\n\n        if (fs.statSync(filename).isDirectory()) {\n            var files = fs.readdirSync(filename);\n            res.writeHead(200, {\"Content-Type\": \"text/html\"});\n            \n            files.push(\".\", \"..\");\n            var html = files.map(function(name) {\n                var href = uri + \"/\" + name;\n                href = href.replace(/[\\/\\\\]+/g, \"/\").replace(/\\/$/g, \"\");\n                try {\n                    var stat = fs.statSync(filename + \"/\" + name);\n                    if (stat.isDirectory())\n                        href += \"/\";\n                    return \"<a href='\" + href + \"'>\" + name + \"</a><br>\";\n                } catch(e) {}\n            }).filter(Boolean);\n\n            res._hasBody && res.write(html.join(\"\"));\n            res.end();\n            return;\n        }\n\n        fs.readFile(filename, \"binary\", function(err, file) {\n            if (err) {\n                res.writeHead(500, { \"Content-Type\": \"text/plain\" });\n                res.write(err + \"\\n\");\n                res.end();\n                return;\n            }\n\n            var contentType = mime.lookup(filename) || \"text/plain\";\n            res.writeHead(200, { \"Content-Type\": contentType });\n            res.write(file, \"binary\");\n            res.end();\n        });\n    });\n}).listen(port, ip);\n\nfunction error(res, status, message, error) {\n    console.error(error || message);\n    res.writeHead(status, { \"Content-Type\": \"text/plain\" });\n    res.write(message);\n    res.end();\n}\n\nfunction save(req, res, filePath) {\n    var data = \"\";\n    req.on(\"data\", function(chunk) {\n        data += chunk;\n    });\n    req.on(\"error\", function() {\n        error(res, 404, \"Could't save file\");\n    });\n    req.on(\"end\", function() {\n        try {\n            fs.writeFileSync(filePath, data);\n        }\n        catch (e) {\n            return error(res, 404, \"Could't save file\", e);\n        }\n        res.statusCode = 200;\n        res.end(\"OK\");\n        console.log(\"saved \", filePath);\n    });\n}\n\nfunction getLocalIps() {\n    var os = require(\"os\");\n\n    var interfaces = os.networkInterfaces ? os.networkInterfaces() : {};\n    var addresses = [];\n    for (var k in interfaces) {\n        for (var k2 in interfaces[k]) {\n            var address = interfaces[k][k2];\n            if (address.family === \"IPv4\" && !address.internal) {\n                addresses.push(address.address);\n            }\n        }\n    }\n    return addresses;\n}\n\nconsole.log(\"http://\" + (ip == \"0.0.0.0\" ? getLocalIps()[0] : ip) + \":\" + port);\n\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/version.js":"#!/usr/bin/env node\nvar x;\nx = require('./package');\nconsole.log(x.version)\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/demo/show_own_source.js":"if (typeof ace == \"undefined\" && typeof require == \"undefined\") {\n    document.body.innerHTML = \"<p style='padding: 20px 50px;'>couldn't find ace.js file, <br>\"\n        + \"to build it run <code>node Makefile.dryice.js full<code>\"\n} else if (typeof ace == \"undefined\" && typeof require != \"undefined\") {\n    require([\"ace/ace\"], setValue)\n} else {\n    require = ace.require;\n    setValue()\n}\n\nfunction setValue() {\n    require(\"ace/lib/net\").get(document.baseURI, function(t){\n        var el = document.getElementById(\"editor\");\n        el.env.editor.setValue(t, 1);\n    })\n}","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/experiments/worker.js":"onmessage = function(e) {\n    onmessage = new Function(\"e\", e.data);\n};","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/tool/add_mode.js":"var fs = require('fs');\nvar lib = require('./lib');\nvar path = require('path');\n\nfunction main(displayName, extRe) {\n    var name = lib.snakeCase(displayName).replace(/[^\\w]/g, \"\");\n\n    /** demo **/\n    var demoFileExt = extRe.split(\"|\")[0] || name;\n    var demoFileName = demoFileExt[0] == \"^\" ? demoFileExt.substr(1) : name + \".\" + demoFileExt;\n    var demoFilePath = lib.AceRoot + \"demo/kitchen-sink/docs/\" + demoFileName;\n    fs.writeFileSync(demoFilePath, \"TODO add a nice demo!\\nTry to keep it short!\", \"utf8\");\n    console.log(\"Created demo file at: \" + path.normalize(demoFilePath));\n\n    /** mode **/\n    var template = fs.readFileSync(__dirname + \"/templates/mode.js\", \"utf8\");\n    var modePath = lib.AceLib + \"ace/mode/\" + name + \".js\";\n    var text = lib.fillTemplate(template, {\n        languageHighlightFilename: name,\n        languagename: name,\n        lineCommentStart: \"TODO\",\n        blockCommentStart: \"TODO\",\n        blockCommentEnd: \"TODO\"\n    });\n    fs.writeFileSync(modePath, text);\n    console.log(\"Created mode file at: \" + path.normalize(modePath));\n\n    /** highlight rules **/\n    template = fs.readFileSync(__dirname + \"/templates/highlight_rules.js\", \"utf8\");\n    var hlPath = lib.AceLib + \"ace/mode/\" + name + \"_highlight_rules.js\";\n    template = template.replace(/\\/\\* THIS[\\s\\S]*?\\*{3}\\/\\s*/, \"\");\n    text = lib.fillTemplate(template, {\n        language: name,\n        languageTokens: '{\\n\\\n            start: [{\\n\\\n                token: \"string.start\",\\n\\\n                regex: \\'\"\\',\\n\\\n                next: \"qstring\"\\n\\\n            }],\\n\\\n            qstring: [{\\n\\\n                token: \"escape\",\\n\\\n                regex: /\\\\\\\\./,\\n\\\n            }, {\\n\\\n                token: \"string.end\",\\n\\\n                regex: \\'\"\\',\\n\\\n                next: \"start\"\\n\\\n            }],\\n\\\n        }'\n    });\n    fs.writeFileSync(hlPath, text);\n    console.log(\"Created mode file at: \" + path.normalize(hlPath));\n\n    /** snippets **/\n    template = fs.readFileSync(__dirname + \"/templates/snippets.js\", \"utf8\");\n    var snipetsPath = lib.AceLib + \"ace/snippets/\" + name + \".js\";\n    text = lib.fillTemplate(template, {\n        languagename: name,\n        snippets: \"\"\n    });\n    fs.writeFileSync(snipetsPath, text);\n    console.log(\"Created snippets file at: \" + path.normalize(snipetsPath));\n\n    /** modelist **/\n    var modelistPath = lib.AceLib + \"ace/ext/modelist.js\";\n    var modelist = fs.readFileSync(modelistPath, \"utf8\").replace(/\\r\\n?/g, \"\\n\");\n    modelist = modelist.replace(/(supportedModes = {\\n)([\\s\\S]*?)(\\n^};)/m, function(_, m1, m2, m3) {\n        var langs = m2.split(/,\\n/);\n        var unsorted = [];\n        for (var i = langs.length; i--;) {\n            if (/\\s*\\/\\//.test(langs[i])) {\n                unsorted = langs.splice(i, langs.length);\n                break;\n            }\n        }\n        console.log(unsorted)\n        var offset = langs[0].trim().indexOf(\"[\");\n        var padding = Array(Math.max(offset - displayName.length - 1, 0) + 1).join(\" \");\n        var newLang = \"    \" + displayName + \":\" + padding + \"[\\\"\" + extRe + \"\\\"]\";\n        langs = langs.concat(newLang).map(function(x) {\n            return {\n                value: x,\n                id: x.match(/[^\"':\\s]+/)[0].toLowerCase()\n            };\n        });\n        langs[langs.length - 1].isNew = true;\n        \n        langs = langs.filter(function(x) {\n            console.log(x.id, displayName)\n            return x.id != displayName.toLowerCase() || x.isNew;\n        });\n        langs = langs.sort(function(a, b) {\n            return a.id.localeCompare(b.id);\n        }).map(function(x) {\n            return x.value;\n        });\n        \n        return m1 + langs.concat(unsorted).join(\",\\n\") + m3;\n    });\n    fs.writeFileSync(modelistPath, modelist, \"utf8\");\n    console.log(\"Updated modelist at: \" + path.normalize(modelistPath));\n}\n\nif (!module.parent) {\n    var args = process.argv.slice(2);\n    var displayName = args[0];\n    var extRe = args[1];\n    if (!displayName || ! extRe) {\n        console.log(\"Usage: ModeName ext1|ext2\");\n        process.exit(1);\n    }\n    main(displayName, extRe);\n} else {\n    module.exports = main;\n}\n\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/tool/lib.js":"var plist = require(\"plist\");\nvar util = require(\"util\");\nvar url = require(\"url\");\nvar cson = require(\"cson\");\n\nvar https = require(\"https\");\nvar http = require(\"http\");\n\nexports.parsePlist = function(xmlOrJSON, callback) {\n    var json;\n    if (xmlOrJSON[0] == \"<\") {\n        plist.parseString(xmlOrJSON, function(_, result) {\n            json = result[0];\n        });\n    } else {\n        try {\n            xmlOrJSON = xmlOrJSON.replace(\n                /(\"(?:\\\\.|[^\"])*\")|(?:,\\s*)+([\\]\\}])|(\\w+)\\s*:|([\\]\\}]\\s*[\\[\\{])|(\\/\\/.*|\\/\\*(?:[^\\*]|\\*(?=[^\\/]))*?\\*\\/)/g,\n                function(_, str, extraComma, noQuote, missingComma, comment) {\n                    if (comment)\n                        return \"\";\n                    if (missingComma)\n                        return missingComma[0] + \",\" + missingComma.slice(1);\n                    return str || extraComma || '\"' + noQuote + '\":';\n            });\n            json = JSON.parse(xmlOrJSON);\n        } catch(e) {\n            json = cson.parse(xmlOrJSON);\n        }\n    }\n    callback && callback(json);\n    return json;\n};\n\n\nexports.formatJSON = function(object, initialIndent) {\n    return JSON.stringify(object, null, 4).replace(/^/gm, initialIndent||\"\");\n};\n\nexports.formatJS = function(object, initialIndent) {\n    return formatJS(object, 4, initialIndent);\n};\n\nfunction formatJS(object, indent, initialIndent) {\n    if (typeof  indent == \"number\")\n        indent = Array(indent + 1).join(\" \");\n    \n    function $format(buffer, totalIndent, state, o) {\n        if (typeof o != \"object\" || !o) {\n            if (typeof o == \"string\")\n                buffer.push(JSON.stringify(o));\n            else\n                buffer.push(\"\" + o);\n        }\n        else if (Array.isArray(o)) {\n            buffer.push(\"[\")\n            \n            var len = totalIndent.length\n            var oneLine = true;\n            for (var i = 0; i < o.length; i++) {\n                if (typeof o[i] == \"string\") {\n                    len += o[i].length + 2\n                } else if (!o[i]) {\n                    len += (o[i] + \"\").length\n                } else {\n                    oneLine = false;\n                    break;\n                }\n                len += 2;\n                if (len > 60) {\n                    oneLine = false;\n                    break;\n                }\n            }\n            \n            for (var i = 0; i < o.length; i++) {\n                if (o[i] && typeof o[i] == \"object\") {\n                    $format(buffer, totalIndent, state, o[i]);\n                    if (i < o.length - 1)\n                        buffer.push(\", \");\n                } else {\n                    if (oneLine)\n                        i && buffer.push(\" \");\n                    else\n                        buffer.push(\"\\n\", totalIndent + indent)\n                    $format(buffer, totalIndent + indent, state, o[i]);\n                    if (i < o.length - 1)\n                        buffer.push(\",\");\n                }\n                \n            }\n            if (!oneLine && buffer[buffer.length - 1] != \"}\")\n                buffer.push(\"\\n\" + totalIndent)\n            buffer.push(\"]\")\n        }\n        else {\n            var keys = Object.keys(o);\n            buffer.push(\"{\", \"\\n\");\n            for (var i = 0; i < keys.length; i++) {\n                buffer.push(totalIndent + indent);\n                if (/^\\w+$/.test(keys[i]))\n                    buffer.push(keys[i]);\n                else\n                    buffer.push(JSON.stringify(keys[i]));\n                buffer.push(\": \")\n\n                if (keys[i] == \"regex\" && typeof o[keys[i]] == \"string\") {\n                    try {\n                        var re = new RegExp(o[keys[i]]);\n                        buffer.push(\"/\" + re.source.replace(/\\\\.|\\//g, function(f) {\n                            return f.length == 1 ? \"\\\\\" + f : f;\n                        }) + \"/\");\n                    } catch(e) {\n                        $format(buffer, totalIndent + indent, state, o[keys[i]]);\n                    }\n                } else {\n                    $format(buffer, totalIndent + indent, state, o[keys[i]]);\n                }\n                \n                if (i < keys.length - 1)\n                    buffer.push(\",\", \"\\n\");\n            }\n            buffer.push(\"\\n\", totalIndent, \"}\");\n        }\n    }\n    var buffer = [];\n    $format(buffer, initialIndent || \"\", {}, object);\n    return buffer.join(\"\");\n}\n\nexports.fillTemplate = function(template, replacements) {\n    return template.replace(/%(.+?)%/g, function(str, m) {\n        return replacements[m] || \"\";\n    });\n};\n\nexports.hyphenate = function(str) {\n    return str.replace(/([A-Z])/g, \"-$1\").replace(/[_\\s\\-]+/g, \"-\").toLowerCase();\n};\n\nexports.camelCase = function(str) {\n    return str.replace(/[\\-_\\s]+(.?)/g, function(x, y) {return y.toUpperCase()});\n};\n\nexports.snakeCase = function(str) {\n    return str.replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/[_\\s\\-]+/g, \"_\").toLowerCase();\n};\n\nexports.quoteString = function(str) {\n    return '\"' + str.replace(/\\\\/, \"\\\\\\\\\").replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\\\n\") + '\"';\n};\n\n\nexports.restoreJSONComments = function(objStr) {\n    return objStr.replace(/^(\\s*)comment: '(.*)'/gm, function(_, i, c) {\n        return i + \"//\" +  c.replace(/\\\\n(\\\\t)*/g, \"\\n\" + i + \"//\") + \"\\n\" + i;\n    }).replace(/ \\/\\/ ERROR/g, '\", // ERROR');\n};\n\n\nexports.download = function(href, callback) {\n\tvar options = url.parse(href);   \n\tvar protocol = options.protocol === \"https:\" ? https : http;\n\tconsole.log(\"connecting to \" + options.host + \" \" + options.path);\n\tvar request = protocol.get(options, function(res) {\n\t\tvar data = \"\";\n\t\tres.setEncoding(\"utf-8\");\n\n\t\tres.on(\"data\", function(chunk) {\n\t\t\tdata += chunk;\n\t\t});\n\n\t\tres.on(\"end\", function(){\n\t\t\tcallback(data);\n\t\t});\n\t});\n};\n\n\nexports.AceRoot = __dirname + \"/../\";\nexports.AceLib = __dirname + \"/../lib/\";\n\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/tool/mode_creator.js":"define(function(require, exports, module) {\n\n/** creates globals intentionally to make things easily accessible from console **/\n\nrequire(\"ace/ext/language_tools\");\nrequire(\"ace/config\").setDefaultValues(\"editor\", {\n    enableBasicAutocompletion: true,\n    enableSnippets: true\n});\nvar net = require(\"ace/lib/net\");\nvar Range = require(\"ace/range\").Range;\nvar util = require(\"demo/kitchen-sink/util\");\nvar layout = require(\"demo/kitchen-sink/layout\");\nvar modelist = require(\"ace/ext/modelist\");\nvar doclist = require(\"demo/kitchen-sink/doclist\");\nvar TokenTooltip = require(\"demo/kitchen-sink/token_tooltip\").TokenTooltip;\n\nvar EditSession = require(\"ace/edit_session\").EditSession;\nvar UndoManager = require(\"ace/undomanager\").UndoManager;\n\nvar DebugTokenizer = require(\"ace/tokenizer_dev\").Tokenizer;\nvar Tokenizer = require(\"ace/tokenizer\").Tokenizer;\n\n// createEditor\nvar splitEditor = window.splitEditor = util.createSplitEditor(\"editor\");\n\nvar editor1 = window.editor1 = splitEditor.editor0;\nvar editor2 = window.editor2 = splitEditor.editor1;\nnew TokenTooltip(editor2);\n\nvar timeout = null;\nvar schedule = function() {\n    if (timeout != null) {\n        clearTimeout(timeout);\n    }\n    timeout = setTimeout(run, 800);\n};\n\n\nvar setAutorunEnabled = function(val) {\n    if (val)\n        editor1.on('change', schedule);\n    else\n        editor1.removeEventListener('change', schedule);\n};\n\nutil.bindCheckbox(\"autorunEl\", setAutorunEnabled);\n\n\nvar docEl = document.getElementById(\"doc\");\nutil.fillDropdown(docEl, doclist.docs);\nutil.bindDropdown(\"doc\", function(value) {\n    doclist.loadDoc(value, function(session) {\n        if (session) {\n            editor2.setSession(session);\n            updateSaveButtonState(null, editor2);\n        }\n    });\n});\n\nvar modeEl = document.getElementById(\"modeEl\");\nutil.fillDropdown(modeEl, modelist.modes);\nvar modeSessions = {};\n\nutil.bindDropdown(modeEl, function(value) {\n    if (modeSessions[value]) {\n        editor1.setSession(modeSessions[value]);\n        schedule();\n        return;\n    }\n    var hp = \"./lib/ace/mode/\" + value + \"_highlight_rules.js\";\n    net.get(hp, function(text) {\n        var session = new EditSession(text);\n        session.setUndoManager(new UndoManager());\n\n        modeSessions[value] = session;\n        session.setMode(\"ace/mode/javascript\", function() {\n            if (session.getLine(0).match(/^\\s*\\//))\n                session.toggleFoldWidget(0); // fold licence comment\n        });\n\n        editor1.setSession(modeSessions[value]);\n        updateSaveButtonState(null, editor1);\n        schedule();\n    });\n});\n\ndocument.getElementById(\"syncToMode\").onclick = function() {\n    docEl.value = modelist.modesByName[modeEl.value].desc;\n    docEl.onchange();\n    run();\n};\n\neditor1.saveButton = document.getElementById(\"saveButton1\");\neditor2.saveButton = document.getElementById(\"saveButton2\");\neditor1.saveButton.editor = editor1;\neditor2.saveButton.editor = editor2;\n\neditor1.saveButton.onclick = function() {\n    doclist.saveDoc({\n        path: \"./lib/ace/mode/\" + modeEl.value + \"_highlight_rules.js\",\n        session: editor1.session\n    }, function(err) {\n        handleSaveResult(err, editor1);\n    });\n};\neditor1.commands.bindKey({\n    win: \"Ctrl-S\", mac: \"Cmd-s\"\n}, editor1.saveButton.onclick);\neditor2.saveButton.onclick = function() {\n    doclist.saveDoc(docEl.value, function(err) {\n        handleSaveResult(err, editor2);\n    });\n};\neditor2.commands.bindKey({\n    win: \"Ctrl-S\", mac: \"Cmd-s\"\n}, editor2.saveButton.onclick);\nfunction updateSaveButtonState(e, editor){\n    editor.saveButton.disabled = editor.session.getUndoManager().isClean();\n}\neditor1.on(\"input\", updateSaveButtonState);\neditor2.on(\"input\", updateSaveButtonState);\n\nfunction handleSaveResult(err, editor) {\n    if (err) {\n        return log(\n            \"Write access to this file is disabled.\\n\"+\n            \"To enable saving your changes to disk, clone the Ace repository\\n\"+\n            \"and run the included web server with the --allow-save option\\n\"+\n            \"`node static.js --allow-save` or `static.py --puttable=*`\"\n        );\n    }\n    editor.session.getUndoManager().markClean();\n    updateSaveButtonState(null, editor);\n}\n\ndocument.getElementById(\"perfTest\").onclick = function() {\n    var lines = editor2.session.doc.getAllLines();\n    if (!lines.length)\n        return;\n    while (lines.length < 1000) {\n        lines = lines.concat(lines);\n    }\n\n    var tk = new Tokenizer(currentRules);\n    var testPerf = function(lines, tk) {\n        var state = \"start\";\n        for (var i=0, l = lines.length; i <l; i++) {\n            state = tk.getLineTokens(lines[i], state).state;\n        }\n    };\n\n    var t = performance.now();\n    testPerf(lines, tk);\n    t = t - performance.now(t);\n    log(\"tokenized \" + lines.length + \" lines in \" + t + \" ms\");\n};\n\nutil.fillDropdown(\"themeEl\", {\n    bright: [\n        \"chrome\", \"clouds\", \"crimson_editor\", \"dawn\", \"dreamweaver\", \"eclipse\", \"github\",\n        \"solarized_light\", \"textmate\", \"tomorrow\", \"xcode\"],\n    dark: [ \"clouds_midnight\", \"cobalt\", \"idle_fingers\", \"kr_theme\", \"merbivore\", \"merbivore_soft\",\n        \"mono_industrial\", \"monokai\", \"pastel_on_dark\", \"solarized_dark\",  \"terminal\", \"tomorrow_night\",\n        \"tomorrow_night_blue\", \"tomorrow_night_bright\", \"tomorrow_night_eighties\", \"twilight\", \"vibrant_ink\"]\n});\n\nutil.bindDropdown(\"themeEl\", function(value) {\n    if (!value)\n        return;\n    editor1.setTheme(\"ace/theme/\" + value);\n    editor2.setTheme(\"ace/theme/\" + value);\n});\n\n\nfunction getDeps(src, path) {\n    var deps = [];\n    src.replace(/require\\((['\"])(.*?)\\1/g, function(a,b,c) {\n        if (c[0] == \".\") {\n            var base = path.split(\"/\");\n            c.split(\"/\").forEach(function(part) {\n                if (part == \".\") {\n                    base.pop();\n                } else if (part == \"..\") {\n                    base.pop();\n                    base.pop();\n                } else {\n                    base.push(part);\n                }\n            });\n            c = base.join(\"/\");\n        }\n        deps.push('\"' + c + '\"');\n    });\n\n    return deps;\n}\nfunction run() {\n    var src = editor1.getValue();\n    var path = \"ace/mode/new\";\n    var deps = getDeps(src, path);\n    window.require.undef(path);\n    src = src.replace(\"define(\", 'define(\"' + path +'\", [\"require\",\"exports\",\"module\",' + deps +'],');\n    try {\n        eval(src);\n        require([path], function(e) {\n            try {\n                continueRun(e);\n            } catch(e) {\n                log(e);\n            }\n        }, function(e) {\n            log(e);\n            window.require.undef(path);\n        });\n        hideLog();\n    } catch(e) {\n        log(e);\n    }\n}\nvar currentRules;\nvar continueRun = function(rules) {\n    for (var i in rules) {\n        if (typeof rules[i] == \"function\" && /rules/i.test(i)) {\n            rules = rules[i];\n            break;\n        }\n    }\n    currentRules = new rules().getRules();\n    var Tokenizer = DebugTokenizer;\n    var Mode = require(editor2.session.$mode.$id).Mode;\n    editor2.session.$mode = new Mode();\n    var tk = new Tokenizer(currentRules);\n    editor2.session.$mode.$tokenizer = tk;\n    editor2.session.bgTokenizer.setTokenizer(tk);\n    editor2.renderer.updateText();\n};\n\neditor1.commands.bindKey(\"ctrl-Return\", run);\n\nvar logEditor;\nfunction log(e) {\n    console.log(e);\n    if (!logEditor) {\n        logEditor = util.createEditor(document.getElementById(\"consoleEditor\"));\n        logEditor.session.setMode(\"ace/mode/javascript\");\n        logEditor.session.setUseWorker(false);\n    }\n    logEditor.container.parentNode.style.display = '';\n    logEditor.resize();\n    logEditor.navigateFileEnd(e);\n    logEditor.insert(e + \"\\n\");\n}\nfunction hideLog() {\n    if (logEditor)\n        logEditor.container.parentNode.style.display = 'none';\n}\n\n});\n\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/tool/regexp_tokenizer.js":"/***** regexp tokenizer */\nrequire(\"amd-loader\");\nvar lib = require(\"./lib\");\n\nvar Tokenizer = require(lib.AceLib+ \"ace/tokenizer\").Tokenizer;\nvar Tokenizer = require(lib.AceLib + \"ace/tokenizer_dev\").Tokenizer; // todo can't use tokenizer because of max token count\nvar TextHighlightRules = require(lib.AceLib + \"ace/mode/text_highlight_rules\").TextHighlightRules;\n\nvar r = new TextHighlightRules()\nr.$rules = {\n    start: [\n        {token: \"anchor\", regex: /[\\^\\$]|\\\\[bBAZzG]/, merge:false},\n        {token: \"backRef\", regex: /\\\\([1-9]|k(<\\w+\\b[+-]?\\d>|'\\w+\\b[+-]?\\d'))/, merge:false},\n        {include: \"charTypes\", merge:false},\n        {token: \"charclass\", regex: /\\[\\^?/, push: \"charclass\", merge:false},\n        {token: \"alternation\", regex: /\\|/, merge:false},\n        {include: \"quantifiers\", merge:false},\n        {include: \"groups\", merge:false},\n        {include: \"xGroup\", merge:true}\n    ],\n    charTypes: [\n        {token: \"char\", regex: /\\\\([tvnrbfae]|[0-8]{1,3}|x[\\dA-Fa-f]{2}|x7[\\dA-Fa-f]{7})/, merge:false}, // todo \\cx\n        {token: \"charType\", regex: /\\.|\\\\[wWsSdDhH]/, merge:false},\n        {token: \"charProperty\", regex: /\\\\p{\\w+}/, merge:false},\n        {token: \"char\", regex: /\\\\./, merge:false},\n    ],\n    quantifiers: [\n        {token: \"quantifier\", regex: /([?*+]|{\\d+\\b,?\\d*}|{,\\d+})[?+]?/, merge:false}\n    ],\n    charclass: [\n        {include: \"charTypes\", merge:false},\n        {token: \"charclass.start\", regex: /\\[\\^?/, push: \"charclass\", merge:false},\n        {token: \"charclass.end\", regex: /\\]/, next: \"pop\", merge:false}\n    ],\n    groups: [\n        {token: \"group\", regex: /[(]([?](#|[imx\\-]+:?|:|=|!|<=|<!|>|<\\w+>|'\\w+'|))?|[)]/,\n            onMatch: function(val, state, stack) {\n                if (!stack.groupNumber)\n                    stack.groupNumber = 1;\n\n                var isStart = val !== \")\";\n                var t = {depth:0,type: isStart ? \"group.start\" : \"group.end\", value: val};\n                t.groupType = val[2];\n\n                if (val == \"(\") {\n                    t.number = stack.groupNumber++;\n                    t.isGroup = true\n                } else if (t.groupType == \"'\" || (t.groupType == \"<\" && val.slice(-1) == \">\")) {\n                    t.name = val.slice(2, -1)\n                    t.isGroup = true\n                } else if (t.groupType == \":\") {\n                    t.isGroup = true\n                }\n\n                if (t.groupType && val.indexOf(\"x\") != -1) {\n                    var minus = val.indexOf(\"-\");\n                    if (minus == -1 || minus > val.indexOf(\"x\"))\n                        stack.xGroup = t;\n                    else\n                        stack.xGroup = null;\n                } else if (!isStart && stack.xGroup && stack.xGroup == stack[0]) {\n                    if (stack.xGroup.value.slice(-1) == \":\")\n                        stack.xGroup = null;\n                }\n\n                if (isStart) {\n                    if (stack.groupDepth) {\n                        stack[0].hasChildren = true\n                    }\n                    stack.groupDepth = (stack.groupDepth||0)+1;\n                    stack.unshift(t)\n                } else {\n                    stack.groupDepth --;\n                    t.start = stack.shift(t)\n                    t.start.end = t\n                }\n                return [t]\n            }, merge:false\n        }\n    ],\n    xGroup: [\n        {token: \"text\", regex:/\\s+/, onMatch: function(val, state, stack) {\n            return stack.xGroup ? [] : \"text\"\n        }, merge: true},\n        {token: \"text\", regex: /#/, onMatch: function(val, state, stack) {\n            if (stack.xGroup) {\n                this.next = \"comment\";\n                stack.unshift(state);\n                return  [];\n            }\n            this.next = \"\";\n            return \"text\";\n        }, merge: true}\n    ],\n    comment: [{\n        regex: \"[^\\n\\r]*|^\", token: \"\",  onMatch: function(val, state, stack) {\n            this.next = stack.shift();\n            return [];\n        }\n    }]\n}\nr.normalizeRules()\nvar tmReTokenizer = new Tokenizer(r.getRules());\n\nfunction tokenize(str) {\n    return tmReTokenizer.getLineTokens(str).tokens;\n}\n\nfunction toStr(tokens) { return tokens.map(function(x){return x.value}).join(\"\")}\n\n\nexports.tokenize = tokenize;\nexports.toStr = toStr;\nexports.tmReTokenizer = tmReTokenizer;","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/tool/tmlanguage.js":"require(\"amd-loader\");\n\nvar fs = require(\"fs\");\nvar util = require(\"util\");\nvar lib = require(\"./lib\");\nvar pathlib = require(\"path\");\nvar parseLanguage = lib.parsePlist;\n\nvar tk = require(\"./regexp_tokenizer\");\nvar tokenize = tk.tokenize;\nvar toStr = tk.toStr;\n\nfunction last(array) {return array[array.length - 1]}\n\nfunction convertHexEscape(tokens) {\n    var inChClass = false;\n    tokens.forEach(function(t) {\n        if (t.type == \"charclass\")\n            inChClass = true;\n        else if (t.type == \"charclass.end\")\n            inChClass = false;\n        else if (t.type == \"charType\"){\n            if (t.value == \"\\\\h\") {\n                t.type = \"text\";\n                t.value = inChClass ? \"\\\\da-fA-F\" : \"[\\\\da-fA-F]\";\n            }\n            else if (t.value == \"\\\\H\") {\n                if (inChClass) {\n                    console.warn(\"can't convert \\\\H in charclass\");\n                    return;\n                }\n                t.type = \"text\";\n                t.value = \"[^\\\\da-fA-F]\";\n            }\n        }\n    });\n    return tokens;\n}\n\nfunction convertNewLinesTo$(str) {\n    var tokens = tokenize(str);\n    for (var i = 0; i < tokens.length; i++) {\n        var t= tokens[i];\n        if (t.type == \"char\" && t.value == \"\\\\n\") {\n            var p = tokens[i + 1] || {};\n            if (p.type != \"quantifier\") {\n                t.value = \"$\";\n                while (p.value == \"\\\\n\" || p.type == \"quantifier\") {\n                    p.value = \"\";\n                    p = tokens[++i + 1] || {};\n                }\n            } else if (/\\?|\\*|{,|{0,/.test(p.value)) {\n                t.value = p.value = \"\";\n            } else\n                p.value = \"\";\n        }\n    }\n    return toStr(tokens).replace(/[$]+/g, \"$\");\n}\n\nfunction convertCharacterTypes(str) {\n    var tokens = tokenize(str);\n    tokens = convertHexEscape(tokens);\n\n    var warn = false;\n    tokens.forEach(function(t){\n        if (t.type == \"quantifier\") {\n            var val = t.value;\n            if (val.slice(-1) == \"+\" && val.length > 1) {\n                t.value = val.slice(0, -1);\n                warn = val;\n            }\n        }\n    });\n    if (warn)\n        console.log(\"converted possesive quantifier \" + warn + \" to *\");\n    return toStr(tokens);\n}\n\nfunction removeInlineFlags(str, rule) {\n    var tokens = tokenize(str);\n    var caseInsensitive = false;\n    tokens.forEach(function(t, i) {\n        if (t.type == \"group.start\" && /[imsx]/.test(t.value)) {\n            if (/i/.test(t.value))\n                caseInsensitive = true;\n            t.value = t.value.replace(/[imsx\\-]/g, \"\");\n            var next = tokens[i + 1];\n            if (next && next.type == \"group.end\") {\n                t.value = next.value = \"\";\n            }\n        }\n    });\n    if (caseInsensitive && rule)\n        rule.caseInsensitive = true;\n    return toStr(tokens);\n}\n\nfunction convertToNonCapturingGroups(str) {\n    var tokens = tokenize(str);\n    tokens.forEach(function(t, i) {\n        if (t.type == \"group.start\" && t.value == \"(\")\n            t.value += \"?:\";\n    });\n    return toStr(tokens);\n}\n\nfunction simplifyNonCapturingGroups(str) {\n    var tokens = tokenize(str);\n    var t = tokens[0] || {};\n    if (t.type == \"group.start\" && t.value == \"(?:\"\n        && t.end == last(tokens)) {\n        t.value = t.end.value = \"\";\n    }\n    var i = 0;\n    function iter(f) {\n        for (i = 0; i < tokens.length; i++)\n            f(tokens[i]);\n    }\n    function iterGroup(end, f) {\n        for (var i1 = i + 1; i1 < tokens.length; i1++) {\n            var t = tokens[i1];\n            if (t == end)\n                break;\n            var index = f && f(t);\n            if (index > i1)\n                i1 = index;\n        }\n        return i1;\n    }\n\n    iter(function (t) {\n        if (t.type == \"group.start\" && t.value == \"(?:\") {\n            if (!t.end)\n                return console.error(\"malformed regex: \" + str);\n\n            var canRemove = true;\n            var next = tokens[tokens.indexOf(t.end, i) + 1];\n            if (next && next.type == \"quantifier\")\n                return;\n            iterGroup(t.end, function(t) {\n                if (t.type == \"alternation\")\n                    canRemove = false;\n                else if (t.type == \"group.start\" && t.end)\n                    return iterGroup(t.end);\n            });\n            if (canRemove)\n                t.value = t.end.value = \"\";\n        }\n    });\n\n    return toStr(tokens);\n}\n\nfunction removeLookBehinds(str) {\n    var tokens = tokenize(str);\n    var toRemove = null;\n    tokens.forEach(function(t, i) {\n        if (!toRemove && t.type == \"group.start\" && /</.test(t.value)) {\n            toRemove = t.end;\n            toRemove.content = [];\n        }\n        if (toRemove) {\n            toRemove.content.push(t.value);\n            t.value = \"\";\n        }\n        if (t == toRemove) {\n            var c = toRemove.content.slice(1, -1).join(\"\");\n            if (/\\^/.test(c))\n                toRemove.value = \"(?:\" + c +\")\";\n\n            toRemove = null;\n        }\n    });\n    return toStr(tokens);\n}\n\nfunction convertBeginEndBackrefs(rule) {\n    if (!/\\\\\\d/.test(rule.end))\n        return;\n    var startTokens = tokenize(rule.begin);\n    var endTokens = tokenize(rule.end);\n\n\n    var groups = {};\n    startTokens.forEach(function(t, i) {\n        if (t.number && t.end && t.type == \"group.start\") {\n            var endIndex = startTokens.indexOf(t.end, i + 1);\n            var content = startTokens.slice(i+1, endIndex);\n            groups[t.number] = toStr(content);\n        }\n    });\n\n    endTokens.forEach(function(t) {\n        if (t.type == \"backRef\") {\n            var num = t.value.substr(1);\n            if (groups[num])\n                t.value = \"(?:\" + groups[num] + \")\";\n        }\n    });\n\n    rule.end = toStr(endTokens);\n\n    console.warn(\"Begin-End-Backreference is detected\", rule);\n}\n\nfunction checkForNamedCaptures(str) {\n    var tokens = tokenize(str);\n    tokens.forEach(function(t) {\n        if (t.type == \"group.start\" && t.name)\n            console.warn(\"named capture not implemented\", str);\n        if (t.type == \"backRef\")\n            console.warn(\"backRef not implemented \", str);\n    });\n}\n\nfunction fixGroups(captures, defaultName, regex) {\n    var tokens = tokenize(regex);\n\n    var opened = [], isStart = true, i = 0;\n    function open() {\n        var t = {value: \"(\", type: \"group.start\", isGroup: true};\n        opened.push(t);\n        tokens.splice(i++, 0, t);\n    }\n    function close() {\n        var t = {value: \")\", type: \"group.start\"};\n        t.start = opened.pop();\n        t.start.end = t;\n        tokens.splice(i++, 0, t);\n    }\n    function tryOpen(){if (isStart) {open(); isStart = false}}\n    function tryClose(){if (opened.length) close()}\n    function skip(t) {\n        var i1 = tokens.indexOf(t.end, i);\n        if (i1 > i)\n            i = i1;\n    }\n    function lst(t) {return t[t.length - 1]}\n    function iter(f) {\n        for (i = 0; i < tokens.length; i++)\n            f(tokens[i]);\n    }\n    function iterGroup(end, f) {\n        for (var i1 = i + 1; i1 < tokens.length; i1++) {\n            var t = tokens[i1];\n            if (t == end)\n                break;\n            f(t);\n        }\n    }\n    function peek() { return tokens[i + 1] || {}}\n\n    // groupify\n    iter(function(t){\n        if (t.type == \"group.start\") {\n            tryClose();\n            isStart = true;\n            if (!t.hasChildren || t.isSpecial)\n                skip(t);\n        } else if (t.type == \"group.end\") {\n            isStart = true;\n            tryClose();\n        } else if (t.type == \"alternation\") {\n            isStart = true;\n            tryClose();\n        } else if (t.type != \"anchor\" && t.type != \"quantifier\"){\n            tryOpen();\n        }\n    });\n    tryClose();\n\n    // remove redundand groups\n    var names = [defaultName];\n    iter(function(t){\n        if (t.type == \"group.start\" && !t.isSpecial) {\n            var captureName = captures[t.number];\n\n            if (!t.hasChildren) {\n                t.tokenName = captureName || lst(names);\n                skip(t);\n            }  else {\n                var hasCapture = false;\n                iterGroup(t.end, function(t1) {\n                    if (t1.type == \"group.start\" && captures[t1.number])\n                        hasCapture = true;\n                });\n                if (hasCapture) {\n                    t.value = \"(?:\";\n                    if (captureName) {\n                        names.push(captureName);\n                        t.isTokenGroup = true;\n                    }\n                } else {\n                    t.tokenName = captureName || lst(names);\n                    iterGroup(t.end, function(t1) {\n                        if (t1.value == \"(\")\n                            t1.value = \"(?:\";\n                    });\n                }\n            }\n        } else if (t.type == \"group.end\") {\n            if (t.start.isTokenGroup)\n                names.pop();\n        }\n    });\n\n    // wrap capturing groups with quantifier\n    iter(function(t){\n        if (t.type == \"group.end\" && t.start.value == \"(\" && peek().type == \"quantifier\") {\n            peek().value += \")\";\n            t.start.value += \"(?:\";\n        }\n    });\n\n    names = [];\n    tokens.forEach(function(t) {\n        if (t.value == \"(\" || t.value == \"((?:\" )\n            t.tokenName && names.push(t.tokenName);\n    });\n    return {\n        names: names,\n        regex: toStr(tokens)\n    };\n}\n\n/***** converter */\n\nfunction logDebug(string, obj) {\n    console.log(string, obj);\n}\n\n\n// tmLanguage processor\n\n// for tracking token states\nvar states = {start: []};\n\nfunction processRules(rules){\n    if (rules.patterns)\n        states.start = processPatterns(rules.patterns);\n    if (rules.repository)\n        processRepository(rules.repository);\n    return states;\n}\nfunction processRepository(r) {\n    for (var key in r) {\n        var p = r[key];\n        if (p.begin)\n            var stateObj = [processPattern(r[key])];\n        else if (p.patterns && !p.repository)\n            var stateObj = processPatterns(p.patterns);\n        else\n            var stateObj = [processPattern(r[key])];\n\n        if (stateObj)\n            states[\"#\" + key] = stateObj;\n    }\n}\nfunction processPatterns(pl) {\n    return pl.map(processPattern);\n}\nfunction processPattern(p) {\n    if (p.end == \"(?!\\\\G)\" && p.patterns && p.patterns.length == 1) {\n        var rule = processPattern(p.patterns[0]);\n    }\n    else if (p.begin != null && p.end != null) {\n        convertBeginEndBackrefs(p);\n\n        var rule = simpleRule(p.begin, p.name, p.beginCaptures || p.captures);\n\n        var next = processPatterns(p.patterns || []);\n        var endRule = simpleRule(p.end, p.name, p.endCaptures || p.captures);\n        endRule.next = \"pop\";\n        if (p.applyEndPatternLast)\n            next.push(endRule);\n        else\n            next.unshift(endRule);\n\n        if (p.name || p.contentName)\n            next.push({defaultToken: p.name || p.contentName});\n\n        rule.push = next;\n\n        rule = removeIncludeSelf(rule);\n    }\n    else if (p.match) {\n        var rule = simpleRule(p.match, p.name, p.captures);\n    }\n    else if (p.include) {\n        var rule =  {include: p.include};\n    }\n    else {\n        var rule =  {todo: p};\n    }\n\n    if (p.comment)\n        rule.comment = (rule.comment || \"\") +  p.comment;\n\n    if (p.repository)\n        processRepository(p.repository);\n    return rule;\n}\nfunction simpleRule(regex, name, captures) {\n    name = name || \"text\";\n    var rule = {token: \"\", regex: \"\"};\n\n    var origRegex = regex;\n    regex = transformRegExp(origRegex, rule);\n    if (captures) {\n        var tokenArray = [];\n        Object.keys(captures).forEach(function(x){\n            tokenArray[x] = captures[x] && captures[x].name;\n        });\n\n        if (tokenArray.length == 1) {\n            name = tokenArray[0];\n        } else {\n            var fixed = fixGroups(tokenArray, name, regex);\n            name = fixed.names;\n            regex = fixed.regex;\n            if (name.length == 1)\n                name = name[0];\n        }\n    }\n\n    if (typeof name == \"string\")\n        regex = convertToNonCapturingGroups(regex);\n\n    regex = simplifyNonCapturingGroups(regex);\n\n    try {new RegExp(regex);} catch(e) {\n        rule.TODO = \"FIXME: regexp doesn't have js equivalent\";\n        rule.originalRegex = origRegex;\n\n        // lookbehinds are mostly used to force ordering\n        // regex = removeLookBehinds(regex);\n    }\n    rule.token = name;\n    rule.regex = regex;\n    return rule;\n}\n\nfunction removeIncludeSelf(rule) {\n    if (!rule.push)\n        return rule;\n    var hasSelfInclude = false;\n    var escapeRule = null;\n    var complexSelfInclude = false;\n    rule.push.forEach(function(sub) {\n        if (sub.include == \"$self\") {\n            hasSelfInclude = true;\n        } else if (sub.defaultToken) {\n            return;\n        } else if (sub.next == \"pop\") {\n            escapeRule = sub;\n        } else\n            complexSelfInclude = true;\n    });\n\n    if (hasSelfInclude) {\n        console.warn(\"can't convert include $self\");\n        return {todo: rule};\n        \n        if (complexSelfInclude) {\n            console.warn(\"can't convert include $self\");\n            rule.toDo = \"include $self not fully supported\";\n            return rule;\n        }\n        console.warn(\"include $self not fully supported\");\n        delete rule.push;\n        delete escapeRule.next;\n        rule.includeSelf = true;\n        escapeRule.includeSelf = true;\n        return [rule, escapeRule];\n    }\n    return rule;\n}\n\n// regex transformation\n\nfunction removeXFlag(str) {\n    var tokens = tokenize(str);\n    return toStr(tokens);\n}\n\nfunction transformRegExp(str, rule) {\n    str = convertNewLinesTo$(str);\n\n    str = removeInlineFlags(str, rule);\n\n    str = str.replace(/(\\\\[xu]){([a-fA-F\\d]+)}/g, '$1$2');\n\n    str = convertCharacterTypes(str, rule);\n\n    checkForNamedCaptures(str);\n\n    return str;\n}\n\n//\nfunction extractPatterns(tmRules) {\n    return  processRules(tmRules);\n}\n\n\nfunction detectLoops(states) {\n    var data = {};\n    var keys = Object.keys(states);\n    var flattenedStates = {};\n    function addRef(item, name) {\n        if (item.refs.indexOf(name) == -1)\n            item.refs.push(name);\n    }\n    function anonStateId(name, next) {\n        var i = 0, old = name;\n        while (flattenedStates[name] || states[name]) {\n            name = old + \"_\" + i++;\n        }\n        // console.log(old, name)\n        return name;\n    }\n    function addState(key, rules) {\n        if (rules && !flattenedStates[key])\n            flattenedStates[key] = rules;\n        return rules || flattenedStates[key];\n    }\n    \n    \n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var state = addState(key, states[key]);\n        \n        var item = data[key] || (data[key] = {/* name: key, */ refs: []});\n        state.forEach(function(rule) {\n            var next = rule.push || rule.next;\n            if (next == \"pop\") {\n                // nothing\n            } else if (typeof next == \"string\") {\n                addRef(item, next);\n            } else if (next) {\n                var anonId = anonStateId(key, next);\n                addState(anonId, next);\n                if (rule.push)\n                    addRef(item, anonId);\n                keys.push(anonId);\n            } else if (rule.include) {\n                addRef(item, rule.include);\n            }\n        });\n    }\n    \n    \n    var cycles = [];\n    function addPath(start, path) {\n        var node = data[start];\n        path.push(start);\n        if (!node || !node.refs)\n            console.log(start);\n        var i = path.indexOf(start);\n        if (i > -1 && i != path.length - 1 || start == \"$self\" || start == \"$base\") {\n            if (i != -1)\n                path = path.slice(i);\n            for (var j = 0; j < cycles.length; j++) {\n                if (cycles[j] + \"\" == path + \"\")\n                    return;\n            }\n            return cycles.push(path);\n        }\n        \n        if (!node || !node.refs || !node.refs.length || path.length>30)\n            return;\n        node.refs.forEach(function(x) {\n            addPath(x, path.concat());\n        });\n    }\n    addPath(\"start\", []);\n    \n    console.error(cycles.join(\"\\n\"));\n}\n\n\nfunction test(fileName) {\n    console.log(\"testing highlighter\");\n    try {\n        var module = require(fileName);\n        var Mode = module[Object.keys(module)[0]];\n        var mode = new Mode();\n        mode.getTokenizer().getLineTokens(\"hello world\");\n    } catch(e) {\n        console.log(e);\n    }\n}\n\nfunction guessComment(patterns) {\n    var comment = {};\n    for (var i in patterns) {\n        var state = patterns[i];\n        state.forEach(function(r) {\n            if (typeof r.token == \"string\") {\n                if (/\\bcomment\\b/.test(r.token)) {\n                    comment.line = r.regex;\n                }\n            }\n        });\n    }\n\n    return comment;\n}\n\n// cli stuff\nvar modeTemplate = fs.readFileSync(__dirname + \"/templates/mode.js\", \"utf8\");\nvar modeHighlightTemplate = fs.readFileSync(__dirname + \"/templates/highlight_rules.js\", \"utf8\");\n\nfunction fetchAndConvert(name) {\n    console.log(\"Converting \" + name);\n    if (/^http/.test(name)) {\n        if (/:\\/\\/github.com/.test(name)) {\n            name = name.replace(/\\/blob\\//, \"/\").replace(\"github.com\", \"raw.github.com\");\n        }\n        return lib.download(name, function(data) {\n            convertTmLanguage(name, data);\n        });\n    }\n    var path = /^(\\/|\\w:)/.test(name) ? name : process.cwd() + \"/\" + name;\n    var langStr = fs.readFileSync(path, \"utf8\");\n    convertTmLanguage(name, langStr);\n}\n\n\nfunction convertTmLanguage(name, langStr) {\n    parseLanguage(langStr, function(language) {\n        var highlighterFilename = lib.snakeCase(language.name).replace(/[^\\w]/g, \"\");\n        var languageNameSanitized = lib.camelCase(language.name).replace(/[^\\w]/g, \"\");\n        \n        require(\"./add_mode\")(languageNameSanitized, (language.fileTypes || []).join(\"|\"));\n\n        var highlighterFile = pathlib.normalize(lib.AceLib + \"ace/mode/\" + highlighterFilename + \"_highlight_rules.js\");\n        var modeFile = pathlib.normalize(lib.AceLib + \"ace/mode/\" + highlighterFilename + \".js\");\n\n        if (devMode) {\n            console.log(util.inspect(language.patterns, false, 4));\n            console.log(util.inspect(language.repository, false, 4));\n        }\n\n        var patterns = extractPatterns(language);\n        detectLoops(patterns);\n        \n        // var uuid = language.uuid\n        delete language.uuid;\n        delete language.patterns;\n        delete language.repository;\n\n        var comment = guessComment(patterns);\n        var languageMode = lib.fillTemplate(modeTemplate, {\n            language: languageNameSanitized,\n            languageHighlightFilename: highlighterFilename,\n            lineCommentStart: JSON.stringify(comment.line || \"//\"),\n            blockCommentStart: JSON.stringify(comment.start || \"/*\"),\n            blockCommentEnd: JSON.stringify(comment.end || \"*/\")\n        });\n\n        var languageHighlightRules = lib.fillTemplate(modeHighlightTemplate, {\n            language: languageNameSanitized,\n            languageTokens: lib.formatJS(patterns, \"    \").trim(),\n            uuid: language.uuid,\n            name: name,\n            metaData: lib.formatJS(language, \"\").trim()\n        });\n\n        if (devMode) {\n            console.log(languageMode);\n            console.log(languageHighlightRules);\n            console.log(\"Not writing, 'cause we're in dev mode, baby.\");\n        }\n        else {\n            fs.writeFileSync(highlighterFile, languageHighlightRules);\n            fs.writeFileSync(modeFile, languageMode);\n            console.log(\"created file \" + highlighterFile);\n            test(modeFile);\n        }\n    });\n}\n\nif (!module.parent) {\n    var args = process.argv.splice(2);\n    var devMode = args[0] == \"--dev\";\n    if (devMode)\n        args.shift();\n    if (args.length < 1) {\n        console.error(\"Usage: node tmlanguage.js [--dev] path/or/url/to/syntax.file ...\");\n        process.exit(1);\n    }\n    args.forEach(fetchAndConvert);\n} else {\n    exports.fetchAndConvert = fetchAndConvert;\n}\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/tool/tmsnippets.js":"var fs = require('fs')\nvar plist = require('plist')\n\nvar snippets = [];\nvar path = process.argv[2] || process.cwd();\nfunction readSnippet(path, name) {\n    if (name)\n        path += name\n    console.log(name)\n    if (!/\\.(tmSnippet|sublime-snippet|plist)$/i.test(path))\n        return\n    console.log(name)\n    var plistString = fs.readFileSync(path, \"utf8\");\n    plist.parseString(plistString, function(_, plist){\n        snippets.push(plist)\n    })\n}\n\n// read\nfunction readDir(path) {\n    if (fs.statSync(path).isDirectory()) {\n        path += \"/\"\n        fs.readdirSync(path).forEach(function(name) {        \n            if (/snippets/i.test(name))\n                readSnippetsInDir(path + name)\n            else\n                readDir(path + name)\n        })\n    }\n}\nfunction readSnippetsInDir(path) {\n    if (fs.statSync(path).isDirectory()) {\n        path += \"/\"\n        snippets.push(path)\n        fs.readdirSync(path).forEach(function(name) {\n            readSnippet(path, name)\n        })\n    } else {\n        readSnippet(path)\n    }\n}\nreadDir(path) \n// transform\nsnippets = snippets.map(function(s) {\n    if (s.length == 1)\n        s = s[0]\n    if (s.scope)\n        s.scope = s.scope.replace(/source\\./g, \"\")\n    delete s.uuid\n    return s\n})\n\n// stringify\nvar indent = \"\"\nvar text = JSON.stringify(snippets, null, 1)\n    // .replace(/(\\n\\s*)\"(\\w+)\"\\:/g, \"$1$2:\")\n    .replace(/(\\n\\s*)\\},\\n\\s*{/g, \"$1}, {\")\n    .replace(/\\[\\n\\s*\\{\\n/g, \"[{\\n\").replace(/(\\n\\s*)\\}\\n\\s*\\]/g, \"$1}]\")\n    .replace(/\\[\\n\\s*[^\\[\\{\\}\\]]{0,100}\\]/g, function(x){return x.replace(/\\n\\s*/g, \" \")})\n    .replace(/\\:\\s*\\{\\n\\s*(.*)\\n\\s*\\}/g, \": {$1}\")\n    .split(/\\n\\s*/).map(function(x){\n        if (x[0] == \"}\" || x[0] == \"]\")\n            indent = indent.substr(1)\n            \n        if (x.slice(-1) == \"{\" || x.slice(-1) == \"[\") {        \n            indent += \"\\t\"\n            return  indent.substr(1) + x\n        }\n        return indent +x\n    }).join(\"\\n\")\n    .replace(/\\\\[\\\\tnr]/g, function(a){\n        if (a[1] == \"\\\\\")\n            return a\n        else if (a[1] == \"t\")\n            return \"\\t\"\n        else\n            return \"\\\\n\"+\"\\\\\" + \"\\n\"\n    })\n\nfs.writeFileSync(path += \"/./ace.snippets.js\", text)\n\nconsole.log(path)","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/tool/tmtheme.js":"var fs = require(\"fs\");\nvar path = require(\"path\");\nvar util = require(\"util\");\nvar cssParse = require(\"css-parse\");\nvar cssStringify = require(\"css-stringify\");\n\nvar parseString = require(\"plist\").parseString;\nfunction parseTheme(themeXml, callback) {\n    parseString(themeXml, function(_, theme) {\n        callback(theme[0])\n    });\n}\n\nvar unsupportedScopes = { };\n\nvar supportedScopes = {\n   \"keyword\": \"keyword\",\n   \"keyword.operator\": \"keyword.operator\",\n   \"keyword.other.unit\": \"keyword.other.unit\",\n\n   \"constant\": \"constant\",\n   \"constant.language\": \"constant.language\",\n   \"constant.library\": \"constant.library\",\n   \"constant.numeric\": \"constant.numeric\",\n   \"constant.character\" : \"constant.character\",\n   \"constant.character.escape\" : \"constant.character.escape\",\n   \"constant.character.entity\": \"constant.character.entity\",\n   \"constant.other\" : \"constant.other\",\n\n   \"support\": \"support\",\n   \"support.function\": \"support.function\",\n   \"support.function.dom\": \"support.function.dom\",\n   \"support.function.firebug\": \"support.firebug\",\n   \"support.function.constant\": \"support.function.constant\",\n   \"support.constant\": \"support.constant\",\n   \"support.constant.property-value\": \"support.constant.property-value\",\n   \"support.class\": \"support.class\",\n   \"support.type\": \"support.type\",\n   \"support.other\": \"support.other\",\n\n   \"function\": \"function\",\n   \"function.buildin\": \"function.buildin\",\n\n   \"storage\": \"storage\",\n   \"storage.type\": \"storage.type\",\n\n   \"invalid\": \"invalid\",\n   \"invalid.illegal\": \"invalid.illegal\",\n   \"invalid.deprecated\": \"invalid.deprecated\",\n\n   \"string\": \"string\",\n   \"string.regexp\": \"string.regexp\",\n\n   \"comment\": \"comment\",\n   \"comment.documentation\": \"comment.doc\",\n   \"comment.documentation.tag\": \"comment.doc.tag\",\n\n   \"variable\": \"variable\",\n   \"variable.language\": \"variable.language\",\n   \"variable.parameter\": \"variable.parameter\",\n\n   \"meta\": \"meta\",\n   \"meta.tag.sgml.doctype\": \"xml-pe\",\n   \"meta.tag\": \"meta.tag\",\n   \"meta.selector\": \"meta.selector\",\n   \n   \"entity.other.attribute-name\": \"entity.other.attribute-name\",\n   \"entity.name.function\": \"entity.name.function\",\n   \"entity.name\": \"entity.name\",\n   \"entity.name.tag\": \"entity.name.tag\",\n\n   \"markup.heading\": \"markup.heading\",\n   \"markup.heading.1\": \"markup.heading.1\",\n   \"markup.heading.2\": \"markup.heading.2\",\n   \"markup.heading.3\": \"markup.heading.3\",\n   \"markup.heading.4\": \"markup.heading.4\",\n   \"markup.heading.5\": \"markup.heading.5\",\n   \"markup.heading.6\": \"markup.heading.6\",\n   \"markup.list\": \"markup.list\",\n\n   \"collab.user1\": \"collab.user1\"\n};\n\nvar fallbackScopes = {\n    \"keyword\": \"meta\",\n    \"support.type\": \"storage.type\",\n    \"variable\": \"entity.name.function\"\n};\n\nfunction extractStyles(theme) {\n    var globalSettings = theme.settings[0].settings;\n\n    var colors = {\n        \"printMargin\": \"#e8e8e8\",\n        \"background\": parseColor(globalSettings.background),\n        \"foreground\": parseColor(globalSettings.foreground),\n        \"gutter\": \"#e8e8e8\",\n        \"selection\": parseColor(globalSettings.selection),\n        \"step\": \"rgb(198, 219, 174)\",\n        \"bracket\": parseColor(globalSettings.invisibles),\n        \"active_line\": parseColor(globalSettings.lineHighlight),\n        \"cursor\": parseColor(globalSettings.caret),\n\n        \"invisible\": \"color: \" + parseColor(globalSettings.invisibles) + \";\"\n    };\n\n    for (var i=1; i<theme.settings.length; i++) {\n        var element = theme.settings[i];\n        if (!element.scope || !element.settings)\n            continue;\n        var scopes = element.scope.split(/\\s*[|,]\\s*/g);\n        for (var j = 0; j < scopes.length; j++) {\n            var scope = scopes[j];\n            var style = parseStyles(element.settings);\n        \n            var aceScope = supportedScopes[scope];\n            if (aceScope) {\n                colors[aceScope] = style;\n            }\n            else if (style) {\n                unsupportedScopes[scope] = (unsupportedScopes[scope] || 0) + 1;\n            }\n        }        \n    }\n    \n    for (var i in fallbackScopes) {\n        if (!colors[i])\n            colors[i] = colors[fallbackScopes[i]];\n    }\n\n    if (!colors.fold) {\n        var foldSource = colors[\"entity.name.function\"] || colors.keyword;\n        if (foldSource) {\n            colors.fold = foldSource.match(/\\:([^;]+)/)[1];\n        }\n    }\n    \n    colors.gutterBg = colors.background\n    colors.gutterFg = mix(colors.foreground, colors.background, 0.5)\n\n    if (!colors.selected_word_highlight)\n        colors.selected_word_highlight =  \"border: 1px solid \" + colors.selection + \";\";\n\n    colors.isDark = (luma(colors.background) < 0.5) + \"\";\n    \n    return colors;\n};\n\nfunction mix(c1, c2, a1, a2) {\n    c1 = rgbColor(c1);\n    c2 = rgbColor(c2);\n    if (a2 === undefined)\n        a2 = 1 - a1\n    return \"rgb(\" + [\n        Math.round(a1*c1[0] + a2*c2[0]),\n        Math.round(a1*c1[1] + a2*c2[1]),\n        Math.round(a1*c1[2] + a2*c2[2])\n    ].join(\",\") + \")\";\n}\n\nfunction rgbColor(color) {\n    if (typeof color == \"object\")\n        return color;\n    if (color[0]==\"#\")\n        return color.match(/^#(..)(..)(..)/).slice(1).map(function(c) {\n            return parseInt(c, 16);\n        });\n    else\n        return color.match(/\\(([^,]+),([^,]+),([^,]+)/).slice(1).map(function(c) {\n            return parseInt(c, 10);\n        });\n}\nfunction luma(color) {\n    var rgb = rgbColor(color);\n    return (0.21 * rgb[0] + 0.72 * rgb[1] + 0.07 * rgb[2]) / 255;\n}\n\nfunction parseColor(color) {\n    if (color.length == 4)\n        color = color.replace(/[a-fA-F\\d]/g, \"$&$&\");\n    if (color.length == 7)\n        return color;\n    else {\n        if (!color.match(/^#(..)(..)(..)(..)$/))\n            console.error(\"can't parse color\", color);\n        var rgba = color.match(/^#(..)(..)(..)(..)$/).slice(1).map(function(c) {\n            return parseInt(c, 16);\n        });\n        rgba[3] = (rgba[3] / 0xFF).toPrecision(2);\n        return \"rgba(\" + rgba.join(\", \") + \")\";\n    }\n}\n\nfunction parseStyles(styles) {\n    var css = [];\n    var fontStyle = styles.fontStyle || \"\";\n    if (fontStyle.indexOf(\"underline\") !== -1) {\n        css.push(\"text-decoration:underline;\");\n    }\n    if (fontStyle.indexOf(\"italic\") !== -1) {\n        css.push(\"font-style:italic;\");\n    }\n\n    if (styles.foreground) {\n        css.push(\"color:\" + parseColor(styles.foreground) + \";\");\n    }\n    if (styles.background) {\n        css.push(\"background-color:\" + parseColor(styles.background) + \";\");\n    }\n\n    return css.join(\"\\n\");\n}\n\nfunction fillTemplate(template, replacements) {\n    return template.replace(/%(.+?)%/g, function(str, m) {\n        return replacements[m] || \"\";\n    });\n}\n\nfunction hyphenate(str) {\n    return str.replace(/([A-Z])/g, \"-$1\").replace(/_/g, \"-\").toLowerCase();\n}\n\nfunction quoteString(str) {\n    return '\"' + str.replace(/\\\\/, \"\\\\\\\\\").replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\\\n\") + '\"';\n}\n\nvar cssTemplate = fs.readFileSync(__dirname + \"/templates/theme.css\", \"utf8\");\nvar jsTemplate = fs.readFileSync(__dirname + \"/templates/theme.js\", \"utf8\");\n\nfunction normalizeStylesheet(rules) {\n    for (var i = rules.length; i--; ) {\n        var s = JSON.stringify(rules[i].declarations);\n        for (var j = i; j --; ) {\n            if (s == JSON.stringify(rules[j].declarations)) {\n            console.log(rules[j].selectors, rules[i].selectors)\n            console.log(i, j)\n                rules[j].selectors = rules[i].selectors.concat(rules[j].selectors);\n                rules.splice(i, 1);\n                break;\n            }\n        }\n    }\n    for (var i = rules.length; i--; ) {\n        var s = rules[i].selectors.sort();\n        rules[i].selectors = s.filter(function(x, i) {\n            return x && x != s[i + 1];\n        });                \n    }\n    return rules;\n}\n\nvar themes = {\n    //\"chrome\": \"Chrome DevTools\",\n    \"clouds\": \"Clouds\",\n    \"clouds_midnight\": \"Clouds Midnight\",\n    \"cobalt\": \"Cobalt\",\n    //\"crimson_editor\": \"Crimson Editor\",\n    \"dawn\": \"Dawn\",\n    //\"dreamweaver\": \"Dreamweaver\",\n    //\"eclipse\": \"Eclipse\",\n    //\"github\": \"GitHub\",\n    \"idle_fingers\": \"idleFingers\",\n    \"kr_theme\": \"krTheme\",\n    \"merbivore\": \"Merbivore\",\n    \"merbivore_soft\": \"Merbivore Soft\",\n    \"mono_industrial\": \"monoindustrial\",\n    \"monokai\": \"Monokai\",\n    \"pastel_on_dark\": \"Pastels on Dark\",\n    \"solarized_dark\": \"Solarized-dark\",\n    \"solarized_light\": \"Solarized-light\",\n    \"katzenmilch\": \"Katzenmilch\",\n    \"kuroir\": \"Kuroir Theme\",\n    //\"textmate\": \"Textmate (Mac Classic)\",\n    \"tomorrow\": \"Tomorrow\",\n    \"tomorrow_night\": \"Tomorrow-Night\",\n    \"tomorrow_night_blue\": \"Tomorrow-Night-Blue\",\n    \"tomorrow_night_bright\": \"Tomorrow-Night-Bright\",\n    \"tomorrow_night_eighties\": \"Tomorrow-Night-Eighties\",\n    \"twilight\": \"Twilight\",\n    \"vibrant_ink\": \"Vibrant Ink\",\n    \"xcode\": \"Xcode_default\"\n};\n\nfunction convertBuiltinTheme(name) {\n    return convertTheme(name, __dirname + \"/tmthemes/\" + themes[name] + \".tmTheme\", __dirname + \"/../lib/ace/theme\");\n}\n\nfunction convertTheme(name, tmThemePath, outputDirectory) {\n    console.log(\"Converting \" + name);\n    var tmTheme = fs.readFileSync(tmThemePath, \"utf8\");\n    parseTheme(tmTheme, function(theme) {\n        var styles = extractStyles(theme);\n\n        styles.cssClass = \"ace-\" + hyphenate(name);\n        styles.uuid = theme.uuid;\n        var css = fillTemplate(cssTemplate, styles);\n        css = css.replace(/[^\\{\\}]+{\\s*}/g, \"\");\n        \n        for (var i in supportedScopes) {\n            if (!styles[i])\n                continue;\n            css += \".\" + styles.cssClass + \" \" +\n                i.replace(/^|\\./g, \".ace_\") + \"{\" + styles[i] + \"}\";\n        }\n\n        // we're going to look for NEW rules in the parsed content only\n        // if such a rule exists, add it to the destination file\n        // this way, we preserve all hand-modified rules in the <theme>.css rules,\n        // (because some exist, for collab1 and ace_indentation_guide\n        try {\n            var outThemeCss = fs.readFileSync(outputDirectory + \"/\" + name + \".css\");\n            var oldRules = cssParse(outThemeCss).stylesheet.rules;\n            var newRules = cssParse(css).stylesheet.rules;\n\n\n            for (var i = 0; i < newRules.length; i++) {\n                var newSelectors = newRules[i].selectors;\n\n                for (var j = 0; j < oldRules.length; j++) {\n                    var oldSelectors = oldRules[j].selectors;\n                    newSelectors = newSelectors.filter(function(s) {\n                        return oldSelectors.indexOf(s) == -1;\n                    })\n                    if (!newSelectors.length)\n                        break;\n                }\n                if (newSelectors.length) {\n                    newRules[i].selectors = newSelectors;\n                    console.log(\"Adding NEW rule: \", newRules[i])\n                    oldRules.splice(i, 0, newRules[i]);\n                }\n            }\n            \n            oldRules = normalizeStylesheet(oldRules);\n            \n            css = cssStringify({stylesheet: {rules: oldRules}}, { compress: false });\n        } catch(e) {\n            console.log(\"Creating new file: \" +  name + \".css\")\n            css = cssStringify(cssParse(css), { compress: false });\n        }\n        \n        var js = fillTemplate(jsTemplate, {\n            name: name,\n            css: 'require(\"../requirejs/text!./' + name + '.css\")', // quoteString(css), //\n            cssClass: \"ace-\" + hyphenate(name),\n            isDark: styles.isDark\n        });\n\n        fs.writeFileSync(outputDirectory + \"/\" + name + \".js\", js);\n        fs.writeFileSync(outputDirectory + \"/\" + name + \".css\", css);\n    })\n}\n\nif (process.argv.length > 1) {\n    var args = process.argv.splice(2);\n    if (args.length < 3) {\n        console.error(\"Usage: node tmtheme.js [theme_name, path/to/theme.tmTheme path/to/output/directory]\");\n        process.exit(1);\n    }\n    var name = args[0];\n    var themePath = args[1];\n    var outputDirectory = args[2];\n    convertTheme(name, themePath, outputDirectory);\n} else {\n    for (var name in themes) {\n        convertBuiltinTheme(name);\n    }\n}\n\nvar sortedUnsupportedScopes = {};\nfor (var u in unsupportedScopes) {\n    var value = unsupportedScopes[u];\n    if (sortedUnsupportedScopes[value] === undefined) {\n        sortedUnsupportedScopes[value] = [];\n    }\n    sortedUnsupportedScopes[value].push(u);\n}\n\nconsole.log(\"I found these unsupported scopes:\");\nconsole.log(sortedUnsupportedScopes);\nconsole.log(\"It's safe to ignore these, but they may affect your syntax highlighting if your mode depends on any of these rules.\");\nconsole.log(\"Refer to the docs on ace.ajax.org for information on how to add a scope to the CSS generator.\");\n\n\n/*** TODO: generate images for indent guides in node\n\nvar indentGuideColor = \"#2D2D2D\"\nvar canvas = document.createElement(\"canvas\")\ncanvas.width = 1; canvas.height = 2;\nvar ctx = canvas.getContext(\"2d\")\nimageData = ctx.getImageData(0,0,1,2)\n\nfunction getColor(color) {\n    ctx.fillStyle = color;\n    ctx.fillRect(0,0,1,2);\n    return Array.slice(ctx.getImageData(0,0,1,2).data).slice(0,4)    \n}\nbgColor = getComputedStyle(ace.renderer.scroller).backgroundColor\nvar a = [].concat(getColor(bgColor), getColor(indentGuideColor));\na.forEach(function(val,i){imageData.data[i] = val})\n\nctx.putImageData(imageData,0,0)\nimage = canvas.toDataURL(\"png\")\n\nvar rule = \".\"+ace.renderer.$theme +\" .ace_indent-guide {\\n\\\n  background: url(\" + image +\") right repeat-y;\\n\\\n}\"\nconsole.log(rule)\nrequire(\"ace/lib/dom\").importCssString(rule)\n\n*/\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/tool/update_deps.js":"var https = require(\"https\");\nvar http = require(\"http\");\nvar url = require(\"url\");\nvar fs = require(\"fs\");\n\nvar Path = require(\"path\");\nvar spawn = require(\"child_process\").spawn;\nvar async = require(\"asyncjs\");\nvar rootDir = __dirname + \"/../lib/ace/\";\n\nvar SKIP_NPM = false;\n\nvar deps = {\n    csslint: {\n        path: \"mode/css/csslint.js\",\n        // url: \"https://raw.github.com/stubbornella/csslint/master/release/csslint.js\",\n        browserify: {\n            npmModule: \"git+https://github.com/CSSLint/csslint.git#master\",\n            path: \"jshint/src/jshint.js\",\n            exports: \"jshint\"\n        },\n        fetch: browserify,\n        wrapAmd: true\n    }, \n    requirejs: {\n        path: \"../../demo/kitchen-sink/require.js\",\n        url: \"https://raw.github.com/jrburke/requirejs/master/require.js\",\n        wrapAmd: false\n    },\n    luaparse: {\n        path: \"mode/lua/luaparse.js\",\n        url: \"https://raw.github.com/oxyc/luaparse/master/luaparse.js\",\n        wrapAmd: true,\n        postProcess: function(src) {\n            return src.replace(\n                /\\(function\\s*\\(root,\\s*name,\\s*factory\\)\\s*{[\\s\\S]*?}\\(this,\\s*'luaparse',/,\n                \"(function (root, name, factory) {\\n   factory(exports)\\n}(this, 'luaparse',\"\n            )\n        }\n    },\n    html5: {\n        path: \"mode/html/saxparser.js\",\n        browserify: {\n            npmModule: \"git+https://github.com/aredridel/html5.git#master\",\n            path: \"html5/lib/sax/SAXParser.js\",  \n            exports: \"SAXParser\"\n        },\n        fetch: browserify,\n        wrapAmd: true,\n        postProcess: function(src) {\n            return src;\n        }\n    },\n    xquery: {\n       path: \"mode/xquery/xquery_lexer.js\",\n       browserify: {\n           npmModule: \"git+https://github.com/wcandillon/xqlint.git#master\",\n           path: \"xqlint/lib/lexers/xquery_lexer.js\",\n           exports: \"XQueryLexer\"\n       },\n       fetch: browserify,\n       wrapAmd: true,\n       postProcess: function(src){\n           return src;\n       }\n    },\n    jsoniq: {\n       path: \"mode/xquery/jsoniq_lexer.js\",\n       browserify: {\n           npmModule: \"git+https://github.com/wcandillon/xqlint.git#master\",\n           path: \"xqlint/lib/lexers/jsoniq_lexer.js\",\n           exports: \"JSONiqLexer\"\n       },\n       fetch: browserify,\n       wrapAmd: true,\n       postProcess: function(src){\n           return src;\n       }\n    },\n    xqlint: {\n       path: \"mode/xquery/xqlint.js\",\n       browserify: {\n           npmModule: \"git+https://github.com/wcandillon/xqlint.git#master\",\n           path: \"xqlint/lib/xqlint.js\",\n           exports: \"XQLint\"\n       },\n       fetch: browserify,\n       wrapAmd: true,\n       postProcess: function(src){\n           return src;\n       }\n    },\n    jshint: {\n        path: \"mode/javascript/jshint.js\",\n        browserify: {\n            npmModule: \"git+https://github.com/ajaxorg/jshint.git#master\",\n            path: \"jshint/src/jshint.js\",\n            exports: \"jshint\"\n        },\n        fetch: browserify,\n        wrapAmd: true,\n        postProcess: function(src) {\n            src = src.replace(\n                /\"Expected a conditional expression and instead saw an assignment.\"/g,\n                '\"Assignment in conditional expression\"'\n            );\n            src = src.replace(/var defaultMaxListeners = 10;/, function(a) {return a.replace(\"10\", \"200\")});\n            return src;\n        }\n    }, \n    emmet: {\n        path: \"ext/emmet core.js\",\n        url: [\n            \"https://raw.github.com/sergeche/emmet-sublime/master/emmet/emmet-app.js\",\n            \"https://raw.github.com/sergeche/emmet-sublime/master/emmet/snippets.json\"\n        ],\n        postProcess: function(data) {\n            return data[0]\n                .replace(\"define(emmet)\", \"define('emmet', [], emmet)\")\n                .replace(/(emmet.define\\('bootstrap'.*)[\\s\\S]*$/, function(_, x) {\n                    return x + \"\\n\" +\n                        \"var snippets = \" + data[1] + \";\\n\" +\n                        \"var res = require('resources');\\n\" +\n                        \"var userData = res.getVocabulary('user') || {};\\n\" +\n                        \"res.setVocabulary(require('utils').deepMerge(userData, snippets), 'user');\\n\" +\n                        \"});\";\n            });\n        }\n    },\n    vim: {\n        fetch: function(){\n            var rootHref = \"https://raw.githubusercontent.com/codemirror/CodeMirror/master/\"\n            var fileMap = {\"keymap/vim.js\": \"keyboard/vim.js\", \"test/vim_test.js\": \"keyboard/vim_test.js\"};\n            async.forEach(Object.keys(fileMap), function(x, next) {\n                download(rootHref + x, function(e, d) {\n                    d = d.replace(/^\\(function.*{[^{}]+^}[^{}]+{/m, \"define(function(require, exports, module) {\");\n                    d = d.replace(/^\\s*return vimApi;\\s*};/gm, \"  //};\")\n                        .replace(\"var Vim = function() {\", \"$& return vimApi; } //{\")\n                    fs.writeFile(rootDir + fileMap[x], d, next)\n                })\n            }, function() {\n                console.log(\"done\")\n            });\n        }\n    },\n    liveScript: {\n        path: \"mode/livescript.js\",\n        url: \"https://raw.githubusercontent.com/gkz/LiveScript/master/lib/mode-ls.js\"        \n    },\n    coffee: {\n        path: \"mode/coffee/coffee.js\",\n        url: \"https://raw.githubusercontent.com/jashkenas/coffeescript/master/extras/coffee-script.js\",    \n        wrapAmd: true,\n        postProcess: function(src){\n            return \"function define(f) { module.exports = f() }; define.amd = {};\\n\"\n                + dereqire(src);\n        }\n    },\n    xmldom: {\n        fetch: function() {\n            var rootHref = \"https://raw.githubusercontent.com/iDeBugger/xmldom/master/\"\n            var fileMap = {\n               \"sax.js\": \"mode/xml/sax.js\",\n               \"dom-parser.js\": \"mode/xml/dom-parser.js\",\n               \"dom.js\": \"mode/xml/dom.js\"\n            };\n            async.forEach(Object.keys(fileMap), function(x, next) {\n                download(rootHref + x, function(e, d) {\n                    fs.writeFile(rootDir + fileMap[x], d, next)\n                })\n            }, function() {\n                console.log(\"XmlDOM updating done\")\n            });\n        }\n    },\n};\n\nvar download = function(href, callback) {\n    if (Array.isArray(href))\n        return async.map(href, download, callback);\n\n    var options = url.parse(href);\n    var protocol = options.protocol === \"https:\" ? https : http;\n    console.log(\"connecting to \" + options.host + \" \" + options.path);\n    protocol.get(options, function(res) {\n        var data = \"\";\n        res.setEncoding(\"utf-8\");\n\n        res.on(\"data\", function(chunk){\n            data += chunk;\n        });\n\n        res.on(\"end\", function(){\n            callback(null, data);\n        });\n    });\n};\n\nvar getDep = function(dep) {\n    if (!dep.fetch)\n        dep.fetch = download\n    dep.fetch(dep.url, function(err, data) {\n        if (dep.postProcess)\n            data = dep.postProcess(data);\n        if (dep.wrapAmd)\n            data = \"define(function(require, exports, module) {\\n\"\n                + data\n                + \"\\n});\";\n\n        fs.writeFile(rootDir + dep.path, data, \"utf-8\", function(err){\n            if (err) throw err;\n            console.log(\"File \" + dep.path + \" saved.\");\n        });\n    });\n};\n\nfunction run(cmd, cb) {\n\tvar proc = process.platform == \"win32\"\n        ? spawn(\"cmd\", [\"/c\", cmd], {cwd: __dirname})\n        : spawn(\"bash\", [\"-c\", cmd], {cwd: __dirname});\n\n    var result = \"\", err = \"\";\n\tproc.stderr.setEncoding(\"utf8\");    \n\tproc.stderr.on('data', function (data) {\n        err += data;\n\t});\n\n\tproc.stdout.setEncoding(\"utf8\");\n\tproc.stdout.on('data', function (data) {\n        result += data;\n\t});\n\n    proc.on('close', done);\n    function done(code) {\n        if (code !== 0) {\n            console.error(cmd + '::: process exited with code :::' + code);\n            console.error(err)\n        }\n        cb(err, result)\n    }\n}\n\nfunction unquote(str) {\n    return str.replace(/\\\\(.)/g, function(x, a) {\n        return a == \"n\" ? \"\\n\" \n            : a == \"t\" ? \"\\t\" \n            : a == \"r\" ? \"\\r\"\n            : a\n    });\n}\n\nfunction dereqire(src) {\n    return require(\"derequire\")(src, [\n        {from: 'require', to: '_dereq_'},\n        {from: 'define', to: '_defi_'}\n    ]);\n}\n\nfunction browserify(_, cb) {\n    var br = this.browserify;\n    var path = Path.join(\"node_modules\", br.path)\n    process.chdir(__dirname);\n    if (Path.sep == \"\\\\\" && !Path._relative) {\n        Path._relative = Path.relative;\n        Path.relative = function() {\n            var v = Path._relative.apply(this, arguments);\n            return v.replace(/\\\\/g, \"/\");\n        }\n    }\n    function done() {\n        var browserify = require('browserify');\n        var absPath = require.resolve(__dirname + \"/\" + path);\n        var defaultPreludePath = Path.join(require.resolve(\"browser-pack\"), \"../prelude.js\");\n        var defaultPrelude = \"module.exports = \" + fs.readFileSync(defaultPreludePath, 'utf8')\n            .replace(/^[ \\t]*\\/\\/.*/gm, \"\")\n            .replace(/^\\s*\\n\\r?/gm, \"\")\n            .replace(/return newRequire;/, \"return newRequire(entry[0]);\")\n        var opts = {\n            expose: br.exports,\n            prelude: defaultPrelude,\n            exposeAll: true\n        }\n        var b = browserify(opts);\n        b.plugin(require(\"deps-sort\"), opts);\n        b.add(absPath);\n        var p = b.bundle();\n        var buffer = \"\";\n        p.on(\"data\", function(e) { buffer += e; });\n        p.on(\"end\", function() {\n            var src = dereqire(buffer);\n            cb(null, src);\n        });\n    }\n    if (SKIP_NPM) return done();\n    run(\"npm install \" + br.npmModule,  done);\n}\n\nvar args = process.argv.slice(2);\nSKIP_NPM = args.indexOf(\"--skip-npm\") != -1;\nargs = args.filter(function(x) {return x[0] != \"-\" });\nif (!args.length)\n    args = Object.keys(deps);\n    \nargs.forEach(function(key) {\n    getDep(deps[key])\n});\n\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/tool/wrap_keyword_regexp.js":"// a little script to turn giant keyword regexps into\n// something that ace can use; for example: \n//\n// \\b(NS(Rect(ToCGRect|FromCGRect)|MakeCollectable|S(tringFromProtocol))\\b\n// \n// into\n//\n// (?:\\\\b)(NS(?:Rect(?:ToCGRect|FromCGRect)|MakeCollectable|S(?:tringFromProtocol))(?:\\b)\n\nvar inputString = process.argv.splice(2)[0];\n\n// solve word boundaries\nvar outputString = inputString.replace(/\\\\b/g, \"(?:\\\\\\\\b)\");\n\n// I apparently need to do this, instead of something clever, because the regexp\n// lastIndex is screwing up my positional\noutputString = outputString.split(\"b)(\");\n\noutputString = outputString[0] + \"b)(\" + outputString[1].replace(/\\(([^\\?])/g, \"(?:$1\");\n\nconsole.log(\"\\n\\n\" + outputString + \"\\n\\n\");","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/demo/kitchen-sink/demo.js":"/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nrequire(\"ace/lib/fixoldbrowsers\");\n\nrequire(\"ace/multi_select\");\nrequire(\"ace/ext/spellcheck\");\nrequire(\"./inline_editor\");\nrequire(\"./dev_util\");\nrequire(\"./file_drop\");\n\nvar config = require(\"ace/config\");\nconfig.init();\nvar env = {};\n\nvar dom = require(\"ace/lib/dom\");\nvar net = require(\"ace/lib/net\");\nvar lang = require(\"ace/lib/lang\");\nvar useragent = require(\"ace/lib/useragent\");\n\nvar event = require(\"ace/lib/event\");\nvar theme = require(\"ace/theme/textmate\");\nvar EditSession = require(\"ace/edit_session\").EditSession;\nvar UndoManager = require(\"ace/undomanager\").UndoManager;\n\nvar HashHandler = require(\"ace/keyboard/hash_handler\").HashHandler;\n\nvar Renderer = require(\"ace/virtual_renderer\").VirtualRenderer;\nvar Editor = require(\"ace/editor\").Editor;\n\nvar whitespace = require(\"ace/ext/whitespace\");\n\n\n\nvar doclist = require(\"./doclist\");\nvar modelist = require(\"ace/ext/modelist\");\nvar themelist = require(\"ace/ext/themelist\");\nvar layout = require(\"./layout\");\nvar TokenTooltip = require(\"./token_tooltip\").TokenTooltip;\nvar util = require(\"./util\");\nvar saveOption = util.saveOption;\nvar fillDropdown = util.fillDropdown;\nvar bindCheckbox = util.bindCheckbox;\nvar bindDropdown = util.bindDropdown;\n\nvar ElasticTabstopsLite = require(\"ace/ext/elastic_tabstops_lite\").ElasticTabstopsLite;\n\nvar IncrementalSearch = require(\"ace/incremental_search\").IncrementalSearch;\n\n\nvar workerModule = require(\"ace/worker/worker_client\");\nif (location.href.indexOf(\"noworker\") !== -1) {\n    workerModule.WorkerClient = workerModule.UIWorkerClient;\n}\n\n/*********** create editor ***************************/\nvar container = document.getElementById(\"editor-container\");\n\n// Splitting.\nvar Split = require(\"ace/split\").Split;\nvar split = new Split(container, theme, 1);\nenv.editor = split.getEditor(0);\nsplit.on(\"focus\", function(editor) {\n    env.editor = editor;\n    updateUIEditorOptions();\n});\nenv.split = split;\nwindow.env = env;\n\n\nvar consoleEl = dom.createElement(\"div\");\ncontainer.parentNode.appendChild(consoleEl);\nconsoleEl.style.cssText = \"position:fixed; bottom:1px; right:0;\\\nborder:1px solid #baf; z-index:100\";\n\nvar cmdLine = new layout.singleLineEditor(consoleEl);\ncmdLine.editor = env.editor;\nenv.editor.cmdLine = cmdLine;\n\nenv.editor.showCommandLine = function(val) {\n    this.cmdLine.focus();\n    if (typeof val == \"string\")\n        this.cmdLine.setValue(val, 1);\n};\n\n/**\n * This demonstrates how you can define commands and bind shortcuts to them.\n */\nenv.editor.commands.addCommands([{\n    name: \"gotoline\",\n    bindKey: {win: \"Ctrl-L\", mac: \"Command-L\"},\n    exec: function(editor, line) {\n        if (typeof line == \"object\") {\n            var arg = this.name + \" \" + editor.getCursorPosition().row;\n            editor.cmdLine.setValue(arg, 1);\n            editor.cmdLine.focus();\n            return;\n        }\n        line = parseInt(line, 10);\n        if (!isNaN(line))\n            editor.gotoLine(line);\n    },\n    readOnly: true\n}, {\n    name: \"snippet\",\n    bindKey: {win: \"Alt-C\", mac: \"Command-Alt-C\"},\n    exec: function(editor, needle) {\n        if (typeof needle == \"object\") {\n            editor.cmdLine.setValue(\"snippet \", 1);\n            editor.cmdLine.focus();\n            return;\n        }\n        var s = snippetManager.getSnippetByName(needle, editor);\n        if (s)\n            snippetManager.insertSnippet(editor, s.content);\n    },\n    readOnly: true\n}, {\n    name: \"focusCommandLine\",\n    bindKey: \"shift-esc|ctrl-`\",\n    exec: function(editor, needle) { editor.cmdLine.focus(); },\n    readOnly: true\n}, {\n    name: \"nextFile\",\n    bindKey: \"Ctrl-tab\",\n    exec: function(editor) { doclist.cycleOpen(editor, 1); },\n    readOnly: true\n}, {\n    name: \"previousFile\",\n    bindKey: \"Ctrl-shift-tab\",\n    exec: function(editor) { doclist.cycleOpen(editor, -1); },\n    readOnly: true\n}, {\n    name: \"execute\",\n    bindKey: \"ctrl+enter\",\n    exec: function(editor) {\n        try {\n            var r = window.eval(editor.getCopyText() || editor.getValue());\n        } catch(e) {\n            r = e;\n        }\n        editor.cmdLine.setValue(r + \"\");\n    },\n    readOnly: true\n}, {\n    name: \"showKeyboardShortcuts\",\n    bindKey: {win: \"Ctrl-Alt-h\", mac: \"Command-Alt-h\"},\n    exec: function(editor) {\n        config.loadModule(\"ace/ext/keybinding_menu\", function(module) {\n            module.init(editor);\n            editor.showKeyboardShortcuts();\n        });\n    }\n}, {\n    name: \"increaseFontSize\",\n    bindKey: \"Ctrl-=|Ctrl-+\",\n    exec: function(editor) {\n        var size = parseInt(editor.getFontSize(), 10) || 12;\n        editor.setFontSize(size + 1);\n    }\n}, {\n    name: \"decreaseFontSize\",\n    bindKey: \"Ctrl+-|Ctrl-_\",\n    exec: function(editor) {\n        var size = parseInt(editor.getFontSize(), 10) || 12;\n        editor.setFontSize(Math.max(size - 1 || 1));\n    }\n}, {\n    name: \"resetFontSize\",\n    bindKey: \"Ctrl+0|Ctrl-Numpad0\",\n    exec: function(editor) {\n        editor.setFontSize(12);\n    }\n}]);\n\n\nenv.editor.commands.addCommands(whitespace.commands);\n\ncmdLine.commands.bindKeys({\n    \"Shift-Return|Ctrl-Return|Alt-Return\": function(cmdLine) { cmdLine.insert(\"\\n\"); },\n    \"Esc|Shift-Esc\": function(cmdLine){ cmdLine.editor.focus(); },\n    \"Return\": function(cmdLine){\n        var command = cmdLine.getValue().split(/\\s+/);\n        var editor = cmdLine.editor;\n        editor.commands.exec(command[0], editor, command[1]);\n        editor.focus();\n    }\n});\n\ncmdLine.commands.removeCommands([\"find\", \"gotoline\", \"findall\", \"replace\", \"replaceall\"]);\n\nvar commands = env.editor.commands;\ncommands.addCommand({\n    name: \"save\",\n    bindKey: {win: \"Ctrl-S\", mac: \"Command-S\"},\n    exec: function(arg) {\n        var session = env.editor.session;\n        var name = session.name.match(/[^\\/]+$/);\n        localStorage.setItem(\n            \"saved_file:\" + name,\n            session.getValue()\n        );\n        env.editor.cmdLine.setValue(\"saved \"+ name);\n    }\n});\n\ncommands.addCommand({\n    name: \"load\",\n    bindKey: {win: \"Ctrl-O\", mac: \"Command-O\"},\n    exec: function(arg) {\n        var session = env.editor.session;\n        var name = session.name.match(/[^\\/]+$/);\n        var value = localStorage.getItem(\"saved_file:\" + name);\n        if (typeof value == \"string\") {\n            session.setValue(value);\n            env.editor.cmdLine.setValue(\"loaded \"+ name);\n        } else {\n            env.editor.cmdLine.setValue(\"no previuos value saved for \"+ name);\n        }\n    }\n});\n\nvar keybindings = {\n    ace: null, // Null = use \"default\" keymapping\n    vim: require(\"ace/keyboard/vim\").handler,\n    emacs: \"ace/keyboard/emacs\",\n    // This is a way to define simple keyboard remappings\n    custom: new HashHandler({\n        \"gotoright\":      \"Tab\",\n        \"indent\":         \"]\",\n        \"outdent\":        \"[\",\n        \"gotolinestart\":  \"^\",\n        \"gotolineend\":    \"$\"\n    })\n};\n\n\n\n/*********** manage layout ***************************/\nvar consoleHeight = 20;\nfunction onResize() {\n    var left = env.split.$container.offsetLeft;\n    var width = document.documentElement.clientWidth - left;\n    container.style.width = width + \"px\";\n    container.style.height = document.documentElement.clientHeight - consoleHeight + \"px\";\n    env.split.resize();\n\n    consoleEl.style.width = width + \"px\";\n    cmdLine.resize();\n}\n\nwindow.onresize = onResize;\nonResize();\n\n/*********** options panel ***************************/\nvar docEl = document.getElementById(\"doc\");\nvar modeEl = document.getElementById(\"mode\");\nvar wrapModeEl = document.getElementById(\"soft_wrap\");\nvar themeEl = document.getElementById(\"theme\");\nvar foldingEl = document.getElementById(\"folding\");\nvar selectStyleEl = document.getElementById(\"select_style\");\nvar highlightActiveEl = document.getElementById(\"highlight_active\");\nvar showHiddenEl = document.getElementById(\"show_hidden\");\nvar showGutterEl = document.getElementById(\"show_gutter\");\nvar showPrintMarginEl = document.getElementById(\"show_print_margin\");\nvar highlightSelectedWordE = document.getElementById(\"highlight_selected_word\");\nvar showHScrollEl = document.getElementById(\"show_hscroll\");\nvar showVScrollEl = document.getElementById(\"show_vscroll\");\nvar animateScrollEl = document.getElementById(\"animate_scroll\");\nvar softTabEl = document.getElementById(\"soft_tab\");\nvar behavioursEl = document.getElementById(\"enable_behaviours\");\n\nfillDropdown(docEl, doclist.all);\n\nfillDropdown(modeEl, modelist.modes);\nvar modesByName = modelist.modesByName;\nbindDropdown(\"mode\", function(value) {\n    env.editor.session.setMode(modesByName[value].mode || modesByName.text.mode);\n    env.editor.session.modeName = value;\n});\n\ndoclist.history = doclist.docs.map(function(doc) {\n    return doc.name;\n});\ndoclist.history.index = 0;\ndoclist.cycleOpen = function(editor, dir) {\n    var h = this.history;\n    h.index += dir;\n    if (h.index >= h.length)\n        h.index = 0;\n    else if (h.index <= 0)\n        h.index = h.length - 1;\n    var s = h[h.index];\n    docEl.value = s;\n    docEl.onchange();\n};\ndoclist.addToHistory = function(name) {\n    var h = this.history;\n    var i = h.indexOf(name);\n    if (i != h.index) {\n        if (i != -1)\n            h.splice(i, 1);\n        h.index = h.push(name);\n    }\n};\n\nbindDropdown(\"doc\", function(name) {\n    doclist.loadDoc(name, function(session) {\n        if (!session)\n            return;\n        doclist.addToHistory(session.name);\n        session = env.split.setSession(session);\n        whitespace.detectIndentation(session);\n        updateUIEditorOptions();\n        env.editor.focus();\n    });\n});\n\n\nfunction updateUIEditorOptions() {\n    var editor = env.editor;\n    var session = editor.session;\n\n    session.setFoldStyle(foldingEl.value);\n\n    saveOption(docEl, session.name);\n    saveOption(modeEl, session.modeName || \"text\");\n    saveOption(wrapModeEl, session.getUseWrapMode() ? session.getWrapLimitRange().min || \"free\" : \"off\");\n\n    saveOption(selectStyleEl, editor.getSelectionStyle() == \"line\");\n    saveOption(themeEl, editor.getTheme());\n    saveOption(highlightActiveEl, editor.getHighlightActiveLine());\n    saveOption(showHiddenEl, editor.getShowInvisibles());\n    saveOption(showGutterEl, editor.renderer.getShowGutter());\n    saveOption(showPrintMarginEl, editor.renderer.getShowPrintMargin());\n    saveOption(highlightSelectedWordE, editor.getHighlightSelectedWord());\n    saveOption(showHScrollEl, editor.renderer.getHScrollBarAlwaysVisible());\n    saveOption(animateScrollEl, editor.getAnimatedScroll());\n    saveOption(softTabEl, session.getUseSoftTabs());\n    saveOption(behavioursEl, editor.getBehavioursEnabled());\n}\n\nthemelist.themes.forEach(function(x){ x.value = x.theme });\nfillDropdown(themeEl, {\n    Bright: themelist.themes.filter(function(x){return !x.isDark}),\n    Dark: themelist.themes.filter(function(x){return x.isDark})\n});\n\nevent.addListener(themeEl, \"mouseover\", function(e){\n    themeEl.desiredValue = e.target.value;\n    if (!themeEl.$timer)\n        themeEl.$timer = setTimeout(themeEl.updateTheme);\n});\n\nevent.addListener(themeEl, \"mouseout\", function(e){\n    themeEl.desiredValue = null;\n    if (!themeEl.$timer)\n        themeEl.$timer = setTimeout(themeEl.updateTheme, 20);\n});\n\nthemeEl.updateTheme = function(){\n    env.split.setTheme((themeEl.desiredValue || themeEl.selectedValue));\n    themeEl.$timer = null;\n};\n\nbindDropdown(\"theme\", function(value) {\n    if (!value)\n        return;\n    env.editor.setTheme(value);\n    themeEl.selectedValue = value;\n});\n\nbindDropdown(\"keybinding\", function(value) {\n    env.editor.setKeyboardHandler(keybindings[value]);\n});\n\nbindDropdown(\"fontsize\", function(value) {\n    env.split.setFontSize(value);\n});\n\nbindDropdown(\"folding\", function(value) {\n    env.editor.session.setFoldStyle(value);\n    env.editor.setShowFoldWidgets(value !== \"manual\");\n});\n\nbindDropdown(\"soft_wrap\", function(value) {\n    env.editor.setOption(\"wrap\", value);\n});\n\nbindCheckbox(\"select_style\", function(checked) {\n    env.editor.setOption(\"selectionStyle\", checked ? \"line\" : \"text\");\n});\n\nbindCheckbox(\"highlight_active\", function(checked) {\n    env.editor.setHighlightActiveLine(checked);\n});\n\nbindCheckbox(\"show_hidden\", function(checked) {\n    env.editor.setShowInvisibles(checked);\n});\n\nbindCheckbox(\"display_indent_guides\", function(checked) {\n    env.editor.setDisplayIndentGuides(checked);\n});\n\nbindCheckbox(\"show_gutter\", function(checked) {\n    env.editor.renderer.setShowGutter(checked);\n});\n\nbindCheckbox(\"show_print_margin\", function(checked) {\n    env.editor.renderer.setShowPrintMargin(checked);\n});\n\nbindCheckbox(\"highlight_selected_word\", function(checked) {\n    env.editor.setHighlightSelectedWord(checked);\n});\n\nbindCheckbox(\"show_hscroll\", function(checked) {\n    env.editor.setOption(\"hScrollBarAlwaysVisible\", checked);\n});\n\nbindCheckbox(\"show_vscroll\", function(checked) {\n    env.editor.setOption(\"vScrollBarAlwaysVisible\", checked);\n});\n\nbindCheckbox(\"animate_scroll\", function(checked) {\n    env.editor.setAnimatedScroll(checked);\n});\n\nbindCheckbox(\"soft_tab\", function(checked) {\n    env.editor.session.setUseSoftTabs(checked);\n});\n\nbindCheckbox(\"enable_behaviours\", function(checked) {\n    env.editor.setBehavioursEnabled(checked);\n});\n\nbindCheckbox(\"fade_fold_widgets\", function(checked) {\n    env.editor.setFadeFoldWidgets(checked);\n});\nbindCheckbox(\"read_only\", function(checked) {\n    env.editor.setReadOnly(checked);\n});\nbindCheckbox(\"scrollPastEnd\", function(checked) {\n    env.editor.setOption(\"scrollPastEnd\", checked);\n});\n\nbindDropdown(\"split\", function(value) {\n    var sp = env.split;\n    if (value == \"none\") {\n        sp.setSplits(1);\n    } else {\n        var newEditor = (sp.getSplits() == 1);\n        sp.setOrientation(value == \"below\" ? sp.BELOW : sp.BESIDE);\n        sp.setSplits(2);\n\n        if (newEditor) {\n            var session = sp.getEditor(0).session;\n            var newSession = sp.setSession(session, 1);\n            newSession.name = session.name;\n        }\n    }\n});\n\n\nbindCheckbox(\"elastic_tabstops\", function(checked) {\n    env.editor.setOption(\"useElasticTabstops\", checked);\n});\n\nvar iSearchCheckbox = bindCheckbox(\"isearch\", function(checked) {\n    env.editor.setOption(\"useIncrementalSearch\", checked);\n});\n\nenv.editor.addEventListener('incrementalSearchSettingChanged', function(event) {\n    iSearchCheckbox.checked = event.isEnabled;\n});\n\n\nfunction synchroniseScrolling() {\n    var s1 = env.split.$editors[0].session;\n    var s2 = env.split.$editors[1].session;\n    s1.on('changeScrollTop', function(pos) {s2.setScrollTop(pos)});\n    s2.on('changeScrollTop', function(pos) {s1.setScrollTop(pos)});\n    s1.on('changeScrollLeft', function(pos) {s2.setScrollLeft(pos)});\n    s2.on('changeScrollLeft', function(pos) {s1.setScrollLeft(pos)});\n}\n\nbindCheckbox(\"highlight_token\", function(checked) {\n    var editor = env.editor;\n    if (editor.tokenTooltip && !checked) {\n        editor.tokenTooltip.destroy();\n        delete editor.tokenTooltip;\n    } else if (checked) {\n        editor.tokenTooltip = new TokenTooltip(editor);\n    }\n});\n\nvar StatusBar = require(\"ace/ext/statusbar\").StatusBar;\nnew StatusBar(env.editor, cmdLine.container);\n\n\nvar Emmet = require(\"ace/ext/emmet\");\nnet.loadScript(\"https://cloud9ide.github.io/emmet-core/emmet.js\", function() {\n    Emmet.setCore(window.emmet);\n    env.editor.setOption(\"enableEmmet\", true);\n});\n\n\n// require(\"ace/placeholder\").PlaceHolder;\n\nvar snippetManager = require(\"ace/snippets\").snippetManager;\n\nenv.editSnippets = function() {\n    var sp = env.split;\n    if (sp.getSplits() == 2) {\n        sp.setSplits(1);\n        return;\n    }\n    sp.setSplits(1);\n    sp.setSplits(2);\n    sp.setOrientation(sp.BESIDE);\n    var editor = sp.$editors[1];\n    var id = sp.$editors[0].session.$mode.$id || \"\";\n    var m = snippetManager.files[id];\n    if (!doclist[\"snippets/\" + id]) {\n        var text = m.snippetText;\n        var s = doclist.initDoc(text, \"\", {});\n        s.setMode(\"ace/mode/snippets\");\n        doclist[\"snippets/\" + id] = s;\n    }\n    editor.on(\"blur\", function() {\n        m.snippetText = editor.getValue();\n        snippetManager.unregister(m.snippets);\n        m.snippets = snippetManager.parseSnippetFile(m.snippetText, m.scope);\n        snippetManager.register(m.snippets);\n    });\n    sp.$editors[0].once(\"changeMode\", function() {\n        sp.setSplits(1);\n    });\n    editor.setSession(doclist[\"snippets/\" + id], 1);\n    editor.focus();\n};\n\nrequire(\"ace/ext/language_tools\");\nenv.editor.setOptions({\n    enableBasicAutocompletion: true,\n    enableLiveAutocompletion: false,\n    enableSnippets: true\n});\n\nvar beautify = require(\"ace/ext/beautify\");\nenv.editor.commands.addCommands(beautify.commands);\n\n});\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/demo/kitchen-sink/dev_util.js":"/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\ndefine(function(require, exports, module) {\nvar dom = require(\"ace/lib/dom\");\nvar Range = require(\"ace/range\").Range;\nfunction warn() {\n    var s = (new Error()).stack || \"\";\n    s = s.split(\"\\n\");\n    if (s[1] == \"Error\") s.shift(); // remove error description on chrome\n    s.shift(); // remove warn\n    s.shift(); // remove the getter\n    s = s.join(\"\\n\");\n    // allow easy access to ace in console, but not in ace code\n    if (!/at Object.InjectedScript.|@debugger eval|snippets:\\/{3}|<anonymous>:\\d+:\\d+/.test(s)) {\n        console.error(\"trying to access to global variable\");\n    }\n}\nfunction def(o, key, get) {\n    try {\n        Object.defineProperty(o, key, {\n            configurable: true, \n            get: get,\n            set: function(val) {\n                delete o[key];\n                o[key] = val;\n            }\n        });\n    } catch(e) {\n        console.error(e);\n    }\n}\ndef(window, \"ace\", function(){ warn(); return window.env.editor });\ndef(window, \"editor\", function(){ warn(); return window.env.editor });\ndef(window, \"session\", function(){ warn(); return window.env.editor.session });\ndef(window, \"split\", function(){ warn(); return window.env.split });\n\n\ndef(window, \"devUtil\", function(){ warn(); return exports });\nexports.showTextArea = function(argument) {\n    dom.importCssString(\"\\\n      .ace_text-input {\\\n        position: absolute;\\\n        z-index: 10!important;\\\n        width: 6em!important;\\\n        height: 1em;\\\n        opacity: 1!important;\\\n        background: rgba(0, 92, 255, 0.11);\\\n        border: none;\\\n        font: inherit;\\\n        padding: 0 1px;\\\n        margin: 0 -1px;\\\n        text-indent: 0em;\\\n    }\\\n    \");\n};\n\nexports.addGlobals = function() {\n    window.oop = require(\"ace/lib/oop\");\n    window.dom = require(\"ace/lib/dom\");\n    window.Range = require(\"ace/range\").Range;\n    window.Editor = require(\"ace/editor\").Editor;\n    window.assert = require(\"ace/test/asyncjs/assert\");\n    window.asyncjs = require(\"ace/test/asyncjs/async\");\n    window.UndoManager = require(\"ace/undomanager\").UndoManager;\n    window.EditSession = require(\"ace/edit_session\").EditSession;\n    window.MockRenderer = require(\"ace/test/mockrenderer\").MockRenderer;\n    window.EventEmitter = require(\"ace/lib/event_emitter\").EventEmitter;\n    \n    window.getSelection = getSelection;\n    window.setSelection = setSelection;\n    window.testSelection = testSelection;\n};\n\nfunction getSelection(editor) {\n    var data = editor.multiSelect.toJSON();\n    if (!data.length) data = [data];\n    data = data.map(function(x) {\n        var a, c;\n        if (x.isBackwards) {\n            a = x.end;\n            c = x.start;\n        } else {\n            c = x.end;\n            a = x.start;\n        }\n        return Range.comparePoints(a, c) \n            ? [a.row, a.column, c.row, c.column]\n            : [a.row, a.column];\n    });\n    return data.length > 1 ? data : data[0];\n}\nfunction setSelection(editor, data) {\n    if (typeof data[0] == \"number\")\n        data = [data];\n    editor.selection.fromJSON(data.map(function(x) {\n        var start = {row: x[0], column: x[1]};\n        var end = x.length == 2 ? start : {row: x[2], column: x[3]};\n        var isBackwards = Range.comparePoints(start, end) > 0;\n        return isBackwards ? {\n            start: end,\n            end: start,\n            isBackwards: true\n        } : {\n            start: start,\n            end: end,\n            isBackwards: true\n        };\n    }));\n}\nfunction testSelection(editor, data) {\n    assert.equal(getSelection(editor) + \"\", data + \"\");\n}\n\nexports.recordTestCase = function() {\n    exports.addGlobals();\n    var editor = window.editor;\n    var testcase = window.testcase = [];\n    var assert;\n\n    testcase.push({\n        type: \"setValue\",\n        data: editor.getValue()\n    }, {\n        type: \"setSelection\",\n        data: getSelection(editor)\n    });\n    editor.commands.on(\"afterExec\", function(e) {\n        testcase.push({\n            type: \"exec\",\n            data: e\n        });\n        testcase.push({\n            type: \"value\",\n            data: editor.getValue()\n        });\n        testcase.push({\n            type: \"selection\",\n            data: getSelection(editor)\n        });\n    });\n    editor.on(\"mouseup\", function() {\n        testcase.push({\n            type: \"setSelection\",\n            data: getSelection(editor)\n        });\n    });\n    \n    testcase.toString = function() {\n        var lastValue = \"\";\n        // var lastSelection = \"\"\n        var str = this.map(function(x) {\n            var data = x.data;\n            switch (x.type) {\n                case \"exec\": \n                    return 'editor.execCommand(\"' \n                        + data.command.name\n                        + (data.args ? '\", ' + JSON.stringify(data.args) : '\"')\n                    + ')';\n                case \"setSelection\":\n                    return 'setSelection(editor, ' + JSON.stringify(data)  + ')';\n                case \"setValue\":\n                    if (lastValue != data) {\n                        lastValue = data;\n                        return 'editor.setValue(' + JSON.stringify(data) + ', -1)';\n                    }\n                    return;\n                case \"selection\":\n                    return 'testSelection(editor, ' + JSON.stringify(data) + ')';\n                case \"value\":\n                    if (lastValue != data) {\n                        lastValue = data;\n                        return 'assert.equal('\n                            + 'editor.getValue(),'\n                            + JSON.stringify(data)\n                        + ')';\n                    }\n                    return;\n            }\n        }).filter(Boolean).join(\"\\n\");\n        \n        return getSelection + \"\\n\"\n            + testSelection + \"\\n\"\n            + setSelection + \"\\n\"\n            + \"\\n\" + str + \"\\n\";\n    };\n};\n\n\n});\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/demo/kitchen-sink/doclist.js":"/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\n define(function(require, exports, module) {\n\"use strict\";\n\nvar EditSession = require(\"ace/edit_session\").EditSession;\nvar UndoManager = require(\"ace/undomanager\").UndoManager;\nvar net = require(\"ace/lib/net\");\n\nvar modelist = require(\"ace/ext/modelist\");\n/*********** demo documents ***************************/\nvar fileCache = {};\n\nfunction initDoc(file, path, doc) {\n    if (doc.prepare)\n        file = doc.prepare(file);\n\n    var session = new EditSession(file);\n    session.setUndoManager(new UndoManager());\n    doc.session = session;\n    doc.path = path;\n    session.name = doc.name;\n    if (doc.wrapped) {\n        session.setUseWrapMode(true);\n        session.setWrapLimitRange(80, 80);\n    }\n    var mode = modelist.getModeForPath(path);\n    session.modeName = mode.name;\n    session.setMode(mode.mode);\n    return session;\n}\n\n\nfunction makeHuge(txt) {\n    for (var i = 0; i < 5; i++)\n        txt += txt;\n    return txt;\n}\n\nvar docs = {\n    \"docs/javascript.js\": {order: 1, name: \"JavaScript\"},\n\n    \"docs/latex.tex\": {name: \"LaTeX\", wrapped: true},\n    \"docs/markdown.md\": {name: \"Markdown\", wrapped: true},\n    \"docs/mushcode.mc\": {name: \"MUSHCode\", wrapped: true},\n    \"docs/pgsql.pgsql\": {name: \"pgSQL\", wrapped: true},\n    \"docs/plaintext.txt\": {name: \"Plain Text\", prepare: makeHuge, wrapped: true},\n    \"docs/sql.sql\": {name: \"SQL\", wrapped: true},\n\n    \"docs/textile.textile\": {name: \"Textile\", wrapped: true},\n\n    \"docs/c9search.c9search_results\": \"C9 Search Results\",\n    \"docs/mel.mel\": \"MEL\",\n    \"docs/Nix.nix\": \"Nix\"\n};\n\nvar ownSource = {\n    /* filled from require*/\n};\n\nvar hugeDocs = require.toUrl ? {\n    \"build/src/ace.js\": \"\",\n    \"build/src-min/ace.js\": \"\"\n} : {\n    \"src/ace.js\": \"\",\n    \"src-min/ace.js\": \"\"\n};\n\nmodelist.modes.forEach(function(m) {\n    var ext = m.extensions.split(\"|\")[0];\n    if (ext[0] === \"^\") {\n        path = ext.substr(1);\n    } else {\n        var path = m.name + \".\" + ext;\n    }\n    path = \"docs/\" + path;\n    if (!docs[path]) {\n        docs[path] = {name: m.caption};\n    } else if (typeof docs[path] == \"object\" && !docs[path].name) {\n        docs[path].name = m.caption;\n    }\n});\n\n\n\nif (window.require && window.require.s) try {\n    for (var path in window.require.s.contexts._.defined) {\n        if (path.indexOf(\"!\") != -1)\n            path = path.split(\"!\").pop();\n        else\n            path = path + \".js\";\n        ownSource[path] = \"\";\n    }\n} catch(e) {}\n\nfunction sort(list) {\n    return list.sort(function(a, b) {\n        var cmp = (b.order || 0) - (a.order || 0);\n        return cmp || a.name && a.name.localeCompare(b.name);\n    });\n}\n\nfunction prepareDocList(docs) {\n    var list = [];\n    for (var path in docs) {\n        var doc = docs[path];\n        if (typeof doc != \"object\")\n            doc = {name: doc || path};\n\n        doc.path = path;\n        doc.desc = doc.name.replace(/^(ace|docs|demo|build)\\//, \"\");\n        if (doc.desc.length > 18)\n            doc.desc = doc.desc.slice(0, 7) + \"..\" + doc.desc.slice(-9);\n\n        fileCache[doc.name] = doc;\n        list.push(doc);\n    }\n\n    return list;\n}\n\nfunction loadDoc(name, callback) {\n    var doc = fileCache[name];\n    if (!doc)\n        return callback(null);\n\n    if (doc.session)\n        return callback(doc.session);\n\n    // TODO: show load screen while waiting\n    var path = doc.path;\n    var parts = path.split(\"/\");\n    if (parts[0] == \"docs\")\n        path = \"demo/kitchen-sink/\" + path;\n    else if (parts[0] == \"ace\")\n        path = \"lib/\" + path;\n\n    net.get(path, function(x) {\n        initDoc(x, path, doc);\n        callback(doc.session);\n    });\n}\n\nfunction saveDoc(name, callback) {\n    var doc = fileCache[name] || name;\n    if (!doc || !doc.session)\n        return callback(\"Unknown document: \" + name);\n\n    var path = doc.path;\n    var parts = path.split(\"/\");\n    if (parts[0] == \"docs\")\n        path = \"demo/kitchen-sink/\" + path;\n    else if (parts[0] == \"ace\")\n        path = \"lib/\" + path;\n\n    upload(path, doc.session.getValue(), callback);\n}\n\nfunction upload(url, data, callback) {\n    url = net.qualifyURL(url);\n    if (!/https?:/.test(url))\n        return callback(new Error(\"Unsupported url scheme\"));\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"PUT\", url, true);\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n            callback(!/^2../.test(xhr.status));\n        }\n    };\n    xhr.send(data);\n};\n\n\nmodule.exports = {\n    fileCache: fileCache,\n    docs: sort(prepareDocList(docs)),\n    ownSource: prepareDocList(ownSource),\n    hugeDocs: prepareDocList(hugeDocs),\n    initDoc: initDoc,\n    loadDoc: loadDoc,\n    saveDoc: saveDoc\n};\nmodule.exports.all = {\n    \"Mode Examples\": module.exports.docs,\n    \"Huge documents\": module.exports.hugeDocs,\n    \"own source\": module.exports.ownSource\n};\n\n});\n\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/demo/kitchen-sink/file_drop.js":"/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\ndefine(function(require, exports, module) {\n\nvar config = require(\"ace/config\");\nvar event = require(\"ace/lib/event\");\nvar modelist = require(\"ace/ext/modelist\");\n\nmodule.exports = function(editor) {\n    event.addListener(editor.container, \"dragover\", function(e) {\n        var types = e.dataTransfer.types;\n        if (types && Array.prototype.indexOf.call(types, 'Files') !== -1)\n            return event.preventDefault(e);\n    });\n\n    event.addListener(editor.container, \"drop\", function(e) {\n        var file;\n        try {\n            file = e.dataTransfer.files[0];\n            if (window.FileReader) {\n                var reader = new FileReader();\n                reader.onload = function() {\n                    var mode = modelist.getModeForPath(file.name);\n                    editor.session.doc.setValue(reader.result);\n                    editor.session.setMode(mode.mode);\n                    editor.session.modeName = mode.name;\n                };\n                reader.readAsText(file);\n            }\n            return event.preventDefault(e);\n        } catch(err) {\n            return event.stopEvent(e);\n        }\n    });\n};\n\nvar Editor = require(\"ace/editor\").Editor;\nconfig.defineOptions(Editor.prototype, \"editor\", {\n    loadDroppedFile: {\n        set: function() { module.exports(this); },\n        value: true\n    }\n});\n\n});","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/demo/kitchen-sink/inline_editor.js":"/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar LineWidgets = require(\"ace/line_widgets\").LineWidgets;\nvar Editor = require(\"ace/editor\").Editor;\nvar Renderer = require(\"ace/virtual_renderer\").VirtualRenderer;\nvar dom = require(\"ace/lib/dom\");\n\n\nrequire(\"ace/commands/default_commands\").commands.push({\n    name: \"openInlineEditor\",\n    bindKey: \"F3\",\n    exec: function(editor) {\n        var split = window.env.split;\n        var s = editor.session;\n        var inlineEditor = new Editor(new Renderer());\n        var splitSession = split.$cloneSession(s);\n\n        var row = editor.getCursorPosition().row;\n        if (editor.session.lineWidgets && editor.session.lineWidgets[row]) {\n            editor.session.lineWidgets[row].destroy();\n            return;\n        }\n        \n        var rowCount = 10;\n        var w = {\n            row: row, \n           // rowCount: rowCount, \n            fixedWidth: true,\n            el: dom.createElement(\"div\"),\n            editor: inlineEditor\n        };\n        var el = w.el;\n        el.appendChild(inlineEditor.container);\n\n        if (!editor.session.widgetManager) {\n            editor.session.widgetManager = new LineWidgets(editor.session);\n            editor.session.widgetManager.attach(editor);\n        }\n        \n        var h = rowCount*editor.renderer.layerConfig.lineHeight;\n        inlineEditor.container.style.height = h + \"px\";\n\n        el.style.position = \"absolute\";\n        el.style.zIndex = \"4\";\n        el.style.borderTop = \"solid blue 2px\";\n        el.style.borderBottom = \"solid blue 2px\";\n        \n        inlineEditor.setSession(splitSession);\n        editor.session.widgetManager.addLineWidget(w);\n        \n        var kb = {\n            handleKeyboard:function(_,hashId, keyString) {\n                if (hashId === 0 && keyString === \"esc\") {\n                    w.destroy();\n                    return true;\n                }\n            }\n        };\n        \n        w.destroy = function() {\n            editor.keyBinding.removeKeyboardHandler(kb);\n            s.widgetManager.removeLineWidget(w);\n        };\n        \n        editor.keyBinding.addKeyboardHandler(kb);\n        inlineEditor.keyBinding.addKeyboardHandler(kb);\n        inlineEditor.setTheme(\"ace/theme/solarized_light\");\n    }\n});\n});\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/demo/kitchen-sink/layout.js":"\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar dom = require(\"ace/lib/dom\");\nvar event = require(\"ace/lib/event\");\n\nvar EditSession = require(\"ace/edit_session\").EditSession;\nvar UndoManager = require(\"ace/undomanager\").UndoManager;\nvar Renderer = require(\"ace/virtual_renderer\").VirtualRenderer;\nvar Editor = require(\"ace/editor\").Editor;\nvar MultiSelect = require(\"ace/multi_select\").MultiSelect;\n\ndom.importCssString(\"\\\nsplitter {\\\n    border: 1px solid #C6C6D2;\\\n    width: 0px;\\\n    cursor: ew-resize;\\\n    z-index:10}\\\nsplitter:hover {\\\n    margin-left: -2px;\\\n    width:3px;\\\n    border-color: #B5B4E0;\\\n}\\\n\", \"splitEditor\");\n\nexports.edit = function(el) {\n    if (typeof(el) == \"string\")\n        el = document.getElementById(el);\n\n    var editor = new Editor(new Renderer(el, require(\"ace/theme/textmate\")));\n\n    editor.resize();\n    event.addListener(window, \"resize\", function() {\n        editor.resize();\n    });\n    return editor;\n};\n\n\nvar SplitRoot = function(el, theme, position, getSize) {\n    el.style.position = position || \"relative\";\n    this.container = el;\n    this.getSize = getSize || this.getSize;\n    this.resize = this.$resize.bind(this);\n\n    event.addListener(el.ownerDocument.defaultView, \"resize\", this.resize);\n    this.editor = this.createEditor();\n};\n\n(function(){\n    this.createEditor = function() {\n        var el = document.createElement(\"div\");\n        el.className = this.$editorCSS;\n        el.style.cssText = \"position: absolute; top:0px; bottom:0px\";\n        this.$container.appendChild(el);\n        var session = new EditSession(\"\");\n        var editor = new Editor(new Renderer(el, this.$theme));\n\n        /*editor.on(\"focus\", function() {\n            this._emit(\"focus\", editor);\n        }.bind(this));*/\n\n        this.$editors.push(editor);\n        editor.setFontSize(this.$fontSize);\n        return editor;\n    };\n    this.$resize = function() {\n        var size = this.getSize(this.container);\n        this.rect = {\n            x: size.left,\n            y: size.top,\n            w: size.width,\n            h: size.height\n        };\n        this.item.resize(this.rect);\n    };\n    this.getSize = function(el) {\n        return el.getBoundingClientRect();\n    };\n    this.destroy = function() {\n        var win = this.container.ownerDocument.defaultView;\n        event.removeListener(win, \"resize\", this.resize);\n    };\n\n\n}).call(SplitRoot.prototype);\n\n\n\nvar Split = function(){\n\n};\n(function(){\n    this.execute = function(options) {\n        this.$u.execute(options);\n    };\n\n}).call(Split.prototype);\n\n\n\nexports.singleLineEditor = function(el) {\n    var renderer = new Renderer(el);\n    el.style.overflow = \"hidden\";\n\n    renderer.screenToTextCoordinates = function(x, y) {\n        var pos = this.pixelToScreenCoordinates(x, y);\n        return this.session.screenToDocumentPosition(\n            Math.min(this.session.getScreenLength() - 1, Math.max(pos.row, 0)),\n            Math.max(pos.column, 0)\n        );\n    };\n\n    renderer.$maxLines = 4;\n\n    renderer.setStyle(\"ace_one-line\");\n    var editor = new Editor(renderer);\n    editor.session.setUndoManager(new UndoManager());\n\n    editor.setShowPrintMargin(false);\n    editor.renderer.setShowGutter(false);\n    editor.renderer.setHighlightGutterLine(false);\n    editor.$mouseHandler.$focusWaitTimout = 0;\n\n    return editor;\n};\n\n\n\n});\n\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/demo/kitchen-sink/require.js":"/** vim: et:ts=4:sw=4:sts=4\n * @license RequireJS 2.1.11+ Copyright (c) 2010-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/requirejs for details\n */\n//Not using strict: uneven strict support in browsers, #392, and causes\n//problems with requirejs.exec()/transpiler plugins that may not be strict.\n/*jslint regexp: true, nomen: true, sloppy: true */\n/*global window, navigator, document, importScripts, setTimeout, opera */\n\nvar requirejs, require, define;\n(function (global) {\n    var req, s, head, baseElement, dataMain, src,\n        interactiveScript, currentlyAddingScript, mainScript, subPath,\n        version = '2.1.11+',\n        commentRegExp = /(\\/\\*([\\s\\S]*?)\\*\\/|([^:]|^)\\/\\/(.*)$)/mg,\n        cjsRequireRegExp = /[^.]\\s*require\\s*\\(\\s*[\"']([^'\"\\s]+)[\"']\\s*\\)/g,\n        jsSuffixRegExp = /\\.js$/,\n        currDirRegExp = /^\\.\\//,\n        op = Object.prototype,\n        ostring = op.toString,\n        hasOwn = op.hasOwnProperty,\n        ap = Array.prototype,\n        apsp = ap.splice,\n        isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document),\n        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',\n        //PS3 indicates loaded and complete, but need to wait for complete\n        //specifically. Sequence is 'loading', 'loaded', execution,\n        // then 'complete'. The UA check is unfortunate, but not sure how\n        //to feature test w/o causing perf issues.\n        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?\n                      /^complete$/ : /^(complete|loaded)$/,\n        defContextName = '_',\n        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.\n        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',\n        contexts = {},\n        cfg = {},\n        globalDefQueue = [],\n        useInteractive = false;\n\n    function isFunction(it) {\n        return ostring.call(it) === '[object Function]';\n    }\n\n    function isArray(it) {\n        return ostring.call(it) === '[object Array]';\n    }\n\n    /**\n     * Helper function for iterating over an array. If the func returns\n     * a true value, it will break out of the loop.\n     */\n    function each(ary, func) {\n        if (ary) {\n            var i;\n            for (i = 0; i < ary.length; i += 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Helper function for iterating over an array backwards. If the func\n     * returns a true value, it will break out of the loop.\n     */\n    function eachReverse(ary, func) {\n        if (ary) {\n            var i;\n            for (i = ary.length - 1; i > -1; i -= 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    function getOwn(obj, prop) {\n        return hasProp(obj, prop) && obj[prop];\n    }\n\n    /**\n     * Cycles over properties in an object and calls a function for each\n     * property value. If the function returns a truthy value, then the\n     * iteration is stopped.\n     */\n    function eachProp(obj, func) {\n        var prop;\n        for (prop in obj) {\n            if (hasProp(obj, prop)) {\n                if (func(obj[prop], prop)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Simple function to mix in properties from source into target,\n     * but only if target does not already have a property of the same name.\n     */\n    function mixin(target, source, force, deepStringMixin) {\n        if (source) {\n            eachProp(source, function (value, prop) {\n                if (force || !hasProp(target, prop)) {\n                    if (deepStringMixin && typeof value === 'object' && value &&\n                        !isArray(value) && !isFunction(value) &&\n                        !(value instanceof RegExp)) {\n\n                        if (!target[prop]) {\n                            target[prop] = {};\n                        }\n                        mixin(target[prop], value, force, deepStringMixin);\n                    } else {\n                        target[prop] = value;\n                    }\n                }\n            });\n        }\n        return target;\n    }\n\n    //Similar to Function.prototype.bind, but the 'this' object is specified\n    //first, since it is easier to read/figure out what 'this' will be.\n    function bind(obj, fn) {\n        return function () {\n            return fn.apply(obj, arguments);\n        };\n    }\n\n    function scripts() {\n        return document.getElementsByTagName('script');\n    }\n\n    function defaultOnError(err) {\n        throw err;\n    }\n\n    //Allow getting a global that is expressed in\n    //dot notation, like 'a.b.c'.\n    function getGlobal(value) {\n        if (!value) {\n            return value;\n        }\n        var g = global;\n        each(value.split('.'), function (part) {\n            g = g[part];\n        });\n        return g;\n    }\n\n    /**\n     * Constructs an error with a pointer to an URL with more information.\n     * @param {String} id the error ID that maps to an ID on a web page.\n     * @param {String} message human readable error.\n     * @param {Error} [err] the original error, if there is one.\n     *\n     * @returns {Error}\n     */\n    function makeError(id, msg, err, requireModules) {\n        var e = new Error(msg + '\\nhttp://requirejs.org/docs/errors.html#' + id);\n        e.requireType = id;\n        e.requireModules = requireModules;\n        if (err) {\n            e.originalError = err;\n        }\n        return e;\n    }\n\n    if (typeof define !== 'undefined') {\n        //If a define is already in play via another AMD loader,\n        //do not overwrite.\n        return;\n    }\n\n    if (typeof requirejs !== 'undefined') {\n        if (isFunction(requirejs)) {\n            //Do not overwrite an existing requirejs instance.\n            return;\n        }\n        cfg = requirejs;\n        requirejs = undefined;\n    }\n\n    //Allow for a require config object\n    if (typeof require !== 'undefined' && !isFunction(require)) {\n        //assume it is a config object.\n        cfg = require;\n        require = undefined;\n    }\n\n    function newContext(contextName) {\n        var inCheckLoaded, Module, context, handlers,\n            checkLoadedTimeoutId,\n            config = {\n                //Defaults. Do not set a default for map\n                //config to speed up normalize(), which\n                //will run faster if there is no default.\n                waitSeconds: 7,\n                baseUrl: './',\n                paths: {},\n                bundles: {},\n                pkgs: {},\n                shim: {},\n                config: {}\n            },\n            registry = {},\n            //registry of just enabled modules, to speed\n            //cycle breaking code when lots of modules\n            //are registered, but not activated.\n            enabledRegistry = {},\n            undefEvents = {},\n            defQueue = [],\n            defined = {},\n            urlFetched = {},\n            bundlesMap = {},\n            requireCounter = 1,\n            unnormalizedCounter = 1;\n\n        /**\n         * Trims the . and .. from an array of path segments.\n         * It will keep a leading path segment if a .. will become\n         * the first path segment, to help with module name lookups,\n         * which act like paths, but can be remapped. But the end result,\n         * all paths that use this function should look normalized.\n         * NOTE: this method MODIFIES the input array.\n         * @param {Array} ary the array of path segments.\n         */\n        function trimDots(ary) {\n            var i, part, length = ary.length;\n            for (i = 0; i < length; i++) {\n                part = ary[i];\n                if (part === '.') {\n                    ary.splice(i, 1);\n                    i -= 1;\n                } else if (part === '..') {\n                    if (i === 1 && (ary[2] === '..' || ary[0] === '..')) {\n                        //End of the line. Keep at least one non-dot\n                        //path segment at the front so it can be mapped\n                        //correctly to disk. Otherwise, there is likely\n                        //no path mapping for a path starting with '..'.\n                        //This can still fail, but catches the most reasonable\n                        //uses of ..\n                        break;\n                    } else if (i > 0) {\n                        ary.splice(i - 1, 2);\n                        i -= 2;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Given a relative module name, like ./something, normalize it to\n         * a real name that can be mapped to a path.\n         * @param {String} name the relative name\n         * @param {String} baseName a real name that the name arg is relative\n         * to.\n         * @param {Boolean} applyMap apply the map config to the value. Should\n         * only be done if this normalization is for a dependency ID.\n         * @returns {String} normalized name\n         */\n        function normalize(name, baseName, applyMap) {\n            var pkgMain, mapValue, nameParts, i, j, nameSegment, lastIndex,\n                foundMap, foundI, foundStarMap, starI,\n                baseParts = baseName && baseName.split('/'),\n                normalizedBaseParts = baseParts,\n                map = config.map,\n                starMap = map && map['*'];\n\n            //Adjust any relative paths.\n            if (name && name.charAt(0) === '.') {\n                //If have a base name, try to normalize against it,\n                //otherwise, assume it is a top-level require that will\n                //be relative to baseUrl in the end.\n                if (baseName) {\n                    //Convert baseName to array, and lop off the last part,\n                    //so that . matches that 'directory' and not name of the baseName's\n                    //module. For instance, baseName of 'one/two/three', maps to\n                    //'one/two/three.js', but we want the directory, 'one/two' for\n                    //this normalization.\n                    normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n                    name = name.split('/');\n                    lastIndex = name.length - 1;\n\n                    // If wanting node ID compatibility, strip .js from end\n                    // of IDs. Have to do this here, and not in nameToUrl\n                    // because node allows either .js or non .js to map\n                    // to same file.\n                    if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                        name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                    }\n\n                    name = normalizedBaseParts.concat(name);\n                    trimDots(name);\n                    name = name.join('/');\n                } else if (name.indexOf('./') === 0) {\n                    // No baseName, so this is ID is resolved relative\n                    // to baseUrl, pull off the leading dot.\n                    name = name.substring(2);\n                }\n            }\n\n            //Apply map config if available.\n            if (applyMap && map && (baseParts || starMap)) {\n                nameParts = name.split('/');\n\n                outerLoop: for (i = nameParts.length; i > 0; i -= 1) {\n                    nameSegment = nameParts.slice(0, i).join('/');\n\n                    if (baseParts) {\n                        //Find the longest baseName segment match in the config.\n                        //So, do joins on the biggest to smallest lengths of baseParts.\n                        for (j = baseParts.length; j > 0; j -= 1) {\n                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));\n\n                            //baseName segment has config, find if it has one for\n                            //this name.\n                            if (mapValue) {\n                                mapValue = getOwn(mapValue, nameSegment);\n                                if (mapValue) {\n                                    //Match, update name to the new value.\n                                    foundMap = mapValue;\n                                    foundI = i;\n                                    break outerLoop;\n                                }\n                            }\n                        }\n                    }\n\n                    //Check for a star map match, but just hold on to it,\n                    //if there is a shorter segment match later in a matching\n                    //config, then favor over this star map.\n                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {\n                        foundStarMap = getOwn(starMap, nameSegment);\n                        starI = i;\n                    }\n                }\n\n                if (!foundMap && foundStarMap) {\n                    foundMap = foundStarMap;\n                    foundI = starI;\n                }\n\n                if (foundMap) {\n                    nameParts.splice(0, foundI, foundMap);\n                    name = nameParts.join('/');\n                }\n            }\n\n            // If the name points to a package's name, use\n            // the package main instead.\n            pkgMain = getOwn(config.pkgs, name);\n\n            return pkgMain ? pkgMain : name;\n        }\n\n        function removeScript(name) {\n            if (isBrowser) {\n                each(scripts(), function (scriptNode) {\n                    if (scriptNode.getAttribute('data-requiremodule') === name &&\n                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {\n                        scriptNode.parentNode.removeChild(scriptNode);\n                        return true;\n                    }\n                });\n            }\n        }\n\n        function hasPathFallback(id) {\n            var pathConfig = getOwn(config.paths, id);\n            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {\n                //Pop off the first array value, since it failed, and\n                //retry\n                pathConfig.shift();\n                context.require.undef(id);\n\n                //Custom require that does not do map translation, since\n                //ID is \"absolute\", already mapped/resolved.\n                context.makeRequire(null, {\n                    skipMap: true\n                })([id]);\n\n                return true;\n            }\n        }\n\n        //Turns a plugin!resource to [plugin, resource]\n        //with the plugin being undefined if the name\n        //did not have a plugin prefix.\n        function splitPrefix(name) {\n            var prefix,\n                index = name ? name.indexOf('!') : -1;\n            if (index > -1) {\n                prefix = name.substring(0, index);\n                name = name.substring(index + 1, name.length);\n            }\n            return [prefix, name];\n        }\n\n        /**\n         * Creates a module mapping that includes plugin prefix, module\n         * name, and path. If parentModuleMap is provided it will\n         * also normalize the name via require.normalize()\n         *\n         * @param {String} name the module name\n         * @param {String} [parentModuleMap] parent module map\n         * for the module name, used to resolve relative names.\n         * @param {Boolean} isNormalized: is the ID already normalized.\n         * This is true if this call is done for a define() module ID.\n         * @param {Boolean} applyMap: apply the map config to the ID.\n         * Should only be true if this map is for a dependency.\n         *\n         * @returns {Object}\n         */\n        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {\n            var url, pluginModule, suffix, nameParts,\n                prefix = null,\n                parentName = parentModuleMap ? parentModuleMap.name : null,\n                originalName = name,\n                isDefine = true,\n                normalizedName = '';\n\n            //If no name, then it means it is a require call, generate an\n            //internal name.\n            if (!name) {\n                isDefine = false;\n                name = '_@r' + (requireCounter += 1);\n            }\n\n            nameParts = splitPrefix(name);\n            prefix = nameParts[0];\n            name = nameParts[1];\n\n            if (prefix) {\n                prefix = normalize(prefix, parentName, applyMap);\n                pluginModule = getOwn(defined, prefix);\n            }\n\n            //Account for relative paths if there is a base name.\n            if (name) {\n                if (prefix) {\n                    if (pluginModule && pluginModule.normalize) {\n                        //Plugin is loaded, use its normalize method.\n                        normalizedName = pluginModule.normalize(name, function (name) {\n                            return normalize(name, parentName, applyMap);\n                        });\n                    } else {\n                        normalizedName = normalize(name, parentName, applyMap);\n                    }\n                } else {\n                    //A regular module.\n                    normalizedName = normalize(name, parentName, applyMap);\n\n                    //Normalized name may be a plugin ID due to map config\n                    //application in normalize. The map config values must\n                    //already be normalized, so do not need to redo that part.\n                    nameParts = splitPrefix(normalizedName);\n                    prefix = nameParts[0];\n                    normalizedName = nameParts[1];\n                    isNormalized = true;\n\n                    url = context.nameToUrl(normalizedName);\n                }\n            }\n\n            //If the id is a plugin id that cannot be determined if it needs\n            //normalization, stamp it with a unique ID so two matching relative\n            //ids that may conflict can be separate.\n            suffix = prefix && !pluginModule && !isNormalized ?\n                     '_unnormalized' + (unnormalizedCounter += 1) :\n                     '';\n\n            return {\n                prefix: prefix,\n                name: normalizedName,\n                parentMap: parentModuleMap,\n                unnormalized: !!suffix,\n                url: url,\n                originalName: originalName,\n                isDefine: isDefine,\n                id: (prefix ?\n                        prefix + '!' + normalizedName :\n                        normalizedName) + suffix\n            };\n        }\n\n        function getModule(depMap) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (!mod) {\n                mod = registry[id] = new context.Module(depMap);\n            }\n\n            return mod;\n        }\n\n        function on(depMap, name, fn) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (hasProp(defined, id) &&\n                    (!mod || mod.defineEmitComplete)) {\n                if (name === 'defined') {\n                    fn(defined[id]);\n                }\n            } else {\n                mod = getModule(depMap);\n                if (mod.error && name === 'error') {\n                    fn(mod.error);\n                } else {\n                    mod.on(name, fn);\n                }\n            }\n        }\n\n        function onError(err, errback) {\n            var ids = err.requireModules,\n                notified = false;\n\n            if (errback) {\n                errback(err);\n            } else {\n                each(ids, function (id) {\n                    var mod = getOwn(registry, id);\n                    if (mod) {\n                        //Set error on module, so it skips timeout checks.\n                        mod.error = err;\n                        if (mod.events.error) {\n                            notified = true;\n                            mod.emit('error', err);\n                        }\n                    }\n                });\n\n                if (!notified) {\n                    req.onError(err);\n                }\n            }\n        }\n\n        /**\n         * Internal method to transfer globalQueue items to this context's\n         * defQueue.\n         */\n        function takeGlobalQueue() {\n            //Push all the globalDefQueue items into the context's defQueue\n            if (globalDefQueue.length) {\n                //Array splice in the values since the context code has a\n                //local var ref to defQueue, so cannot just reassign the one\n                //on context.\n                apsp.apply(defQueue,\n                           [defQueue.length, 0].concat(globalDefQueue));\n                globalDefQueue = [];\n            }\n        }\n\n        handlers = {\n            'require': function (mod) {\n                if (mod.require) {\n                    return mod.require;\n                } else {\n                    return (mod.require = context.makeRequire(mod.map));\n                }\n            },\n            'exports': function (mod) {\n                mod.usingExports = true;\n                if (mod.map.isDefine) {\n                    if (mod.exports) {\n                        return (defined[mod.map.id] = mod.exports);\n                    } else {\n                        return (mod.exports = defined[mod.map.id] = {});\n                    }\n                }\n            },\n            'module': function (mod) {\n                if (mod.module) {\n                    return mod.module;\n                } else {\n                    return (mod.module = {\n                        id: mod.map.id,\n                        uri: mod.map.url,\n                        config: function () {\n                            return  getOwn(config.config, mod.map.id) || {};\n                        },\n                        exports: mod.exports || (mod.exports = {})\n                    });\n                }\n            }\n        };\n\n        function cleanRegistry(id) {\n            //Clean up machinery used for waiting modules.\n            delete registry[id];\n            delete enabledRegistry[id];\n        }\n\n        function breakCycle(mod, traced, processed) {\n            var id = mod.map.id;\n\n            if (mod.error) {\n                mod.emit('error', mod.error);\n            } else {\n                traced[id] = true;\n                each(mod.depMaps, function (depMap, i) {\n                    var depId = depMap.id,\n                        dep = getOwn(registry, depId);\n\n                    //Only force things that have not completed\n                    //being defined, so still in the registry,\n                    //and only if it has not been matched up\n                    //in the module already.\n                    if (dep && !mod.depMatched[i] && !processed[depId]) {\n                        if (getOwn(traced, depId)) {\n                            mod.defineDep(i, defined[depId]);\n                            mod.check(); //pass false?\n                        } else {\n                            breakCycle(dep, traced, processed);\n                        }\n                    }\n                });\n                processed[id] = true;\n            }\n        }\n\n        function checkLoaded() {\n            var err, usingPathFallback,\n                waitInterval = config.waitSeconds * 1000,\n                //It is possible to disable the wait interval by using waitSeconds of 0.\n                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),\n                noLoads = [],\n                reqCalls = [],\n                stillLoading = false,\n                needCycleCheck = true;\n\n            //Do not bother if this call was a result of a cycle break.\n            if (inCheckLoaded) {\n                return;\n            }\n\n            inCheckLoaded = true;\n\n            //Figure out the state of all the modules.\n            eachProp(enabledRegistry, function (mod) {\n                var map = mod.map,\n                    modId = map.id;\n\n                //Skip things that are not enabled or in error state.\n                if (!mod.enabled) {\n                    return;\n                }\n\n                if (!map.isDefine) {\n                    reqCalls.push(mod);\n                }\n\n                if (!mod.error) {\n                    //If the module should be executed, and it has not\n                    //been inited and time is up, remember it.\n                    if (!mod.inited && expired) {\n                        if (hasPathFallback(modId)) {\n                            usingPathFallback = true;\n                            stillLoading = true;\n                        } else {\n                            noLoads.push(modId);\n                            removeScript(modId);\n                        }\n                    } else if (!mod.inited && mod.fetched && map.isDefine) {\n                        stillLoading = true;\n                        if (!map.prefix) {\n                            //No reason to keep looking for unfinished\n                            //loading. If the only stillLoading is a\n                            //plugin resource though, keep going,\n                            //because it may be that a plugin resource\n                            //is waiting on a non-plugin cycle.\n                            return (needCycleCheck = false);\n                        }\n                    }\n                }\n            });\n\n            if (expired && noLoads.length) {\n                //If wait time expired, throw error of unloaded modules.\n                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);\n                err.contextName = context.contextName;\n                return onError(err);\n            }\n\n            //Not expired, check for a cycle.\n            if (needCycleCheck) {\n                each(reqCalls, function (mod) {\n                    breakCycle(mod, {}, {});\n                });\n            }\n\n            //If still waiting on loads, and the waiting load is something\n            //other than a plugin resource, or there are still outstanding\n            //scripts, then just try back later.\n            if ((!expired || usingPathFallback) && stillLoading) {\n                //Something is still waiting to load. Wait for it, but only\n                //if a timeout is not already in effect.\n                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {\n                    checkLoadedTimeoutId = setTimeout(function () {\n                        checkLoadedTimeoutId = 0;\n                        checkLoaded();\n                    }, 50);\n                }\n            }\n\n            inCheckLoaded = false;\n        }\n\n        Module = function (map) {\n            this.events = getOwn(undefEvents, map.id) || {};\n            this.map = map;\n            this.shim = getOwn(config.shim, map.id);\n            this.depExports = [];\n            this.depMaps = [];\n            this.depMatched = [];\n            this.pluginMaps = {};\n            this.depCount = 0;\n\n            /* this.exports this.factory\n               this.depMaps = [],\n               this.enabled, this.fetched\n            */\n        };\n\n        Module.prototype = {\n            init: function (depMaps, factory, errback, options) {\n                options = options || {};\n\n                //Do not do more inits if already done. Can happen if there\n                //are multiple define calls for the same module. That is not\n                //a normal, common case, but it is also not unexpected.\n                if (this.inited) {\n                    return;\n                }\n\n                this.factory = factory;\n\n                if (errback) {\n                    //Register for errors on this module.\n                    this.on('error', errback);\n                } else if (this.events.error) {\n                    //If no errback already, but there are error listeners\n                    //on this module, set up an errback to pass to the deps.\n                    errback = bind(this, function (err) {\n                        this.emit('error', err);\n                    });\n                }\n\n                //Do a copy of the dependency array, so that\n                //source inputs are not modified. For example\n                //\"shim\" deps are passed in here directly, and\n                //doing a direct modification of the depMaps array\n                //would affect that config.\n                this.depMaps = depMaps && depMaps.slice(0);\n\n                this.errback = errback;\n\n                //Indicate this module has be initialized\n                this.inited = true;\n\n                this.ignore = options.ignore;\n\n                //Could have option to init this module in enabled mode,\n                //or could have been previously marked as enabled. However,\n                //the dependencies are not known until init is called. So\n                //if enabled previously, now trigger dependencies as enabled.\n                if (options.enabled || this.enabled) {\n                    //Enable this module and dependencies.\n                    //Will call this.check()\n                    this.enable();\n                } else {\n                    this.check();\n                }\n            },\n\n            defineDep: function (i, depExports) {\n                //Because of cycles, defined callback for a given\n                //export can be called more than once.\n                if (!this.depMatched[i]) {\n                    this.depMatched[i] = true;\n                    this.depCount -= 1;\n                    this.depExports[i] = depExports;\n                }\n            },\n\n            fetch: function () {\n                if (this.fetched) {\n                    return;\n                }\n                this.fetched = true;\n\n                context.startTime = (new Date()).getTime();\n\n                var map = this.map;\n\n                //If the manager is for a plugin managed resource,\n                //ask the plugin to load it now.\n                if (this.shim) {\n                    context.makeRequire(this.map, {\n                        enableBuildCallback: true\n                    })(this.shim.deps || [], bind(this, function () {\n                        return map.prefix ? this.callPlugin() : this.load();\n                    }));\n                } else {\n                    //Regular dependency.\n                    return map.prefix ? this.callPlugin() : this.load();\n                }\n            },\n\n            load: function () {\n                var url = this.map.url;\n\n                //Regular dependency.\n                if (!urlFetched[url]) {\n                    urlFetched[url] = true;\n                    context.load(this.map.id, url);\n                }\n            },\n\n            /**\n             * Checks if the module is ready to define itself, and if so,\n             * define it.\n             */\n            check: function () {\n                if (!this.enabled || this.enabling) {\n                    return;\n                }\n\n                var err, cjsModule,\n                    id = this.map.id,\n                    depExports = this.depExports,\n                    exports = this.exports,\n                    factory = this.factory;\n\n                if (!this.inited) {\n                    this.fetch();\n                } else if (this.error) {\n                    this.emit('error', this.error);\n                } else if (!this.defining) {\n                    //The factory could trigger another require call\n                    //that would result in checking this module to\n                    //define itself again. If already in the process\n                    //of doing that, skip this work.\n                    this.defining = true;\n\n                    if (this.depCount < 1 && !this.defined) {\n                        if (isFunction(factory)) {\n                            //If there is an error listener, favor passing\n                            //to that instead of throwing an error. However,\n                            //only do it for define()'d  modules. require\n                            //errbacks should not be called for failures in\n                            //their callbacks (#699). However if a global\n                            //onError is set, use that.\n                            if ((this.events.error && this.map.isDefine) ||\n                                req.onError !== defaultOnError) {\n                                try {\n                                    exports = context.execCb(id, factory, depExports, exports);\n                                } catch (e) {\n                                    err = e;\n                                }\n                            } else {\n                                exports = context.execCb(id, factory, depExports, exports);\n                            }\n\n                            // Favor return value over exports. If node/cjs in play,\n                            // then will not have a return value anyway. Favor\n                            // module.exports assignment over exports object.\n                            if (this.map.isDefine && exports === undefined) {\n                                cjsModule = this.module;\n                                if (cjsModule) {\n                                    exports = cjsModule.exports;\n                                } else if (this.usingExports) {\n                                    //exports already set the defined value.\n                                    exports = this.exports;\n                                }\n                            }\n\n                            if (err) {\n                                err.requireMap = this.map;\n                                err.requireModules = this.map.isDefine ? [this.map.id] : null;\n                                err.requireType = this.map.isDefine ? 'define' : 'require';\n                                return onError((this.error = err));\n                            }\n\n                        } else {\n                            //Just a literal value\n                            exports = factory;\n                        }\n\n                        this.exports = exports;\n\n                        if (this.map.isDefine && !this.ignore) {\n                            defined[id] = exports;\n\n                            if (req.onResourceLoad) {\n                                req.onResourceLoad(context, this.map, this.depMaps);\n                            }\n                        }\n\n                        //Clean up\n                        cleanRegistry(id);\n\n                        this.defined = true;\n                    }\n\n                    //Finished the define stage. Allow calling check again\n                    //to allow define notifications below in the case of a\n                    //cycle.\n                    this.defining = false;\n\n                    if (this.defined && !this.defineEmitted) {\n                        this.defineEmitted = true;\n                        this.emit('defined', this.exports);\n                        this.defineEmitComplete = true;\n                    }\n\n                }\n            },\n\n            callPlugin: function () {\n                var map = this.map,\n                    id = map.id,\n                    //Map already normalized the prefix.\n                    pluginMap = makeModuleMap(map.prefix);\n\n                //Mark this as a dependency for this plugin, so it\n                //can be traced for cycles.\n                this.depMaps.push(pluginMap);\n\n                on(pluginMap, 'defined', bind(this, function (plugin) {\n                    var load, normalizedMap, normalizedMod,\n                        bundleId = getOwn(bundlesMap, this.map.id),\n                        name = this.map.name,\n                        parentName = this.map.parentMap ? this.map.parentMap.name : null,\n                        localRequire = context.makeRequire(map.parentMap, {\n                            enableBuildCallback: true\n                        });\n\n                    //If current map is not normalized, wait for that\n                    //normalized name to load instead of continuing.\n                    if (this.map.unnormalized) {\n                        //Normalize the ID if the plugin allows it.\n                        if (plugin.normalize) {\n                            name = plugin.normalize(name, function (name) {\n                                return normalize(name, parentName, true);\n                            }) || '';\n                        }\n\n                        //prefix and name should already be normalized, no need\n                        //for applying map config again either.\n                        normalizedMap = makeModuleMap(map.prefix + '!' + name,\n                                                      this.map.parentMap);\n                        on(normalizedMap,\n                            'defined', bind(this, function (value) {\n                                this.init([], function () { return value; }, null, {\n                                    enabled: true,\n                                    ignore: true\n                                });\n                            }));\n\n                        normalizedMod = getOwn(registry, normalizedMap.id);\n                        if (normalizedMod) {\n                            //Mark this as a dependency for this plugin, so it\n                            //can be traced for cycles.\n                            this.depMaps.push(normalizedMap);\n\n                            if (this.events.error) {\n                                normalizedMod.on('error', bind(this, function (err) {\n                                    this.emit('error', err);\n                                }));\n                            }\n                            normalizedMod.enable();\n                        }\n\n                        return;\n                    }\n\n                    //If a paths config, then just load that file instead to\n                    //resolve the plugin, as it is built into that paths layer.\n                    if (bundleId) {\n                        this.map.url = context.nameToUrl(bundleId);\n                        this.load();\n                        return;\n                    }\n\n                    load = bind(this, function (value) {\n                        this.init([], function () { return value; }, null, {\n                            enabled: true\n                        });\n                    });\n\n                    load.error = bind(this, function (err) {\n                        this.inited = true;\n                        this.error = err;\n                        err.requireModules = [id];\n\n                        //Remove temp unnormalized modules for this module,\n                        //since they will never be resolved otherwise now.\n                        eachProp(registry, function (mod) {\n                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {\n                                cleanRegistry(mod.map.id);\n                            }\n                        });\n\n                        onError(err);\n                    });\n\n                    //Allow plugins to load other code without having to know the\n                    //context or how to 'complete' the load.\n                    load.fromText = bind(this, function (text, textAlt) {\n                        /*jslint evil: true */\n                        var moduleName = map.name,\n                            moduleMap = makeModuleMap(moduleName),\n                            hasInteractive = useInteractive;\n\n                        //As of 2.1.0, support just passing the text, to reinforce\n                        //fromText only being called once per resource. Still\n                        //support old style of passing moduleName but discard\n                        //that moduleName in favor of the internal ref.\n                        if (textAlt) {\n                            text = textAlt;\n                        }\n\n                        //Turn off interactive script matching for IE for any define\n                        //calls in the text, then turn it back on at the end.\n                        if (hasInteractive) {\n                            useInteractive = false;\n                        }\n\n                        //Prime the system by creating a module instance for\n                        //it.\n                        getModule(moduleMap);\n\n                        //Transfer any config to this other module.\n                        if (hasProp(config.config, id)) {\n                            config.config[moduleName] = config.config[id];\n                        }\n\n                        try {\n                            req.exec(text);\n                        } catch (e) {\n                            return onError(makeError('fromtexteval',\n                                             'fromText eval for ' + id +\n                                            ' failed: ' + e,\n                                             e,\n                                             [id]));\n                        }\n\n                        if (hasInteractive) {\n                            useInteractive = true;\n                        }\n\n                        //Mark this as a dependency for the plugin\n                        //resource\n                        this.depMaps.push(moduleMap);\n\n                        //Support anonymous modules.\n                        context.completeLoad(moduleName);\n\n                        //Bind the value of that module to the value for this\n                        //resource ID.\n                        localRequire([moduleName], load);\n                    });\n\n                    //Use parentName here since the plugin's name is not reliable,\n                    //could be some weird string with no path that actually wants to\n                    //reference the parentName's path.\n                    plugin.load(map.name, localRequire, load, config);\n                }));\n\n                context.enable(pluginMap, this);\n                this.pluginMaps[pluginMap.id] = pluginMap;\n            },\n\n            enable: function () {\n                enabledRegistry[this.map.id] = this;\n                this.enabled = true;\n\n                //Set flag mentioning that the module is enabling,\n                //so that immediate calls to the defined callbacks\n                //for dependencies do not trigger inadvertent load\n                //with the depCount still being zero.\n                this.enabling = true;\n\n                //Enable each dependency\n                each(this.depMaps, bind(this, function (depMap, i) {\n                    var id, mod, handler;\n\n                    if (typeof depMap === 'string') {\n                        //Dependency needs to be converted to a depMap\n                        //and wired up to this module.\n                        depMap = makeModuleMap(depMap,\n                                               (this.map.isDefine ? this.map : this.map.parentMap),\n                                               false,\n                                               !this.skipMap);\n                        this.depMaps[i] = depMap;\n\n                        handler = getOwn(handlers, depMap.id);\n\n                        if (handler) {\n                            this.depExports[i] = handler(this);\n                            return;\n                        }\n\n                        this.depCount += 1;\n\n                        on(depMap, 'defined', bind(this, function (depExports) {\n                            this.defineDep(i, depExports);\n                            this.check();\n                        }));\n\n                        if (this.errback) {\n                            on(depMap, 'error', bind(this, this.errback));\n                        }\n                    }\n\n                    id = depMap.id;\n                    mod = registry[id];\n\n                    //Skip special modules like 'require', 'exports', 'module'\n                    //Also, don't call enable if it is already enabled,\n                    //important in circular dependency cases.\n                    if (!hasProp(handlers, id) && mod && !mod.enabled) {\n                        context.enable(depMap, this);\n                    }\n                }));\n\n                //Enable each plugin that is used in\n                //a dependency\n                eachProp(this.pluginMaps, bind(this, function (pluginMap) {\n                    var mod = getOwn(registry, pluginMap.id);\n                    if (mod && !mod.enabled) {\n                        context.enable(pluginMap, this);\n                    }\n                }));\n\n                this.enabling = false;\n\n                this.check();\n            },\n\n            on: function (name, cb) {\n                var cbs = this.events[name];\n                if (!cbs) {\n                    cbs = this.events[name] = [];\n                }\n                cbs.push(cb);\n            },\n\n            emit: function (name, evt) {\n                each(this.events[name], function (cb) {\n                    cb(evt);\n                });\n                if (name === 'error') {\n                    //Now that the error handler was triggered, remove\n                    //the listeners, since this broken Module instance\n                    //can stay around for a while in the registry.\n                    delete this.events[name];\n                }\n            }\n        };\n\n        function callGetModule(args) {\n            //Skip modules already defined.\n            if (!hasProp(defined, args[0])) {\n                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);\n            }\n        }\n\n        function removeListener(node, func, name, ieName) {\n            //Favor detachEvent because of IE9\n            //issue, see attachEvent/addEventListener comment elsewhere\n            //in this file.\n            if (node.detachEvent && !isOpera) {\n                //Probably IE. If not it will throw an error, which will be\n                //useful to know.\n                if (ieName) {\n                    node.detachEvent(ieName, func);\n                }\n            } else {\n                node.removeEventListener(name, func, false);\n            }\n        }\n\n        /**\n         * Given an event from a script node, get the requirejs info from it,\n         * and then removes the event listeners on the node.\n         * @param {Event} evt\n         * @returns {Object}\n         */\n        function getScriptData(evt) {\n            //Using currentTarget instead of target for Firefox 2.0's sake. Not\n            //all old browsers will be supported, but this one was easy enough\n            //to support and still makes sense.\n            var node = evt.currentTarget || evt.srcElement;\n\n            //Remove the listeners once here.\n            removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');\n            removeListener(node, context.onScriptError, 'error');\n\n            return {\n                node: node,\n                id: node && node.getAttribute('data-requiremodule')\n            };\n        }\n\n        function intakeDefines() {\n            var args;\n\n            //Any defined modules in the global queue, intake them now.\n            takeGlobalQueue();\n\n            //Make sure any remaining defQueue items get properly processed.\n            while (defQueue.length) {\n                args = defQueue.shift();\n                if (args[0] === null) {\n                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' + args[args.length - 1]));\n                } else {\n                    //args are id, deps, factory. Should be normalized by the\n                    //define() function.\n                    callGetModule(args);\n                }\n            }\n        }\n\n        context = {\n            config: config,\n            contextName: contextName,\n            registry: registry,\n            defined: defined,\n            urlFetched: urlFetched,\n            defQueue: defQueue,\n            Module: Module,\n            makeModuleMap: makeModuleMap,\n            nextTick: req.nextTick,\n            onError: onError,\n\n            /**\n             * Set a configuration for the context.\n             * @param {Object} cfg config object to integrate.\n             */\n            configure: function (cfg) {\n                //Make sure the baseUrl ends in a slash.\n                if (cfg.baseUrl) {\n                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {\n                        cfg.baseUrl += '/';\n                    }\n                }\n\n                //Save off the paths since they require special processing,\n                //they are additive.\n                var shim = config.shim,\n                    objs = {\n                        paths: true,\n                        bundles: true,\n                        config: true,\n                        map: true\n                    };\n\n                eachProp(cfg, function (value, prop) {\n                    if (objs[prop]) {\n                        if (!config[prop]) {\n                            config[prop] = {};\n                        }\n                        mixin(config[prop], value, true, true);\n                    } else {\n                        config[prop] = value;\n                    }\n                });\n\n                //Reverse map the bundles\n                if (cfg.bundles) {\n                    eachProp(cfg.bundles, function (value, prop) {\n                        each(value, function (v) {\n                            if (v !== prop) {\n                                bundlesMap[v] = prop;\n                            }\n                        });\n                    });\n                }\n\n                //Merge shim\n                if (cfg.shim) {\n                    eachProp(cfg.shim, function (value, id) {\n                        //Normalize the structure\n                        if (isArray(value)) {\n                            value = {\n                                deps: value\n                            };\n                        }\n                        if ((value.exports || value.init) && !value.exportsFn) {\n                            value.exportsFn = context.makeShimExports(value);\n                        }\n                        shim[id] = value;\n                    });\n                    config.shim = shim;\n                }\n\n                //Adjust packages if necessary.\n                if (cfg.packages) {\n                    each(cfg.packages, function (pkgObj) {\n                        var location, name;\n\n                        pkgObj = typeof pkgObj === 'string' ? { name: pkgObj } : pkgObj;\n\n                        name = pkgObj.name;\n                        location = pkgObj.location;\n                        if (location) {\n                            config.paths[name] = pkgObj.location;\n                        }\n\n                        //Save pointer to main module ID for pkg name.\n                        //Remove leading dot in main, so main paths are normalized,\n                        //and remove any trailing .js, since different package\n                        //envs have different conventions: some use a module name,\n                        //some use a file name.\n                        config.pkgs[name] = pkgObj.name + '/' + (pkgObj.main || 'main')\n                                     .replace(currDirRegExp, '')\n                                     .replace(jsSuffixRegExp, '');\n                    });\n                }\n\n                //If there are any \"waiting to execute\" modules in the registry,\n                //update the maps for them, since their info, like URLs to load,\n                //may have changed.\n                eachProp(registry, function (mod, id) {\n                    //If module already has init called, since it is too\n                    //late to modify them, and ignore unnormalized ones\n                    //since they are transient.\n                    if (!mod.inited && !mod.map.unnormalized) {\n                        mod.map = makeModuleMap(id);\n                    }\n                });\n\n                //If a deps array or a config callback is specified, then call\n                //require with those args. This is useful when require is defined as a\n                //config object before require.js is loaded.\n                if (cfg.deps || cfg.callback) {\n                    context.require(cfg.deps || [], cfg.callback);\n                }\n            },\n\n            makeShimExports: function (value) {\n                function fn() {\n                    var ret;\n                    if (value.init) {\n                        ret = value.init.apply(global, arguments);\n                    }\n                    return ret || (value.exports && getGlobal(value.exports));\n                }\n                return fn;\n            },\n\n            makeRequire: function (relMap, options) {\n                options = options || {};\n\n                function localRequire(deps, callback, errback) {\n                    var id, map, requireMod;\n\n                    if (options.enableBuildCallback && callback && isFunction(callback)) {\n                        callback.__requireJsBuild = true;\n                    }\n\n                    if (typeof deps === 'string') {\n                        if (isFunction(callback)) {\n                            //Invalid call\n                            return onError(makeError('requireargs', 'Invalid require call'), errback);\n                        }\n\n                        //If require|exports|module are requested, get the\n                        //value for them from the special handlers. Caveat:\n                        //this only works while module is being defined.\n                        if (relMap && hasProp(handlers, deps)) {\n                            return handlers[deps](registry[relMap.id]);\n                        }\n\n                        //Synchronous access to one module. If require.get is\n                        //available (as in the Node adapter), prefer that.\n                        if (req.get) {\n                            return req.get(context, deps, relMap, localRequire);\n                        }\n\n                        //Normalize module name, if it contains . or ..\n                        map = makeModuleMap(deps, relMap, false, true);\n                        id = map.id;\n\n                        if (!hasProp(defined, id)) {\n                            return onError(makeError('notloaded', 'Module name \"' +\n                                        id +\n                                        '\" has not been loaded yet for context: ' +\n                                        contextName +\n                                        (relMap ? '' : '. Use require([])')));\n                        }\n                        return defined[id];\n                    }\n\n                    //Grab defines waiting in the global queue.\n                    intakeDefines();\n\n                    //Mark all the dependencies as needing to be loaded.\n                    context.nextTick(function () {\n                        //Some defines could have been added since the\n                        //require call, collect them.\n                        intakeDefines();\n\n                        requireMod = getModule(makeModuleMap(null, relMap));\n\n                        //Store if map config should be applied to this require\n                        //call for dependencies.\n                        requireMod.skipMap = options.skipMap;\n\n                        requireMod.init(deps, callback, errback, {\n                            enabled: true\n                        });\n\n                        checkLoaded();\n                    });\n\n                    return localRequire;\n                }\n\n                mixin(localRequire, {\n                    isBrowser: isBrowser,\n\n                    /**\n                     * Converts a module name + .extension into an URL path.\n                     * *Requires* the use of a module name. It does not support using\n                     * plain URLs like nameToUrl.\n                     */\n                    toUrl: function (moduleNamePlusExt) {\n                        var ext,\n                            index = moduleNamePlusExt.lastIndexOf('.'),\n                            segment = moduleNamePlusExt.split('/')[0],\n                            isRelative = segment === '.' || segment === '..';\n\n                        //Have a file extension alias, and it is not the\n                        //dots from a relative path.\n                        if (index !== -1 && (!isRelative || index > 1)) {\n                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);\n                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);\n                        }\n\n                        return context.nameToUrl(normalize(moduleNamePlusExt,\n                                                relMap && relMap.id, true), ext,  true);\n                    },\n\n                    defined: function (id) {\n                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);\n                    },\n\n                    specified: function (id) {\n                        id = makeModuleMap(id, relMap, false, true).id;\n                        return hasProp(defined, id) || hasProp(registry, id);\n                    }\n                });\n\n                //Only allow undef on top level require calls\n                if (!relMap) {\n                    localRequire.undef = function (id) {\n                        //Bind any waiting define() calls to this context,\n                        //fix for #408\n                        takeGlobalQueue();\n\n                        var map = makeModuleMap(id, relMap, true),\n                            mod = getOwn(registry, id);\n\n                        removeScript(id);\n\n                        delete defined[id];\n                        delete urlFetched[map.url];\n                        delete undefEvents[id];\n\n                        //Clean queued defines too. Go backwards\n                        //in array so that the splices do not\n                        //mess up the iteration.\n                        eachReverse(defQueue, function(args, i) {\n                            if(args[0] === id) {\n                                defQueue.splice(i, 1);\n                            }\n                        });\n\n                        if (mod) {\n                            //Hold on to listeners in case the\n                            //module will be attempted to be reloaded\n                            //using a different config.\n                            if (mod.events.defined) {\n                                undefEvents[id] = mod.events;\n                            }\n\n                            cleanRegistry(id);\n                        }\n                    };\n                }\n\n                return localRequire;\n            },\n\n            /**\n             * Called to enable a module if it is still in the registry\n             * awaiting enablement. A second arg, parent, the parent module,\n             * is passed in for context, when this method is overridden by\n             * the optimizer. Not shown here to keep code compact.\n             */\n            enable: function (depMap) {\n                var mod = getOwn(registry, depMap.id);\n                if (mod) {\n                    getModule(depMap).enable();\n                }\n            },\n\n            /**\n             * Internal method used by environment adapters to complete a load event.\n             * A load event could be a script load or just a load pass from a synchronous\n             * load call.\n             * @param {String} moduleName the name of the module to potentially complete.\n             */\n            completeLoad: function (moduleName) {\n                var found, args, mod,\n                    shim = getOwn(config.shim, moduleName) || {},\n                    shExports = shim.exports;\n\n                takeGlobalQueue();\n\n                while (defQueue.length) {\n                    args = defQueue.shift();\n                    if (args[0] === null) {\n                        args[0] = moduleName;\n                        //If already found an anonymous module and bound it\n                        //to this name, then this is some other anon module\n                        //waiting for its completeLoad to fire.\n                        if (found) {\n                            break;\n                        }\n                        found = true;\n                    } else if (args[0] === moduleName) {\n                        //Found matching define call for this script!\n                        found = true;\n                    }\n\n                    callGetModule(args);\n                }\n\n                //Do this after the cycle of callGetModule in case the result\n                //of those calls/init calls changes the registry.\n                mod = getOwn(registry, moduleName);\n\n                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {\n                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {\n                        if (hasPathFallback(moduleName)) {\n                            return;\n                        } else {\n                            return onError(makeError('nodefine',\n                                             'No define call for ' + moduleName,\n                                             null,\n                                             [moduleName]));\n                        }\n                    } else {\n                        //A script that does not call define(), so just simulate\n                        //the call for it.\n                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);\n                    }\n                }\n\n                checkLoaded();\n            },\n\n            /**\n             * Converts a module name to a file path. Supports cases where\n             * moduleName may actually be just an URL.\n             * Note that it **does not** call normalize on the moduleName,\n             * it is assumed to have already been normalized. This is an\n             * internal API, not a public one. Use toUrl for the public API.\n             */\n            nameToUrl: function (moduleName, ext, skipExt) {\n                var paths, syms, i, parentModule, url,\n                    parentPath, bundleId,\n                    pkgMain = getOwn(config.pkgs, moduleName);\n\n                if (pkgMain) {\n                    moduleName = pkgMain;\n                }\n\n                bundleId = getOwn(bundlesMap, moduleName);\n\n                if (bundleId) {\n                    return context.nameToUrl(bundleId, ext, skipExt);\n                }\n\n                //If a colon is in the URL, it indicates a protocol is used and it is just\n                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)\n                //or ends with .js, then assume the user meant to use an url and not a module id.\n                //The slash is important for protocol-less URLs as well as full paths.\n                if (req.jsExtRegExp.test(moduleName)) {\n                    //Just a plain path, not module name lookup, so just return it.\n                    //Add extension if it is included. This is a bit wonky, only non-.js things pass\n                    //an extension, this method probably needs to be reworked.\n                    url = moduleName + (ext || '');\n                } else {\n                    //A module that needs to be converted to a path.\n                    paths = config.paths;\n\n                    syms = moduleName.split('/');\n                    //For each module name segment, see if there is a path\n                    //registered for it. Start with most specific name\n                    //and work up from it.\n                    for (i = syms.length; i > 0; i -= 1) {\n                        parentModule = syms.slice(0, i).join('/');\n\n                        parentPath = getOwn(paths, parentModule);\n                        if (parentPath) {\n                            //If an array, it means there are a few choices,\n                            //Choose the one that is desired\n                            if (isArray(parentPath)) {\n                                parentPath = parentPath[0];\n                            }\n                            syms.splice(0, i, parentPath);\n                            break;\n                        }\n                    }\n\n                    //Join the path parts together, then figure out if baseUrl is needed.\n                    url = syms.join('/');\n                    url += (ext || (/^data\\:|\\?/.test(url) || skipExt ? '' : '.js'));\n                    url = (url.charAt(0) === '/' || url.match(/^[\\w\\+\\.\\-]+:/) ? '' : config.baseUrl) + url;\n                }\n\n                return config.urlArgs ? url +\n                                        ((url.indexOf('?') === -1 ? '?' : '&') +\n                                         config.urlArgs) : url;\n            },\n\n            //Delegates to req.load. Broken out as a separate function to\n            //allow overriding in the optimizer.\n            load: function (id, url) {\n                req.load(context, id, url);\n            },\n\n            /**\n             * Executes a module callback function. Broken out as a separate function\n             * solely to allow the build system to sequence the files in the built\n             * layer in the right sequence.\n             *\n             * @private\n             */\n            execCb: function (name, callback, args, exports) {\n                return callback.apply(exports, args);\n            },\n\n            /**\n             * callback for script loads, used to check status of loading.\n             *\n             * @param {Event} evt the event from the browser for the script\n             * that was loaded.\n             */\n            onScriptLoad: function (evt) {\n                //Using currentTarget instead of target for Firefox 2.0's sake. Not\n                //all old browsers will be supported, but this one was easy enough\n                //to support and still makes sense.\n                if (evt.type === 'load' ||\n                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {\n                    //Reset interactive script so a script node is not held onto for\n                    //to long.\n                    interactiveScript = null;\n\n                    //Pull out the name of the module and the context.\n                    var data = getScriptData(evt);\n                    context.completeLoad(data.id);\n                }\n            },\n\n            /**\n             * Callback for script errors.\n             */\n            onScriptError: function (evt) {\n                var data = getScriptData(evt);\n                if (!hasPathFallback(data.id)) {\n                    return onError(makeError('scripterror', 'Script error for: ' + data.id, evt, [data.id]));\n                }\n            }\n        };\n\n        context.require = context.makeRequire();\n        return context;\n    }\n\n    /**\n     * Main entry point.\n     *\n     * If the only argument to require is a string, then the module that\n     * is represented by that string is fetched for the appropriate context.\n     *\n     * If the first argument is an array, then it will be treated as an array\n     * of dependency string names to fetch. An optional function callback can\n     * be specified to execute when all of those dependencies are available.\n     *\n     * Make a local req variable to help Caja compliance (it assumes things\n     * on a require that are not standardized), and to give a short\n     * name for minification/local scope use.\n     */\n    req = requirejs = function (deps, callback, errback, optional) {\n\n        //Find the right context, use default\n        var context, config,\n            contextName = defContextName;\n\n        // Determine if have config object in the call.\n        if (!isArray(deps) && typeof deps !== 'string') {\n            // deps is a config object\n            config = deps;\n            if (isArray(callback)) {\n                // Adjust args if there are dependencies\n                deps = callback;\n                callback = errback;\n                errback = optional;\n            } else {\n                deps = [];\n            }\n        }\n\n        if (config && config.context) {\n            contextName = config.context;\n        }\n\n        context = getOwn(contexts, contextName);\n        if (!context) {\n            context = contexts[contextName] = req.s.newContext(contextName);\n        }\n\n        if (config) {\n            context.configure(config);\n        }\n\n        return context.require(deps, callback, errback);\n    };\n\n    /**\n     * Support require.config() to make it easier to cooperate with other\n     * AMD loaders on globally agreed names.\n     */\n    req.config = function (config) {\n        return req(config);\n    };\n\n    /**\n     * Execute something after the current tick\n     * of the event loop. Override for other envs\n     * that have a better solution than setTimeout.\n     * @param  {Function} fn function to execute later.\n     */\n    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {\n        setTimeout(fn, 4);\n    } : function (fn) { fn(); };\n\n    /**\n     * Export require as a global, but only if it does not already exist.\n     */\n    if (!require) {\n        require = req;\n    }\n\n    req.version = version;\n\n    //Used to filter out dependencies that are already paths.\n    req.jsExtRegExp = /^\\/|:|\\?|\\.js$/;\n    req.isBrowser = isBrowser;\n    s = req.s = {\n        contexts: contexts,\n        newContext: newContext\n    };\n\n    //Create default context.\n    req({});\n\n    //Exports some context-sensitive methods on global require.\n    each([\n        'toUrl',\n        'undef',\n        'defined',\n        'specified'\n    ], function (prop) {\n        //Reference from contexts instead of early binding to default context,\n        //so that during builds, the latest instance of the default context\n        //with its config gets used.\n        req[prop] = function () {\n            var ctx = contexts[defContextName];\n            return ctx.require[prop].apply(ctx, arguments);\n        };\n    });\n\n    if (isBrowser) {\n        head = s.head = document.getElementsByTagName('head')[0];\n        //If BASE tag is in play, using appendChild is a problem for IE6.\n        //When that browser dies, this can be removed. Details in this jQuery bug:\n        //http://dev.jquery.com/ticket/2709\n        baseElement = document.getElementsByTagName('base')[0];\n        if (baseElement) {\n            head = s.head = baseElement.parentNode;\n        }\n    }\n\n    /**\n     * Any errors that require explicitly generates will be passed to this\n     * function. Intercept/override it if you want custom error handling.\n     * @param {Error} err the error object.\n     */\n    req.onError = defaultOnError;\n\n    /**\n     * Creates the node for the load command. Only used in browser envs.\n     */\n    req.createNode = function (config, moduleName, url) {\n        var node = config.xhtml ?\n                document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :\n                document.createElement('script');\n        node.type = config.scriptType || 'text/javascript';\n        node.charset = 'utf-8';\n        node.async = true;\n        return node;\n    };\n\n    /**\n     * Does the request to load a module for the browser case.\n     * Make this a separate function to allow other environments\n     * to override it.\n     *\n     * @param {Object} context the require context to find state.\n     * @param {String} moduleName the name of the module.\n     * @param {Object} url the URL to the module.\n     */\n    req.load = function (context, moduleName, url) {\n        var config = (context && context.config) || {},\n            node;\n        if (isBrowser) {\n            //In the browser so use a script tag\n            node = req.createNode(config, moduleName, url);\n\n            node.setAttribute('data-requirecontext', context.contextName);\n            node.setAttribute('data-requiremodule', moduleName);\n\n            //Set up load listener. Test attachEvent first because IE9 has\n            //a subtle issue in its addEventListener and script onload firings\n            //that do not match the behavior of all other browsers with\n            //addEventListener support, which fire the onload event for a\n            //script right after the script execution. See:\n            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution\n            //UNFORTUNATELY Opera implements attachEvent but does not follow the script\n            //script execution mode.\n            if (node.attachEvent &&\n                    //Check if node.attachEvent is artificially added by custom script or\n                    //natively supported by browser\n                    //read https://github.com/jrburke/requirejs/issues/187\n                    //if we can NOT find [native code] then it must NOT natively supported.\n                    //in IE8, node.attachEvent does not have toString()\n                    //Note the test for \"[native code\" with no closing brace, see:\n                    //https://github.com/jrburke/requirejs/issues/273\n                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&\n                    !isOpera) {\n                //Probably IE. IE (at least 6-8) do not fire\n                //script onload right after executing the script, so\n                //we cannot tie the anonymous define call to a name.\n                //However, IE reports the script as being in 'interactive'\n                //readyState at the time of the define call.\n                useInteractive = true;\n\n                node.attachEvent('onreadystatechange', context.onScriptLoad);\n                //It would be great to add an error handler here to catch\n                //404s in IE9+. However, onreadystatechange will fire before\n                //the error handler, so that does not help. If addEventListener\n                //is used, then IE will fire error before load, but we cannot\n                //use that pathway given the connect.microsoft.com issue\n                //mentioned above about not doing the 'script execute,\n                //then fire the script load event listener before execute\n                //next script' that other browsers do.\n                //Best hope: IE10 fixes the issues,\n                //and then destroys all installs of IE 6-9.\n                //node.attachEvent('onerror', context.onScriptError);\n            } else {\n                node.addEventListener('load', context.onScriptLoad, false);\n                node.addEventListener('error', context.onScriptError, false);\n            }\n            node.src = url;\n\n            //For some cache cases in IE 6-8, the script executes before the end\n            //of the appendChild execution, so to tie an anonymous define\n            //call to the module name (which is stored on the node), hold on\n            //to a reference to this node, but clear after the DOM insertion.\n            currentlyAddingScript = node;\n            if (baseElement) {\n                head.insertBefore(node, baseElement);\n            } else {\n                head.appendChild(node);\n            }\n            currentlyAddingScript = null;\n\n            return node;\n        } else if (isWebWorker) {\n            try {\n                //In a web worker, use importScripts. This is not a very\n                //efficient use of importScripts, importScripts will block until\n                //its script is downloaded and evaluated. However, if web workers\n                //are in play, the expectation that a build has been done so that\n                //only one script needs to be loaded anyway. This may need to be\n                //reevaluated if other use cases become common.\n                importScripts(url);\n\n                //Account for anonymous modules\n                context.completeLoad(moduleName);\n            } catch (e) {\n                context.onError(makeError('importscripts',\n                                'importScripts failed for ' +\n                                    moduleName + ' at ' + url,\n                                e,\n                                [moduleName]));\n            }\n        }\n    };\n\n    function getInteractiveScript() {\n        if (interactiveScript && interactiveScript.readyState === 'interactive') {\n            return interactiveScript;\n        }\n\n        eachReverse(scripts(), function (script) {\n            if (script.readyState === 'interactive') {\n                return (interactiveScript = script);\n            }\n        });\n        return interactiveScript;\n    }\n\n    //Look for a data-main script attribute, which could also adjust the baseUrl.\n    if (isBrowser && !cfg.skipDataMain) {\n        //Figure out baseUrl. Get it from the script tag with require.js in it.\n        eachReverse(scripts(), function (script) {\n            //Set the 'head' where we can append children by\n            //using the script's parent.\n            if (!head) {\n                head = script.parentNode;\n            }\n\n            //Look for a data-main attribute to set main script for the page\n            //to load. If it is there, the path to data main becomes the\n            //baseUrl, if it is not already set.\n            dataMain = script.getAttribute('data-main');\n            if (dataMain) {\n                //Preserve dataMain in case it is a path (i.e. contains '?')\n                mainScript = dataMain;\n\n                //Set final baseUrl if there is not already an explicit one.\n                if (!cfg.baseUrl) {\n                    //Pull off the directory of data-main for use as the\n                    //baseUrl.\n                    src = mainScript.split('/');\n                    mainScript = src.pop();\n                    subPath = src.length ? src.join('/')  + '/' : './';\n\n                    cfg.baseUrl = subPath;\n                }\n\n                //Strip off any trailing .js since mainScript is now\n                //like a module name.\n                mainScript = mainScript.replace(jsSuffixRegExp, '');\n\n                 //If mainScript is still a path, fall back to dataMain\n                if (req.jsExtRegExp.test(mainScript)) {\n                    mainScript = dataMain;\n                }\n\n                //Put the data-main script in the files to load.\n                cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];\n\n                return true;\n            }\n        });\n    }\n\n    /**\n     * The function that handles definitions of modules. Differs from\n     * require() in that a string for the module should be the first argument,\n     * and the function to execute after dependencies are loaded should\n     * return a value to define the module corresponding to the first argument's\n     * name.\n     */\n    define = function (name, deps, callback) {\n        var node, context;\n\n        //Allow for anonymous modules\n        if (typeof name !== 'string') {\n            //Adjust args appropriately\n            callback = deps;\n            deps = name;\n            name = null;\n        }\n\n        //This module may not have dependencies\n        if (!isArray(deps)) {\n            callback = deps;\n            deps = null;\n        }\n\n        //If no name, and callback is a function, then figure out if it a\n        //CommonJS thing with dependencies.\n        if (!deps && isFunction(callback)) {\n            deps = [];\n            //Remove comments from the callback string,\n            //look for require calls, and pull them into the dependencies,\n            //but only if there are function args.\n            if (callback.length) {\n                callback\n                    .toString()\n                    .replace(commentRegExp, '')\n                    .replace(cjsRequireRegExp, function (match, dep) {\n                        deps.push(dep);\n                    });\n\n                //May be a CommonJS thing even without require calls, but still\n                //could use exports, and module. Avoid doing exports and module\n                //work though if it just needs require.\n                //REQUIRES the function to expect the CommonJS variables in the\n                //order listed below.\n                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);\n            }\n        }\n\n        //If in IE 6-8 and hit an anonymous define() call, do the interactive\n        //work.\n        if (useInteractive) {\n            node = currentlyAddingScript || getInteractiveScript();\n            if (node) {\n                if (!name) {\n                    name = node.getAttribute('data-requiremodule');\n                }\n                context = contexts[node.getAttribute('data-requirecontext')];\n            }\n        }\n\n        //Always save off evaluating the def call until the script onload handler.\n        //This allows multiple modules to be in a file without prematurely\n        //tracing dependencies, and allows for anonymous module support,\n        //where the module name is not known until the script onload event\n        //occurs. If no context, use the global queue, and get it processed\n        //in the onscript load callback.\n        (context ? context.defQueue : globalDefQueue).push([name, deps, callback]);\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n\n\n    /**\n     * Executes the text. Normally just uses eval, but can be modified\n     * to use a better, environment-specific call. Only used for transpiling\n     * loader plugins, not for plain JS modules.\n     * @param {String} text the text to execute/evaluate.\n     */\n    req.exec = function (text) {\n        /*jslint evil: true */\n        return eval(text);\n    };\n\n    //Set up with config info.\n    req(cfg);\n}(this));\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/demo/kitchen-sink/token_tooltip.js":"/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar dom = require(\"ace/lib/dom\");\nvar oop = require(\"ace/lib/oop\");\nvar event = require(\"ace/lib/event\");\nvar Range = require(\"ace/range\").Range;\nvar Tooltip = require(\"ace/tooltip\").Tooltip;\n\nfunction TokenTooltip (editor) {\n    if (editor.tokenTooltip)\n        return;\n    Tooltip.call(this, editor.container);\n    editor.tokenTooltip = this;\n    this.editor = editor;\n\n    this.update = this.update.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseOut = this.onMouseOut.bind(this);\n    event.addListener(editor.renderer.scroller, \"mousemove\", this.onMouseMove);\n    event.addListener(editor.renderer.content, \"mouseout\", this.onMouseOut);\n}\n\noop.inherits(TokenTooltip, Tooltip);\n\n(function(){\n    this.token = {};\n    this.range = new Range();\n    \n    this.update = function() {\n        this.$timer = null;\n        \n        var r = this.editor.renderer;\n        if (this.lastT - (r.timeStamp || 0) > 1000) {\n            r.rect = null;\n            r.timeStamp = this.lastT;\n            this.maxHeight = window.innerHeight;\n            this.maxWidth = window.innerWidth;\n        }\n\n        var canvasPos = r.rect || (r.rect = r.scroller.getBoundingClientRect());\n        var offset = (this.x + r.scrollLeft - canvasPos.left - r.$padding) / r.characterWidth;\n        var row = Math.floor((this.y + r.scrollTop - canvasPos.top) / r.lineHeight);\n        var col = Math.round(offset);\n\n        var screenPos = {row: row, column: col, side: offset - col > 0 ? 1 : -1};\n        var session = this.editor.session;\n        var docPos = session.screenToDocumentPosition(screenPos.row, screenPos.column);\n        var token = session.getTokenAt(docPos.row, docPos.column);\n\n        if (!token && !session.getLine(docPos.row)) {\n            token = {\n                type: \"\",\n                value: \"\",\n                state: session.bgTokenizer.getState(0)\n            };\n        }\n        if (!token) {\n            session.removeMarker(this.marker);\n            this.hide();\n            return;\n        }\n\n        var tokenText = token.type;\n        if (token.state)\n            tokenText += \"|\" + token.state;\n        if (token.merge)\n            tokenText += \"\\n  merge\";\n        if (token.stateTransitions)\n            tokenText += \"\\n  \" + token.stateTransitions.join(\"\\n  \");\n\n        if (this.tokenText != tokenText) {\n            this.setText(tokenText);\n            this.width = this.getWidth();\n            this.height = this.getHeight();\n            this.tokenText = tokenText;\n        }\n\n        this.show(null, this.x, this.y);\n\n        this.token = token;\n        session.removeMarker(this.marker);\n        this.range = new Range(docPos.row, token.start, docPos.row, token.start + token.value.length);\n        this.marker = session.addMarker(this.range, \"ace_bracket\", \"text\");\n    };\n    \n    this.onMouseMove = function(e) {\n        this.x = e.clientX;\n        this.y = e.clientY;\n        if (this.isOpen) {\n            this.lastT = e.timeStamp;\n            this.setPosition(this.x, this.y);\n        }\n        if (!this.$timer)\n            this.$timer = setTimeout(this.update, 100);\n    };\n\n    this.onMouseOut = function(e) {\n        if (e && e.currentTarget.contains(e.relatedTarget))\n            return;\n        this.hide();\n        this.editor.session.removeMarker(this.marker);\n        this.$timer = clearTimeout(this.$timer);\n    };\n\n    this.setPosition = function(x, y) {\n        if (x + 10 + this.width > this.maxWidth)\n            x = window.innerWidth - this.width - 10;\n        if (y > window.innerHeight * 0.75 || y + 20 + this.height > this.maxHeight)\n            y = y - this.height - 30;\n\n        Tooltip.prototype.setPosition.call(this, x + 10, y + 20);\n    };\n\n    this.destroy = function() {\n        this.onMouseOut();\n        event.removeListener(this.editor.renderer.scroller, \"mousemove\", this.onMouseMove);\n        event.removeListener(this.editor.renderer.content, \"mouseout\", this.onMouseOut);\n        delete this.editor.tokenTooltip;\n    };\n\n}).call(TokenTooltip.prototype);\n\nexports.TokenTooltip = TokenTooltip;\n\n});\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/demo/kitchen-sink/util.js":"/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar dom = require(\"ace/lib/dom\");\nvar event = require(\"ace/lib/event\");\n\nvar EditSession = require(\"ace/edit_session\").EditSession;\nvar UndoManager = require(\"ace/undomanager\").UndoManager;\nvar Renderer = require(\"ace/virtual_renderer\").VirtualRenderer;\nvar Editor = require(\"ace/editor\").Editor;\nvar MultiSelect = require(\"ace/multi_select\").MultiSelect;\n\nvar urlOptions = {}\ntry {\n    window.location.search.slice(1).split(/[&]/).forEach(function(e) {\n        var parts = e.split(\"=\");\n        urlOptions[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n    });\n} catch(e) {\n    console.error(e);\n}\nexports.createEditor = function(el) {\n    return new Editor(new Renderer(el));\n};\n\nexports.createSplitEditor = function(el) {\n    if (typeof(el) == \"string\")\n        el = document.getElementById(el);\n\n    var e0 = document.createElement(\"div\");\n    var s = document.createElement(\"splitter\");\n    var e1 = document.createElement(\"div\");\n    el.appendChild(e0);\n    el.appendChild(e1);\n    el.appendChild(s);\n    e0.style.position = e1.style.position = s.style.position = \"absolute\";\n    el.style.position = \"relative\";\n    var split = {$container: el};\n\n    split.editor0 = split[0] = new Editor(new Renderer(e0));\n    split.editor1 = split[1] = new Editor(new Renderer(e1));\n    split.splitter = s;\n\n    s.ratio = 0.5;\n\n    split.resize = function resize(){\n        var height = el.parentNode.clientHeight - el.offsetTop;\n        var total = el.clientWidth;\n        var w1 = total * s.ratio;\n        var w2 = total * (1- s.ratio);\n        s.style.left = w1 - 1 + \"px\";\n        s.style.height = el.style.height = height + \"px\";\n\n        var st0 = split[0].container.style;\n        var st1 = split[1].container.style;\n        st0.width = w1 + \"px\";\n        st1.width = w2 + \"px\";\n        st0.left = 0 + \"px\";\n        st1.left = w1 + \"px\";\n\n        st0.top = st1.top = \"0px\";\n        st0.height = st1.height = height + \"px\";\n\n        split[0].resize();\n        split[1].resize();\n    };\n\n    split.onMouseDown = function(e) {\n        var rect = el.getBoundingClientRect();\n        var x = e.clientX;\n        var y = e.clientY;\n\n        var button = e.button;\n        if (button !== 0) {\n            return;\n        }\n\n        var onMouseMove = function(e) {\n            x = e.clientX;\n            y = e.clientY;\n        };\n        var onResizeEnd = function(e) {\n            clearInterval(timerId);\n        };\n\n        var onResizeInterval = function() {\n            s.ratio = (x - rect.left) / rect.width;\n            split.resize();\n        };\n\n        event.capture(s, onMouseMove, onResizeEnd);\n        var timerId = setInterval(onResizeInterval, 40);\n\n        return e.preventDefault();\n    };\n\n\n\n    event.addListener(s, \"mousedown\", split.onMouseDown);\n    event.addListener(window, \"resize\", split.resize);\n    split.resize();\n    return split;\n};\n\n/***************************/\nexports.stripLeadingComments = function(str) {\n    if(str.slice(0,2)=='/*') {\n        var j = str.indexOf('*/')+2;\n        str = str.substr(j);\n    }\n    return str.trim() + \"\\n\";\n};\n\n/***************************/\nexports.saveOption = function(el, val) {\n    if (!el.onchange && !el.onclick)\n        return;\n\n    if (\"checked\" in el) {\n        if (val !== undefined)\n            el.checked = val;\n\n        localStorage && localStorage.setItem(el.id, el.checked ? 1 : 0);\n    }\n    else {\n        if (val !== undefined)\n            el.value = val;\n\n        localStorage && localStorage.setItem(el.id, el.value);\n    }\n};\n\nexports.bindCheckbox = function(id, callback, noInit) {\n    if (typeof id == \"string\")\n        var el = document.getElementById(id);\n    else {\n        var el = id;\n        id = el.id;\n    }\n    var el = document.getElementById(id);\n    \n    if (urlOptions[id])\n        el.checked = urlOptions[id] == \"1\";\n    else if (localStorage && localStorage.getItem(id))\n        el.checked = localStorage.getItem(id) == \"1\";\n\n    var onCheck = function() {\n        callback(!!el.checked);\n        exports.saveOption(el);\n    };\n    el.onclick = onCheck;\n    noInit || onCheck();\n    return el;\n};\n\nexports.bindDropdown = function(id, callback, noInit) {\n    if (typeof id == \"string\")\n        var el = document.getElementById(id);\n    else {\n        var el = id;\n        id = el.id;\n    }\n    \n    if (urlOptions[id])\n        el.value = urlOptions[id];\n    else if (localStorage && localStorage.getItem(id))\n        el.value = localStorage.getItem(id);\n\n    var onChange = function() {\n        callback(el.value);\n        exports.saveOption(el);\n    };\n\n    el.onchange = onChange;\n    noInit || onChange();\n};\n\nexports.fillDropdown = function(el, values) {\n    if (typeof el == \"string\")\n        el = document.getElementById(el);\n\n    dropdown(values).forEach(function(e) {\n        el.appendChild(e);\n    });\n};\n\nfunction elt(tag, attributes, content) {\n    var el = dom.createElement(tag);\n    if (typeof content == \"string\") {\n        el.appendChild(document.createTextNode(content));\n    } else if (content) {\n        content.forEach(function(ch) {\n            el.appendChild(ch);\n        });\n    }\n\n    for (var i in attributes)\n        el.setAttribute(i, attributes[i]);\n    return el;\n}\n\nfunction optgroup(values) {\n    return values.map(function(item) {\n        if (typeof item == \"string\")\n            item = {name: item, caption: item};\n        return elt(\"option\", {value: item.value || item.name}, item.caption || item.desc);\n    });\n}\n\nfunction dropdown(values) {\n    if (Array.isArray(values))\n        return optgroup(values);\n\n    return Object.keys(values).map(function(i) {\n        return elt(\"optgroup\", {\"label\": i}, optgroup(values[i]));\n    });\n}\n\n\n});\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/demo/static-highlighter/server.js":"/**\n * Simple node.js server, which generates the synax highlighted version of itself \n * using the Ace modes and themes on the server and serving a static web page.\n */\n\n// include ace search path and modules\nrequire(\"amd-loader\");\n\nvar http = require(\"http\");\nvar fs = require(\"fs\");\nvar resolve = require(\"path\").resolve;\n\n// load the highlighter and the desired mode and theme\nvar highlighter = require(\"../../lib/ace/ext/static_highlight\");\nvar JavaScriptMode = require(\"../../lib/ace/mode/javascript\").Mode;\nvar theme = require(\"../../lib/ace/theme/twilight\");\n\nvar port = process.env.PORT || 2222;\n\nhttp.createServer(function(req, res) {\n    var url = req.url;\n    var path = /[^#?\\x00]*/.exec(url)[0];\n    var root = resolve(__dirname + \"/../../\").replace(/\\\\/g, \"/\");\n    path = resolve(root + \"/\" + path).replace(/\\\\/g, \"/\");\n    if (path.indexOf(root + \"/\") != 0)\n        path = __filename;\n    res.writeHead(200, {\"Content-Type\": \"text/html; charset=utf-8\"});\n    fs.readFile(path, \"utf8\", function(err, data) {\n        if (err) data = err.message;\n        var highlighted = highlighter.render(data, new JavaScriptMode(), theme);\n        res.end(\n            '<html><body>\\n' +\n                '<style type=\"text/css\" media=\"screen\">\\n' +\n                    highlighted.css +\n                '</style>\\n' + \n                highlighted.html +\n            '</body></html>'\n        );\n    });\n}).listen(port);\n\nconsole.log(\"Listening on port \" + port);","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/tool/templates/highlight_rules.js":"/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2012, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\n/* This file was autogenerated from %name% (uuid: %uuid%) */\n/****************************************************************************************\n * IT MIGHT NOT BE PERFECT ...But it's a good start from an existing *.tmlanguage file. *\n * fileTypes                                                                            *\n ****************************************************************************************/\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar %language%HighlightRules = function() {\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    this.$rules = %languageTokens%\n    \n    this.normalizeRules();\n};\n\n%language%HighlightRules.metaData = %metaData%\n\n\noop.inherits(%language%HighlightRules, TextHighlightRules);\n\nexports.%language%HighlightRules = %language%HighlightRules;\n});","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/tool/templates/mode.js":"/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2012, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\n/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar %language%HighlightRules = require(\"./%languageHighlightFilename%_highlight_rules\").%language%HighlightRules;\n// TODO: pick appropriate fold mode\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = %language%HighlightRules;\n    this.foldingRules = new FoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    // this.lineCommentStart = \"%lineCommentStart%\";\n    // this.blockComment = {start: \"%blockCommentStart%\", end: \"%blockCommentEnd%\"};\n    // Extra logic goes here.\n    this.$id = \"ace/mode/%languageHighlightFilename%\"\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/tool/templates/snippets.js":"define(function(require, exports, module) {\n\"use strict\";\n\nexports.snippetText = require(\"../requirejs/text!./%modeName%.snippets\");\nexports.scope = \"%modeName%\";\n\n});\n","/home/travis/build/npmtest/node-npmtest-ace-code-editor/node_modules/ace-code-editor/tool/templates/theme.js":"/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\ndefine(function(require, exports, module) {\n\nexports.isDark = %isDark%;\nexports.cssClass = \"%cssClass%\";\nexports.cssText = %css%;\n\nvar dom = require(\"../lib/dom\");\ndom.importCssString(exports.cssText, exports.cssClass);\n});\n"}